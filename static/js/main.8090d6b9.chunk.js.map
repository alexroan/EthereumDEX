{"version":3,"sources":["helpers.js","store/selectors/web3.js","components/Navbar.js","store/selectors/contracts.js","store/actions.js","store/interactions/subscriptions.js","store/interactions/orders.js","store/selectors/decorators/orders.js","store/selectors/orders.js","components/Spinner.js","components/Trades.js","components/OrderBook.js","components/MyTransactions.js","components/PriceChart.config.js","store/selectors/decorators/priceChart.js","store/selectors/priceChart.js","components/PriceChart.js","store/interactions/contracts.js","components/BalanceForm.js","components/BalanceTable.js","components/Balance.js","components/OrderForm.js","components/NewOrder.js","components/Content.js","store/interactions/web3.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["ETHER_ADDRESS","RED","DECIMALS","Math","pow","tokens","wei","ether","formatBalance","balance","round","web3Selector","createSelector","state","get","w","account","accountSelector","a","etherBalanceSelector","Navbar","react_default","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","this","props","target","rel","Component","connect","tokenLoaded","tokenSelector","tl","t","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","balancesLoadingSelector","bl","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","eda","etherWithdrawAmountSelector","ewa","tokenDepositAmountSelector","tda","tokenWithdrawAmountSelector","twa","web3AccountLoaded","token","exchange","cancelledOrdersLoaded","cancelledOrders","ordersLoaded","orders","tradesLoaded","trades","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","subscribeToEvents","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","events","Cancel","error","event","order","returnValues","Trade","Deposit","Withdraw","Order","stop","_x","_x2","apply","arguments","loadAllOrders","cancelStream","tradeStream","orderStream","getPastEvents","fromBlock","toBlock","sent","map","t0","console","log","decorateMyFilledOrder","orderType","_user","_tokenGive","objectSpread","orderTypeClass","orderSign","decorateMyOpenOrder","decorateOrderBookOrder","orderFillAction","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","_amountGive","_amountGet","tokenPrice","formattedTimestamp","moment","unix","_timestamp","format","tokenPriceClass","price","col","co","ol","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","sort","b","openOrders","all","cancelled","filled","reject","orderFilled","some","_id","orderCancelled","orderBookLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","myFilledOrdersLoadedSelector","loaded","myFilledOrdersSelector","decorateMyFilledOrders","filter","_userFill","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","orderCancellingSelector","oc","orderFillingSelector","of","buyOrderSelector","bo","sellOrderSelector","Spinner","Trades","concat","key","renderOrder","OverlayTrigger","placement","overlay","Tooltip","id","onClick","methods","fillOrder","send","from","on","hash","window","alert","OrderBook","showOrderBook","orderBook","orderFilling","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","Tabs","defaultActiveKey","Tab","eventKey","title","showMyFilledOrders","myFilledOrders","openOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","x","formatter","y","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","buildGraphData","Date","startOf","keys","hour","hourGroup","open","close","length","high","maxBy","low","minBy","priceChartLoadedSelector","priceChartSelector","lastOrder","secondLastOrder","lastPrice","lastPriceChange","series","data","showPriceChart","priceChart","react_apexcharts_min_default","options","height","PriceChart","showChart","chartData","loadToken","web3","networkId","eth","Contract","Token","abi","networks","address","abrupt","_x3","loadExchange","_ref2","_callee2","_context2","Exchange","_x4","_x5","_x6","loadBalances","_ref3","_callee3","etherBalance","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","_context3","getBalance","balanceOf","call","_x7","_x8","_x9","_x10","_x11","depositEther","_ref4","_callee4","etherDepositAmount","amount","_context4","utils","toWei","value","err","_x12","_x13","_x14","_x15","_x16","withdrawEther","_ref5","_callee5","etherWithdrawAmount","_context5","_x17","_x18","_x19","_x20","_x21","depositToken","_ref6","_callee6","_context6","approve","_x22","_x23","_x24","_x25","_x26","_x27","withdrawToken","_ref7","_callee7","tokenWithdrawAmount","_context7","_x28","_x29","_x30","_x31","_x32","_x33","BalanceForm","_this$props","onSubmit","placeHolder","onChange","buttonText","placeholder","required","BalanceTable","hasHead","tokenName","walletAmount","exchangeAmount","toString","tableRow","Balance","loadBlockchainData","showForm","tokenDepositAmount","components_BalanceTable","components_BalanceForm","preventDefault","balancesLoading","OrderForm","amountOnChange","priceOnChange","buyOrSell","buyOrder","sellOrder","showBuyTotal","showSellTotal","components_OrderForm","tokenGet","amountGet","amountGive","makeOrder","makeBuyOrder","tokenGive","makeSellOrder","NewOrder","making","Content","components_Balance","components_NewOrder","components_OrderBook","components_PriceChart","components_MyTransactions","components_Trades","ethereum","Web3","givenProvider","loadWeb3","connection","loadAccount","accounts","enable","getAccounts","App","net","getId","components_Navbar","contractsLoaded","components_Content","rootReducer","combineReducers","action","contract","index","toConsumableArray","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preLoadedState","Boolean","location","hostname","match","ReactDOM","render","es","store","createStore","applyMiddleware","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8090d6b9.chunk.js","sourcesContent":["export const ETHER_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const GREEN = \"success\";\nexport const RED = \"danger\";\nexport const DECIMALS = (10**18);\n\n//calculate without importing web3\nexport const tokens = (wei) => {\n    if(wei) {\n        return (wei / DECIMALS);\n    }\n}\n\nexport const ether = tokens;\n\nexport const formatBalance = (balance) => {\n    const precision = 100; //2 dm\n    balance = ether(balance);\n    balance = Math.round(balance * precision) / precision;\n    return balance;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\nconst web3 = state => get(state, 'web3.connection');\nexport const web3Selector = createSelector(web3, w => w);\n\nexport const account = state => get(state, 'web3.account');\nexport const accountSelector = createSelector(account, a => a);\n\nconst etherBalance = state => get(state, 'web3.balance');\nexport const etherBalanceSelector = createSelector(etherBalance, (balance) => {\n    return formatBalance(balance);\n});","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {accountSelector} from '../store/selectors/web3.js';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <a className=\"navbar-brand\" href=\"/#\">Token DEX</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <a \n                            className=\"nav-link small\"\n                            href={'https://etherscan.io/address/' + this.props.account}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.props.account}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    return {\n        account: accountSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\n\nexport const tokenLoaded = state => get(state, 'token.loaded', false);\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl);\n\nconst token = state => get(state, 'token.contract');\nexport const tokenSelector = createSelector(token, t => t);\n\nexport const exchangeLoaded = state => get(state, 'exchange.loaded', false);\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el);\n\nexport const exchange = state => get(state, 'exchange.contract', false);\nexport const exchangeSelector = createSelector(exchange, e => e);\n\nexport const contractsLoadedSelector = createSelector(\n    tokenLoaded, \n    exchangeLoaded, \n    (tl, el) => (tl && el)\n);\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', false);\nexport const balancesLoadingSelector = createSelector(balancesLoading, bl => bl);\n\nconst tokenBalance = state => get(state, 'token.balance');\nexport const tokenBalanceSelector = createSelector(tokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance');\nexport const exchangeEtherBalanceSelector = createSelector(exchangeEtherBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance');\nexport const exchangeTokenBalanceSelector = createSelector(exchangeTokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', 0);\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, eda => eda);\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', 0);\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, ewa => ewa);\n\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', 0);\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, tda => tda);\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', 0);\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, twa => twa);","export function web3Loaded(connection){\n    return {\n        type: 'WEB3_LOADED',\n        connection\n    }\n}\n\nexport function web3AccountLoaded(account){\n    return {\n        type: 'WEB3_ACCOUNT_LOADED',\n        account\n    }\n}\n\nexport function tokenLoaded(token){\n    return {\n        type: 'TOKEN_LOADED',\n        token\n    }\n}\n\nexport function exchangeLoaded(exchange){\n    return {\n        type: 'EXCHANGE_LOADED',\n        exchange\n    }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders){\n    return {\n        type: 'CANCELLED_ORDERS_LOADED',\n        cancelledOrders\n    }\n}\n\nexport function ordersLoaded(orders){\n    return {\n        type: 'ORDERS_LOADED',\n        orders\n    }\n}\n\nexport function tradesLoaded(trades){\n    return {\n        type: 'TRADES_LOADED',\n        trades\n    }\n}\n\nexport function orderCancelling(){\n    return {\n        type: 'ORDER_CANCELLING',\n    }\n}\n\nexport function orderCancelled(order){\n    return {\n        type: 'ORDER_CANCELLED',\n        order\n    }\n}\n\nexport function orderFilling(){\n    return {\n        type: 'ORDER_FILLING'\n    }\n}\n\nexport function orderFilled(order){\n    return {\n        type: 'ORDER_FILLED',\n        order\n    }\n}\n\nexport function etherBalanceLoaded(balance){\n    return {\n        type: 'ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function tokenBalanceLoaded(balance){\n    return {\n        type: 'TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeEtherBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeTokenBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function balancesLoaded(){\n    return {\n        type: 'BALANCES_LOADED'\n    }\n}\n\nexport function balancesLoading(){\n    return {\n        type: 'BALANCES_LOADING'\n    }\n}\n\nexport function etherDepositAmountChanged(amount){\n    return {\n        type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function etherWithdrawAmountChanged(amount){\n    return {\n        type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenDepositAmountChanged(amount){\n    return {\n        type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenWithdrawAmountChanged(amount){\n    return {\n        type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderAmountChanged(amount) {\n    return {\n        type: 'BUY_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderPriceChanged(price) {\n    return {\n        type: 'BUY_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function buyOrderMaking(){\n    return {\n        type: 'BUY_ORDER_MAKING'\n    }\n}\n\nexport function sellOrderAmountChanged(amount) {\n    return {\n        type: 'SELL_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function sellOrderPriceChanged(price) {\n    return {\n        type: 'SELL_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function sellOrderMaking(){\n    return {\n        type: 'SELL_ORDER_MAKING'\n    }\n}\n\nexport function orderMade(order){\n    return {\n        type: 'ORDER_MADE',\n        order\n    }\n}","import {orderCancelled, orderFilled, balancesLoaded, orderMade} from \"../actions\";\n\n//Subscriptions\nexport const subscribeToEvents = async (dispatch, exchange) => {\n    exchange.events.Cancel({}, (error, event) => {\n        dispatch(orderCancelled(event.returnValues))\n    });\n\n    exchange.events.Trade({}, (error, event) => {\n        dispatch(orderFilled(event.returnValues));\n    });\n\n    exchange.events.Deposit({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Withdraw({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Order({}, (error, event) => {\n        dispatch(orderMade(event.returnValues));\n    })\n}","import {\n    cancelledOrdersLoaded,\n    ordersLoaded,\n    tradesLoaded,\n    orderCancelling,\n    orderFilling,\n    buyOrderMaking\n} from \"../actions\";\nimport {ETHER_ADDRESS} from '../../helpers';\n\nexport const loadAllOrders = async (dispatch, exchange) => {\n    try{\n        // Cancelled\n        const cancelStream = await exchange.getPastEvents(\"Cancel\", {fromBlock: 0, toBlock: 'latest'});\n        const cancelledOrders = cancelStream.map((event) => event.returnValues);\n        dispatch(cancelledOrdersLoaded(cancelledOrders));\n        // Trade events (filles)\n        const tradeStream = await exchange.getPastEvents(\"Trade\", {fromBlock: 0, toBlock: 'latest'});\n        const trades = tradeStream.map((event) => event.returnValues);\n        dispatch(tradesLoaded(trades));\n        // Open orders\n        const orderStream = await exchange.getPastEvents(\"Order\", {fromBlock: 0, toBlock: 'latest'});\n        const orders = orderStream.map((event) => event.returnValues);\n        dispatch(ordersLoaded(orders));\n\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.cancelOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderCancelling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.fillOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderFilling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = token.options.address;\n    const amountGet = web3.utils.toWei(order.amount, 'ether');\n    const tokenGive = ETHER_ADDRESS;\n    const amountGive = web3.utils.toWei((order.amount * order.price).toString(), 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = ETHER_ADDRESS;\n    const amountGet = web3.utils.toWei((order.amount * order.price).toString(), 'ether');\n    const tokenGive = token.options.address;\n    const amountGive = web3.utils.toWei(order.amount, 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}","import {ether, tokens, GREEN, RED, ETHER_ADDRESS} from '../../../helpers';\nimport moment from 'moment';\n\n//My Transactions\nexport const decorateMyFilledOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyFilledOrder(order, account)\n        return(order)\n        })\n    )\n}\n//decorate orders depending on if they are buy or sell\nconst decorateMyFilledOrder = (order, account) => {\n    const myOrder = order._user === account\n\n    let orderType\n    if(myOrder) {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n    } else {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n    }\n\n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n        orderSign: (orderType === 'buy' ? '+' : '-')\n    })\n}\nexport const decorateMyOpenOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyOpenOrder(order, account)\n        return(order)\n        })\n    )\n}\nconst decorateMyOpenOrder = (order, account) => {\n    let orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  \n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n    })\n}\n\n//Order Book\nexport const decorateOrderBookOrders = (orders) => {\n    return(\n        orders.map((order) => {\n            order = decorateOrder(order);\n            order = decorateOrderBookOrder(order);\n            return order;\n        })\n    )\n}\nconst decorateOrderBookOrder = (order) => {\n    const orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy') ? GREEN : RED,\n        orderFillAction: (orderType === 'buy') ? 'sell' : 'buy'\n    })\n}\n\n\n//Filled Orders\nexport const decorateFilledOrders = (orders) => {\n    let previousOrder = orders[0];\n    return(orders.map((order) => {\n        order = decorateOrder(order);\n        order = decorateFilledOrder(order, previousOrder);\n        previousOrder = order;\n        return order;\n    }));\n}\n//decorate objects to be readable from events\nconst decorateOrder = (order) => {\n    let etherAmount, tokenAmount;\n    if(order._tokenGive === \"0x0000000000000000000000000000000000000000\") {\n        etherAmount = order._amountGive;\n        tokenAmount = order._amountGet;\n    }\n    else{\n        etherAmount = order._amountGet;\n        tokenAmount = order._amountGive;\n    }\n\n    const precision = 100000;\n    let tokenPrice = (etherAmount / tokenAmount);\n    tokenPrice = Math.round(tokenPrice * precision) / precision;\n\n    return({\n        ...order,\n        etherAmount: ether(etherAmount),\n        tokenAmount: tokens(tokenAmount),\n        tokenPrice,\n        formattedTimestamp: moment.unix(order._timestamp).format('h:mm:ss a M/D')\n    });\n}\n//Specific decorator for filled orders only\n//If higher than previous = green, lower than previous = red\nconst decorateFilledOrder = (order, previousOrder) => {\n    return ({\n        ...order,\n        tokenPriceClass: tokenPriceClass(order.tokenPrice, previousOrder)\n    });\n}\n\nconst tokenPriceClass = (price, previousOrder) => {\n    return (previousOrder.tokenPrice > price) ? RED : GREEN;\n}","import {get, reject, groupBy} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {account} from './web3';\nimport {decorateFilledOrders, \n    decorateOrderBookOrders, \n    decorateMyFilledOrders,\n    decorateMyOpenOrders\n} from './decorators/orders';\n\nexport const cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false);\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col);\n\nexport const cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', []);\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, co => co);\n\nexport const ordersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const ordersLoadedSelector = createSelector(ordersLoaded, ol => ol);\n\nexport const orders = state => get(state, 'exchange.orders.data', []);\nexport const ordersSelector = createSelector(orders, o => o);\n\nexport const filledOrdersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, ol => ol);\n\nexport const filledOrders = state => get(state, 'exchange.trades.data', []);    \nexport const filledOrdersSelector = createSelector(\n    filledOrders, \n    (orders) => {\n        //sort ascending for price comparison\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        //sort descending for display\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    } \n);\n\n//Return order that have not been traded (filled) or cancelled\nconst openOrders = state => {\n    const all = orders(state);\n    const cancelled = cancelledOrders(state);\n    const filled = filledOrders(state);\n\n    //reject the orders if they appear in filled or cancelled\n    const openOrders = reject(all, (order) => {\n        const orderFilled = filled.some((o) => o._id === order._id);\n        const orderCancelled = cancelled.some((o) => o._id === order._id);\n        return (orderFilled || orderCancelled);\n    });\n    return openOrders;\n}\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && ordersLoaded(state);\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl);\nexport const orderBookSelector = createSelector(\n    openOrders,\n    (orders) => {\n        //decorate\n        orders = decorateOrderBookOrders(orders);\n        //group by type\n        orders = groupBy(orders, 'orderType');\n        let buyOrders = get(orders, 'buy', []);\n        let sellOrders = get(orders, 'sell', []);\n        orders = {\n            ...orders,\n            buyOrders: buyOrders.sort((a, b) => b.tokenPrice - a.tokenPrice),\n            sellOrders: sellOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\n        }\n        return orders;\n    }\n)\n\n//If all trades loaded, the my trades are definitely loaded\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const myFilledOrdersSelector = createSelector(\n    account,\n    filledOrders,\n    (account, orders) => {\n        // Find our orders\n        orders = orders.filter((o) => o._user === account || o._userFill === account);\n        // Sort by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        // Decorate orders - add display attributes\n        orders = decorateMyFilledOrders(orders, account);\n        return orders;\n    }\n)\n\n//If the order book is loaded, my open orders are definitely loaded\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded);\nexport const myOpenOrdersSelector = createSelector(\n    account,\n    openOrders,\n    (account, orders) => {\n        // Filter orders created by current account\n        orders = orders.filter((o) => o._user === account);\n        // Decorate orders - add display attributes\n        orders = decorateMyOpenOrders(orders);\n        // Sort orders by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    }\n)\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false);\nexport const orderCancellingSelector = createSelector(orderCancelling, oc => oc);\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false);\nexport const orderFillingSelector = createSelector(orderFilling, of => of);\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {});\nexport const buyOrderSelector = createSelector(buyOrder, bo => bo);\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {});\nexport const sellOrderSelector = createSelector(sellOrder, bo => bo);","import React from 'react';\n\nexport default function({type}){\n    if(type === 'table') {\n        return (<tbody className=\"spinner-border text-light text-center\"></tbody>);\n    }\n    return (<div className=\"spinner-border text-light text-center\"></div>);\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {filledOrdersSelector, filledOrdersLoadedSelector} from '../store/selectors/orders';\nimport Spinner from './Spinner';\n\nconst showFilledOrders = (filledOrders) => {\n    return (\n        <tbody>\n            {filledOrders.map((order) => {\n                return (\n                    <tr className={`trade-${order._id}`} key={order._id}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td>{order.tokenAmount}</td>\n                        <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass Trades extends Component {\n    componentWillMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Trades\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-dark table-sm small\">\n                            <thead>\n                                <tr>\n                                    <th>Time</th>\n                                    <th>DApp</th>\n                                    <th>DApp/Eth</th>\n                                </tr>\n                            </thead>\n                            { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" />}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        filledOrdersLoaded: filledOrdersLoadedSelector(state),\n        filledOrders: filledOrdersSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(Trades);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {orderBookLoadedSelector, orderBookSelector, orderFillingSelector} from '../store/selectors/orders';\nimport {exchangeSelector} from '../store/selectors/contracts';\nimport {accountSelector} from '../store/selectors/web3';\n\nimport Spinner from './Spinner';\nimport { fillOrder } from '../store/interactions/orders';\n\nconst renderOrder = (order, props) => {\n    const { dispatch, exchange, account} = props;\n    return (\n        <OverlayTrigger key={order._id} placement='auto' \n            overlay={\n                <Tooltip id={order._id}>\n                    {`Click here to ${order.orderFillAction}`}\n                </Tooltip>\n            }\n        >\n            <tr key={order._id} className=\"order-book-order\" onClick={(e) => fillOrder(dispatch, exchange, order, account)}>\n                <td>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td>{order.etherAmount}</td>\n            </tr>\n        </OverlayTrigger>\n    )\n}\n\nconst showOrderBook = (props) => {\n    //fetch key from props using ES6\n    const {orderBook} = props;\n    return (\n        <tbody>\n            {orderBook.sellOrders.map((order) => renderOrder(order, props))}\n            <tr>\n                <th>DAPP</th>\n                <th>DAPP/ETH</th>\n                <th>ETH</th>\n            </tr>\n            {orderBook.buyOrders.map((order) => renderOrder(order, props))}\n        </tbody>\n    );\n}\n\nclass OrderBook extends Component {\n    render() {\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Order Book\n                    </div>\n                    <div className=\"card-body order-book\">\n                        <table className=\"table table-dark table-sm small\">\n                            {this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type=\"table\"/>}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    const orderBookLoaded = orderBookLoadedSelector(state);\n    const orderFilling = orderFillingSelector(state);\n    return {\n        orderBook: orderBookSelector(state),\n        showOrderBook: orderBookLoaded && !orderFilling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(OrderBook);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {myFilledOrdersSelector,\n    myFilledOrdersLoadedSelector,\n    myOpenOrdersLoadedSelector,\n    myOpenOrdersSelector,\n    orderCancellingSelector\n} from '../store/selectors/orders';\nimport {exchangeSelector} from '../store/selectors/contracts';\nimport {accountSelector} from '../store/selectors/web3';\nimport {cancelOrder} from '../store/interactions/orders';\n\nconst showMyFilledOrders = (myFilledOrders) => {\n    return (\n        <tbody>\n            {myFilledOrders.map((order) => {\n                return (\n                    <tr key={`filled-${order._id}`}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nconst showMyOpenOrders = (props) => {\n    const {myOpenOrders, dispatch, exchange, account} = props\n    return (\n        <tbody>\n            {myOpenOrders.map((order) => {\n                return (\n                    <tr key={`open-${order._id}`}>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                        <td \n                            className=\"text-muted cancel-order\"\n                            onClick={(e) => {\n                                cancelOrder(dispatch, exchange, order, account);\n                            }}\n                        >x</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass MyTransactions extends Component {\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    My Transactions\n                </div>\n                <div className=\"card-body\">\n                    <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n                        <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Time</th>\n                                        <th>DAPP</th>\n                                        <th>DAPP/ETH</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyFilledOrders ? showMyFilledOrders(this.props.myFilledOrders) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Amount</th>\n                                        <th>DAPP/ETH</th>\n                                        <th>Cancel</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const openOrdersLoaded = myOpenOrdersLoadedSelector(state);\n    const orderCancelling = orderCancellingSelector(state);\n\n    return {\n        myFilledOrders: myFilledOrdersSelector(state),\n        showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n        myOpenOrders: myOpenOrdersSelector(state),\n        showMyOpenOrders: openOrdersLoaded && !orderCancelling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(MyTransactions);","export const chartOptions = {\n    chart: {\n      animations: { enabled: false },\n      toolbar: { show: false },\n      width: '100px'\n    },\n    tooltip: {\n      enabled: true,\n      theme: false,\n      style: {\n        fontSize: '12px',\n        fontFamily: undefined\n      },\n      x: {\n          show: false,\n          format: 'dd MMM',\n          formatter: undefined,\n      },\n      y: {\n        show: true,\n        title: 'price'\n      },\n      marker: {\n        show: false,\n      },\n      items: {\n         display: 'flex',\n      },\n      fixed: {\n          enabled: false,\n          position: 'topRight',\n          offsetX: 0,\n          offsetY: 0,\n      },\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        show: true,\n        style: {\n            colors: '#fff',\n            fontSize: '8px',\n            cssClass: 'apexcharts-xaxis-label',\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        minWidth: 0,\n        maxWidth: 160,\n        style: {\n          color: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-yaxis-label',\n        },\n        offsetX: 0,\n        offsetY: 0,\n        rotate: 0,\n      }\n    }\n  }\n  \n  export const dummyData = [\n    {\n      data: [\n        {\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        },\n        {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        },\n        {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        },\n        {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        },\n        {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        },\n        {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        },\n        {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        },\n        {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        },\n        {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        },\n        {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        },\n        {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        },\n        {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        },\n        {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        },\n        {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        },\n        {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        },\n        {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        },\n        {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        },\n        {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        },\n        {\n          x: new Date(1538811000000),\n          y: [6623.48, 6627, 6618.38, 6620.35]\n        },\n        {\n          x: new Date(1538812800000),\n          y: [6619.43, 6620.35, 6610.05, 6615.53]\n        },\n        {\n          x: new Date(1538814600000),\n          y: [6615.53, 6617.93, 6610, 6615.19]\n        },\n        {\n          x: new Date(1538816400000),\n          y: [6615.19, 6621.6, 6608.2, 6620]\n        },\n        {\n          x: new Date(1538818200000),\n          y: [6619.54, 6625.17, 6614.15, 6620]\n        },\n        {\n          x: new Date(1538820000000),\n          y: [6620.33, 6634.15, 6617.24, 6624.61]\n        },\n        {\n          x: new Date(1538821800000),\n          y: [6625.95, 6626, 6611.66, 6617.58]\n        },\n        {\n          x: new Date(1538823600000),\n          y: [6619, 6625.97, 6595.27, 6598.86]\n        },\n        {\n          x: new Date(1538825400000),\n          y: [6598.86, 6598.88, 6570, 6587.16]\n        },\n        {\n          x: new Date(1538827200000),\n          y: [6588.86, 6600, 6580, 6593.4]\n        },\n        {\n          x: new Date(1538829000000),\n          y: [6593.99, 6598.89, 6585, 6587.81]\n        },\n        {\n          x: new Date(1538830800000),\n          y: [6587.81, 6592.73, 6567.14, 6578]\n        },\n        {\n          x: new Date(1538832600000),\n          y: [6578.35, 6581.72, 6567.39, 6579]\n        },\n        {\n          x: new Date(1538834400000),\n          y: [6579.38, 6580.92, 6566.77, 6575.96]\n        },\n        {\n          x: new Date(1538836200000),\n          y: [6575.96, 6589, 6571.77, 6588.92]\n        },\n        {\n          x: new Date(1538838000000),\n          y: [6588.92, 6594, 6577.55, 6589.22]\n        },\n        {\n          x: new Date(1538839800000),\n          y: [6589.3, 6598.89, 6589.1, 6596.08]\n        },\n        {\n          x: new Date(1538841600000),\n          y: [6597.5, 6600, 6588.39, 6596.25]\n        },\n        {\n          x: new Date(1538843400000),\n          y: [6598.03, 6600, 6588.73, 6595.97]\n        },\n        {\n          x: new Date(1538845200000),\n          y: [6595.97, 6602.01, 6588.17, 6602]\n        },\n        {\n          x: new Date(1538847000000),\n          y: [6602, 6607, 6596.51, 6599.95]\n        },\n        {\n          x: new Date(1538848800000),\n          y: [6600.63, 6601.21, 6590.39, 6591.02]\n        },\n        {\n          x: new Date(1538850600000),\n          y: [6591.02, 6603.08, 6591, 6591]\n        },\n        {\n          x: new Date(1538852400000),\n          y: [6591, 6601.32, 6585, 6592]\n        },\n        {\n          x: new Date(1538854200000),\n          y: [6593.13, 6596.01, 6590, 6593.34]\n        },\n        {\n          x: new Date(1538856000000),\n          y: [6593.34, 6604.76, 6582.63, 6593.86]\n        },\n        {\n          x: new Date(1538857800000),\n          y: [6593.86, 6604.28, 6586.57, 6600.01]\n        },\n        {\n          x: new Date(1538859600000),\n          y: [6601.81, 6603.21, 6592.78, 6596.25]\n        },\n        {\n          x: new Date(1538861400000),\n          y: [6596.25, 6604.2, 6590, 6602.99]\n        },\n        {\n          x: new Date(1538863200000),\n          y: [6602.99, 6606, 6584.99, 6587.81]\n        },\n        {\n          x: new Date(1538865000000),\n          y: [6587.81, 6595, 6583.27, 6591.96]\n        },\n        {\n          x: new Date(1538866800000),\n          y: [6591.97, 6596.07, 6585, 6588.39]\n        },\n        {\n          x: new Date(1538868600000),\n          y: [6587.6, 6598.21, 6587.6, 6594.27]\n        },\n        {\n          x: new Date(1538870400000),\n          y: [6596.44, 6601, 6590, 6596.55]\n        },\n        {\n          x: new Date(1538872200000),\n          y: [6598.91, 6605, 6596.61, 6600.02]\n        },\n        {\n          x: new Date(1538874000000),\n          y: [6600.55, 6605, 6589.14, 6593.01]\n        },\n        {\n          x: new Date(1538875800000),\n          y: [6593.15, 6605, 6592, 6603.06]\n        },\n        {\n          x: new Date(1538877600000),\n          y: [6603.07, 6604.5, 6599.09, 6603.89]\n        },\n        {\n          x: new Date(1538879400000),\n          y: [6604.44, 6604.44, 6600, 6603.5]\n        },\n        {\n          x: new Date(1538881200000),\n          y: [6603.5, 6603.99, 6597.5, 6603.86]\n        },\n        {\n          x: new Date(1538883000000),\n          y: [6603.85, 6605, 6600, 6604.07]\n        },\n        {\n          x: new Date(1538884800000),\n          y: [6604.98, 6606, 6604.07, 6606]\n        },\n      ]\n    }\n  ]\n  ","import moment from 'moment';\nimport {groupBy, maxBy, minBy} from 'lodash';\n\nexport const buildGraphData = (orders) => {\n    orders = groupBy(orders, (o) => moment.unix(o._timestamp).startOf('hour').format());\n    const hours = Object.keys(orders);\n    \n    const graphData = hours.map((hour) => {\n        // calculate open, low, high, close\n        const hourGroup = orders[hour];\n        const open = hourGroup[0];\n        const close = hourGroup[hourGroup.length-1];\n        const high = maxBy(hourGroup, 'tokenPrice');\n        const low = minBy(hourGroup, 'tokenPrice');\n        return ({\n            x: new Date(hour),\n            y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n        });\n    });\n    return graphData;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {decorateFilledOrders} from './decorators/orders';\nimport {buildGraphData} from './decorators/priceChart';\nimport {filledOrdersLoaded, filledOrders} from './orders';\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const priceChartSelector = createSelector(\n    filledOrders,\n    (orders) => {\n        //ascending date, earliest to latest\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        let lastOrder = orders[orders.length-1];\n        let secondLastOrder = orders[orders.length-2];\n        let lastPrice = get(lastOrder, 'tokenPrice', 0);\n        let secondLastPrice = get(secondLastOrder, 'tokenPrice', 0);\n\n        return ({\n            lastPrice,\n            lastPriceChange: (lastPrice >= secondLastPrice) ? '+' : '-',\n            series: [{\n                data: buildGraphData(orders)\n            }]\n        });\n    }\n)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport Chart from 'react-apexcharts';\nimport {chartOptions} from './PriceChart.config';\nimport {priceChartLoadedSelector, priceChartSelector} from '../store/selectors/priceChart';\n\nconst priceSymbol = (lastPriceChange) => {\n    let output;\n    if(lastPriceChange === '+') {\n        output = <span className=\"text-success\">&#9650;</span> // Green up tiangle\n    } else {\n        output = <span className=\"text-danger\">&#9660;</span> // Red down triangle\n    }\n    return(output);\n}\n\nconst showPriceChart = (priceChart) => {\n    return (\n        <div className=\"price-chart\">\n            <h4>DAPP/ETH &nbsp; {priceSymbol(priceChart.lastPriceChange)} &nbsp; {priceChart.lastPrice}</h4>\n            <Chart options={chartOptions} series={priceChart.series} type=\"candlestick\" width=\"100%\" height=\"100%\" />\n        </div>\n    );\n}\n\nclass PriceChart extends Component {\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Graph\n                </div>\n                <div className=\"card-body\">\n                    {(this.props.showChart) ? showPriceChart(this.props.chartData) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showChart: priceChartLoadedSelector(state),\n        chartData: priceChartSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(PriceChart);","import {tokenLoaded, exchangeLoaded, tokenBalanceLoaded, exchangeEtherBalanceLoaded, exchangeTokenBalanceLoaded, balancesLoaded, balancesLoading} from '../actions';\nimport Token from '../../abis/Token.json';\nimport Exchange from '../../abis/Exchange.json';\nimport {ETHER_ADDRESS} from '../../helpers.js';\nimport {etherBalanceLoaded} from '../actions';\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n    try{\n        const token = web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n        dispatch(tokenLoaded(token));\n        return token;\n    }\n    catch (err){\n        window.alert(\"Contract not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n    try{\n        const exchange = web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n        dispatch(exchangeLoaded(exchange));\n        return exchange;\n    }\n    catch (err){\n        window.alert(\"Contract not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadBalances = async (web3, exchange, token, account, dispatch) => {\n    dispatch(balancesLoading());\n    \n    //ether balance\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    //token balance\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n    \n    //balance of account on the smart contract\n    const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    //token balance of account on the smart contract\n    const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    dispatch(balancesLoaded());\n}\n\nexport const depositEther = async (web3, exchange, account, etherDepositAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherDepositAmount, 'ether');\n    exchange.methods.depositEther.send({from: account, value: amount})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error depositing\");\n        });\n}\n\nexport const withdrawEther = async (web3, exchange, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n    exchange.methods.withdrawEther(amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}\n\nexport const depositToken = async (web3, exchange, token, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n\n    token.methods.approve(exchange.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            exchange.methods.depositToken(token.options.address, amount).send({from: account})\n                .on('transactionHash', (hash) => {\n                    dispatch(balancesLoading());\n                })\n                .on('error', (err) => {\n                    console.log(err);\n                    window.alert(\"error depositing token\");\n                });\n        });\n}\n\nexport const withdrawToken = async (web3, exchange, token, account, tokenWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(tokenWithdrawAmount, 'ether');\n    exchange.methods.withdrawToken(token.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass BalanceForm extends Component {\n    render(){\n        const {onSubmit, placeHolder, onChange, buttonText} = this.props;\n        return (\n            <form className=\"row\" onSubmit={onSubmit}>\n                <div className=\"col-12 col-sm pr-sm-2\">\n                    <input type=\"number\" \n                        placeholder={placeHolder} \n                        onChange={onChange}\n                        className=\"form-control form-control-sm bg-dark text-white\"\n                        required />\n                </div>\n                <div className=\"col-12 col-sm-auto pl-sm-0\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">{buttonText}</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nconst tableRow = (tokenName, walletAmount, exchangeAmount) => {\n    return (\n        <tr>\n            <th>{tokenName}</th>\n            <th>{walletAmount.toString()}</th>\n            <th>{exchangeAmount.toString()}</th>\n        </tr>\n    )\n}\n\nconst tableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Token</th>\n                <th>Wallet</th>\n                <th>Exchange</th>\n            </tr>\n        </thead>\n    );\n}\n\nclass BalanceTable extends Component {\n    render() {\n        const {hasHead, tokenName, walletAmount, exchangeAmount} = this.props;\n        return (\n            <table className=\"table table-dark table-sm small\">\n                {(hasHead) ? tableHead() : null}\n                <tbody>\n                    {tableRow(tokenName, walletAmount, exchangeAmount)}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceTable);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { exchangeSelector, \n    tokenSelector, \n    tokenBalanceSelector, \n    exchangeEtherBalanceSelector, \n    exchangeTokenBalanceSelector, \n    balancesLoadingSelector, \n    etherDepositAmountSelector,\n    etherWithdrawAmountSelector,\n    tokenDepositAmountSelector,\n    tokenWithdrawAmountSelector\n} from '../store/selectors/contracts';\nimport { web3Selector, accountSelector, etherBalanceSelector } from '../store/selectors/web3';\nimport { loadBalances, depositEther, withdrawEther, depositToken, withdrawToken} from '../store/interactions/contracts';\nimport { etherDepositAmountChanged, etherWithdrawAmountChanged, tokenDepositAmountChanged, tokenWithdrawAmountChanged } from '../store/actions';\nimport BalanceForm from './BalanceForm';\nimport BalanceTable from './BalanceTable';\n\n\nconst showForm = (props) => {\n    const {dispatch, etherBalance, tokenBalance, exchangeEtherBalance, exchangeTokenBalance, \n        etherDepositAmount, etherWithdrawAmount, tokenDepositAmount, tokenWithdrawAmount,\n        web3, exchange, token, account\n    } = props;\n\n    const depositEtherSubmit = (e) => {\n        e.preventDefault();\n        depositEther(web3, exchange, account, etherDepositAmount, dispatch);\n    }\n    const depositEtherChange = (e) => dispatch(etherDepositAmountChanged(e.target.value));\n\n    const depositTokenSubmit = (e) => {\n        e.preventDefault();\n        depositToken(web3, exchange, token, account, tokenDepositAmount, dispatch);\n    }\n    const depositTokenChange = (e) => dispatch(tokenDepositAmountChanged(e.target.value));\n\n    const withdrawEtherSubmit = (e) => {\n        e.preventDefault();\n        withdrawEther(web3, exchange, account, etherWithdrawAmount, dispatch);\n    }\n    const withdrawEtherChange = (e) => dispatch(etherWithdrawAmountChanged(e.target.value));\n\n    const withdrawTokenSubmit = (e) => {\n        e.preventDefault();\n        withdrawToken(web3, exchange, token, account, tokenWithdrawAmount, dispatch);\n    }\n    const withdrawTokenChange = (e) => dispatch(tokenWithdrawAmountChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey={\"deposit\"} className={\"bg-dark text-white\"}>\n            <Tab eventKey={\"deposit\"} title={\"Deposit\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={depositEtherSubmit} \n                    placeHolder={\"ETH Amount\"}\n                    onChange={depositEtherChange}\n                    buttonText={\"Deposit\"}\n                />\n                <BalanceTable hasHead={false} tokenName={\"DAPP\"} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={depositTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={depositTokenChange}\n                    buttonText={\"Deposit\"}  \n                />\n            </Tab>\n            <Tab eventKey={\"withdraw\"} title={\"Withdraw\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={withdrawEtherSubmit} \n                    placeHolder={\"ETH Amount\"} \n                    onChange={withdrawEtherChange}\n                    buttonText={\"Withdraw\"}    \n                />\n                <BalanceTable hasHead={false} tokenName={\"DAPP\"} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={withdrawTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={withdrawTokenChange}\n                    buttonText={\"Withdraw\"}    \n                />\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass Balance extends Component {\n\n    componentWillMount() {\n        this.loadBlockchainData();\n    }\n\n    async loadBlockchainData() {\n        const {dispatch, exchange, token, account, web3} = this.props;\n        await loadBalances(web3, exchange, token, account, dispatch);\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Balance\n                </div>\n                <div className=\"card-body\">\n                    {this.props.showForm ? showForm(this.props) : <Spinner />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const balancesLoading = balancesLoadingSelector(state)\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        etherBalance: etherBalanceSelector(state),\n        tokenBalance: tokenBalanceSelector(state),\n        exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n        exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n        balancesLoading,\n        showForm: !balancesLoading,\n        etherDepositAmount: etherDepositAmountSelector(state),\n        etherWithdrawAmount: etherWithdrawAmountSelector(state),\n        tokenDepositAmount: tokenDepositAmountSelector(state),\n        tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Balance);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass OrderForm extends Component {\n    render(){\n        const {onSubmit, amountOnChange, priceOnChange, buttonText, buyOrSell} = this.props;\n        return (\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Amount`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            placeholder=\"amount\"\n                            onChange={amountOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Price`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            placeholder=\"price\"\n                            onChange={priceOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">{buttonText}</button>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {};\n}\n\nexport default connect(mapStateToProps)(OrderForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {buyOrderSelector, sellOrderSelector} from '../store/selectors/orders';\nimport {web3Selector, accountSelector} from '../store/selectors/web3';\nimport {tokenSelector, exchangeSelector} from '../store/selectors/contracts';\nimport {makeBuyOrder, makeSellOrder} from '../store/interactions/orders';\nimport OrderForm from './OrderForm';\nimport {buyOrderAmountChanged, buyOrderPriceChanged, sellOrderAmountChanged, sellOrderPriceChanged} from '../store/actions';\nimport Spinner from './Spinner';\n\n\nconst showForm = (props) => {\n    const {dispatch, web3, exchange, token, account, buyOrder, sellOrder, showBuyTotal, showSellTotal} = props;\n    \n    const buyOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account);\n    }\n    const buyAmountChanged = (e) => dispatch(buyOrderAmountChanged(e.target.value));\n    const buyPriceChanged = (e) => dispatch(buyOrderPriceChanged(e.target.value));\n\n    const sellOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeSellOrder(dispatch, exchange, token, web3, sellOrder, account);\n    }\n    const sellAmountChanged = (e) => dispatch(sellOrderAmountChanged(e.target.value));\n    const sellPriceChanged = (e) => dispatch(sellOrderPriceChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n            <Tab className=\"bg-dark\" title=\"Buy\" eventKey=\"buy\">\n                <OrderForm\n                    onSubmit={buyOrderOnSubmit}\n                    amountOnChange={buyAmountChanged}\n                    priceOnChange={buyPriceChanged}\n                    buttonText={\"Create Buy Order\"}\n                    buyOrSell={\"Buy\"}\n                />\n                { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n            </Tab>\n            <Tab className=\"bg-dark\" title=\"Sell\" eventKey=\"sell\">\n                <OrderForm\n                    onSubmit={sellOrderOnSubmit}\n                    amountOnChange={sellAmountChanged}\n                    priceOnChange={sellPriceChanged}\n                    buttonText={\"Create Sell Order\"}\n                    buyOrSell={\"Sell\"}\n                />\n                { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass NewOrder extends Component {\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    New Order\n                </div>\n                <div className=\"card-body\">\n                    {showForm? showForm(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    const buyOrder = buyOrderSelector(state);\n    const sellOrder = sellOrderSelector(state);\n\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        buyOrder,\n        sellOrder,\n        showForm: !buyOrder.making && !sellOrder.making,\n        showBuyTotal: buyOrder.amount && buyOrder.price,\n        showSellTotal: sellOrder.amount && sellOrder.price\n    }\n}\n\nexport default connect(mapStateToProps)(NewOrder);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { exchangeSelector } from '../store/selectors/contracts';\nimport { subscribeToEvents } from '../store/interactions/subscriptions';\nimport { loadAllOrders } from '../store/interactions/orders';\nimport Trades from './Trades';\nimport OrderBook from './OrderBook';\nimport MyTransactions from './MyTransactions';\nimport PriceChart from './PriceChart';\nimport Balance from './Balance';\nimport NewOrder from './NewOrder';\n\nclass Content extends Component {\n\n\tcomponentWillMount() {\n\t\tthis.loadBlockchainData(this.props);\n\t}\n\n\tasync loadBlockchainData(props) {\n        const {exchange, dispatch} = props;\n        await loadAllOrders(dispatch, exchange);\n        await subscribeToEvents(dispatch, exchange);\n\t}\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"vertical-split\">\n                    <Balance />\n                    <NewOrder />\n                </div>\n                <OrderBook />\n                <div className=\"vertical-split\">\n                    <PriceChart />\n                    <MyTransactions />\n                </div>\n                <Trades />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        exchange: exchangeSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Content);","import { web3Loaded, web3AccountLoaded } from '../actions';\nimport Web3 from 'web3';\n\nconst ethereum = Web3.givenProvider\n\nexport const loadWeb3 = (dispatch) => {\n    const web3 = new Web3(ethereum || 'http://localhost:7545');\n    dispatch(web3Loaded(web3));\n    return web3;\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n    await ethereum.enable()\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    dispatch(web3AccountLoaded(account));\n    return account;\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport {connect} from 'react-redux';\nimport {loadWeb3, loadAccount} from '../store/interactions/web3';\nimport {loadToken, loadExchange} from '../store/interactions/contracts';\nimport { contractsLoadedSelector } from '../store/selectors/contracts';\n\n\nclass App extends Component {\n\n\tcomponentWillMount() {\n\t\t//dispatch auto-included in props with redux in react\n\t\tthis.loadBlockchainData(this.props.dispatch);\n\t}\n\n\tasync loadBlockchainData(dispatch) {\n\t\tconst web3 = loadWeb3(dispatch);\n\t\tif (!web3) {\n\t\t\talert('Web3 unable to load');\n\t\t\treturn;\n\t\t}\n\t\tconst networkId = await web3.eth.net.getId();\n\t\tconst accountLoaded = await loadAccount(web3, dispatch);\n\t\tif(!accountLoaded) {\n\t\t\talert(\"Could not load account\");\n\t\t\treturn;\n\t\t}\n\t\tconst token = await loadToken(web3, networkId, dispatch);\n\t\tif (!token) {\n\t\t\talert('Token not loaded, please load a network with token');\n\t\t}\n\t\tconst exchange = await loadExchange(web3, networkId, dispatch);\n\t\tif (!exchange) {\n\t\t\talert('Exchange not loaded, please load a network with exchange');\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Makes state vars accessible in props\nfunction mapStateToProps(state){\n\treturn {\n\t\tcontractsLoaded: contractsLoadedSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\n\nfunction web3(state = {}, action) {\n    switch (action.type) {\n        case 'WEB3_LOADED':\n            return { ...state, connection: action.connection};\n        case 'WEB3_ACCOUNT_LOADED':\n            return { ...state, account: action.account};\n        case 'ETHER_BALANCE_LOADED':\n                return { ...state, balance: action.balance }\n        default:\n            return state;\n    }\n}\n\nfunction token(state = {}, action) {\n    switch (action.type) {\n        case 'TOKEN_LOADED':\n            return { ...state, loaded: true, contract: action.token};  \n        case 'TOKEN_BALANCE_LOADED':\n                return { ...state, balance: action.balance }  \n        default:\n            return state;\n    }\n}\n\nfunction exchange(state = {}, action) {\n    let index, data;\n    switch (action.type) {\n        case 'EXCHANGE_LOADED':\n            return { ...state, loaded: true, contract: action.exchange};\n        case 'CANCELLED_ORDERS_LOADED':\n            return { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }};  \n        case 'ORDERS_LOADED':\n            return { ...state, orders: {loaded: true, data: action.orders }};      \n        case 'TRADES_LOADED':\n            return { ...state, trades: {loaded: true, data: action.trades }};\n        case 'ORDER_CANCELLING':\n            return { ...state, orderCancelling: true };\n        case 'ORDER_CANCELLED':\n            return { \n                ...state, \n                orderCancelling: false,\n                cancelledOrders: {\n                    ...state.cancelledOrders,\n                    data: [\n                        ...state.cancelledOrders.data,\n                        action.order\n                    ]\n                }\n            };\n        case 'ORDER_FILLING':\n            return { ...state, orderFilling: true };\n        case 'ORDER_FILLED':\n            //prevent duplicates in the redux store\n            index = state.trades.data.findIndex(order => order._id === action.order._id);\n            data = state.trades.data;\n            //if it doesn't already exist, add to the store\n            if (index === -1){\n                data = [...state.trades.data, action.order];\n            }\n            return {\n                ...state,\n                orderFilling:false,\n                trades: {\n                    ...state.trades,\n                    data\n                }\n            }\n        case 'EXCHANGE_ETHER_BALANCE_LOADED':\n            return { ...state, etherBalance: action.balance }\n        case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n            return { ...state, tokenBalance: action.balance }\n        case 'BALANCES_LOADING':\n            return { ...state, balancesLoading: true }\n        case 'BALANCES_LOADED':\n            return { ...state, balancesLoading: false }\n        case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n            return { ...state, etherDepositAmount: action.amount}\n        case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, etherWithdrawAmount: action.amount}\n        case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n                return { ...state, tokenDepositAmount: action.amount}\n        case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, tokenWithdrawAmount: action.amount}\n        case 'BUY_ORDER_AMOUNT_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n        case 'BUY_ORDER_PRICE_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n        case 'BUY_ORDER_MAKING':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true} }\n        case 'SELL_ORDER_AMOUNT_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n        case 'SELL_ORDER_PRICE_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n        case 'SELL_ORDER_MAKING':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true} }\n        case 'ORDER_MADE':\n            //prevent duplicates in the redux store\n            index = state.orders.data.findIndex(order => order._id === action.order._id);\n            data = state.orders.data;\n            if (index === -1){\n                data = [...state.orders.data, action.order];\n            }\n            return {\n                ...state,\n                orders: {\n                    ...state.orders,\n                    data\n                },\n                buyOrder: {\n                    ...state.buyOrder,\n                    making:false\n                },\n                sellOrder: {\n                    ...state.sellOrder,\n                    making:false\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst rootReducer = new combineReducers({\n    web3,\n    token,\n    exchange\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger }  from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n//connects redux browser to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preLoadedState){\n    return createStore(\n        rootReducer, \n        preLoadedState,\n        composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}