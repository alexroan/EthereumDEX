{"version":3,"sources":["helpers.js","store/selectors/web3.js","store/selectors/contracts.js","components/Navbar.js","store/actions.js","store/interactions/subscriptions.js","store/interactions/orders.js","store/selectors/decorators/orders.js","store/selectors/orders.js","components/Spinner.js","components/Trades.js","components/OrderBook.js","components/MyTransactions.js","components/PriceChart.config.js","store/selectors/decorators/priceChart.js","store/selectors/priceChart.js","components/PriceChart.js","store/interactions/contracts.js","components/BalanceForm.js","components/BalanceTable.js","components/Balance.js","components/OrderForm.js","components/NewOrder.js","components/Content.js","store/interactions/web3.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["ETHER_ADDRESS","RED","DECIMALS","Math","pow","tokens","wei","ether","formatBalance","balance","round","removeTrailingZeros","number","replace","web3Selector","createSelector","state","get","w","account","accountSelector","a","etherBalanceSelector","tokenLoaded","tokenSelector","tl","t","tokenNameSelector","tn","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","balancesLoadingSelector","bl","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","eda","etherWithdrawAmountSelector","ewa","tokenDepositAmountSelector","tda","tokenWithdrawAmountSelector","twa","Navbar","react_default","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dropdown","Toggle","size","id","this","props","tokenName","Menu","target","rel","Component","connect","web3AccountLoaded","token","name","exchange","cancelledOrdersLoaded","cancelledOrders","ordersLoaded","orders","tradesLoaded","trades","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","subscribeToEvents","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","events","Cancel","error","event","order","returnValues","Trade","Deposit","Withdraw","Order","stop","_x","_x2","apply","arguments","loadAllOrders","cancelStream","tradeStream","orderStream","getPastEvents","fromBlock","toBlock","sent","map","t0","console","log","decorateMyFilledOrder","orderType","_user","_tokenGive","objectSpread","orderTypeClass","orderSign","decorateMyOpenOrder","decorateOrderBookOrder","orderFillAction","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","_amountGive","_amountGet","tokenPrice","formattedTimestamp","moment","unix","_timestamp","format","tokenPriceClass","price","col","co","ol","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","sort","b","openOrders","all","cancelled","filled","reject","orderFilled","some","_id","orderCancelled","orderBookLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","myFilledOrdersLoadedSelector","loaded","myFilledOrdersSelector","decorateMyFilledOrders","filter","_userFill","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","orderCancellingSelector","oc","orderFillingSelector","of","buyOrderSelector","bo","sellOrderSelector","Spinner","Trades","concat","key","renderOrder","OverlayTrigger","placement","overlay","Tooltip","onClick","methods","fillOrder","send","from","on","hash","window","alert","OrderBook","showOrderBook","orderBook","orderFilling","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","myFilledOrders","Tabs","defaultActiveKey","Tab","eventKey","title","showMyFilledOrders","openOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","x","formatter","y","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","buildGraphData","Date","startOf","keys","hour","hourGroup","open","close","length","high","maxBy","low","minBy","priceChartLoadedSelector","priceChartSelector","lastOrder","secondLastOrder","lastPrice","lastPriceChange","series","data","showPriceChart","chartData","react_apexcharts_min_default","options","height","PriceChart","showChart","loadToken","web3","networkId","eth","Contract","Token","abi","networks","address","symbol","call","abrupt","_x3","loadExchange","_ref2","_callee2","_context2","Exchange","_x4","_x5","_x6","loadBalances","_ref3","_callee3","etherBalance","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","_context3","getBalance","balanceOf","_x7","_x8","_x9","_x10","_x11","depositEther","_ref4","_callee4","etherDepositAmount","amount","_context4","utils","toWei","value","err","_x12","_x13","_x14","_x15","_x16","withdrawEther","_ref5","_callee5","etherWithdrawAmount","_context5","_x17","_x18","_x19","_x20","_x21","depositToken","_ref6","_callee6","_context6","approve","_x22","_x23","_x24","_x25","_x26","_x27","withdrawToken","_ref7","_callee7","tokenWithdrawAmount","_context7","_x28","_x29","_x30","_x31","_x32","_x33","BalanceForm","_this$props","onSubmit","placeHolder","onChange","buttonText","step","min","placeholder","required","BalanceTable","hasHead","walletAmount","exchangeAmount","toString","tableRow","Balance","loadBlockchainData","showForm","tokenDepositAmount","components_BalanceTable","components_BalanceForm","preventDefault","balancesLoading","OrderForm","amountOnChange","priceOnChange","buyOrSell","buyOrder","sellOrder","showBuyTotal","showSellTotal","components_OrderForm","tokenGet","amountGet","amountGive","toFixed","makeOrder","makeBuyOrder","tokenGive","makeSellOrder","NewOrder","making","Content","components_Balance","components_NewOrder","components_OrderBook","components_PriceChart","components_MyTransactions","components_Trades","ethereum","Web3","givenProvider","loadWeb3","connection","loadAccount","accounts","enable","getAccounts","App","net","getId","components_Navbar","contractsLoaded","components_Content","rootReducer","combineReducers","action","contract","index","toConsumableArray","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preLoadedState","Boolean","location","hostname","match","ReactDOM","render","es","store","createStore","applyMiddleware","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kn7dAAaA,EAAgB,6CAEhBC,EAAM,SACNC,EAAQC,KAAAC,IAAI,GAAI,IAGhBC,EAAS,SAACC,GACnB,GAAGA,EACC,OAAQA,EAAMJ,GAITK,EAAQF,EAERG,EAAgB,SAACC,GAI1B,OAFAA,EAAUF,EAAME,GAChBA,EAAUN,KAAKO,MAFG,IAEGD,GAFH,KAMTE,EAAsB,SAACC,GAEhC,OADAA,EAASA,EAAOC,QAAQ,mCAAmC,OCjBlDC,EAAeC,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,oBACgB,SAAAE,GAAC,OAAIA,IAEzCC,EAAU,SAAAH,GAAK,OAAIC,cAAID,EAAO,iBAC9BI,EAAkBL,YAAeI,EAAS,SAAAE,GAAC,OAAIA,IAG/CC,EAAuBP,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,iBACwB,SAACP,GAC9D,OAAOD,EAAcC,KCPZc,EAAc,SAAAP,GAAK,OAAIC,cAAID,EAAO,gBAAgB,IAIlDQ,GAHsBT,YAAeQ,EAAa,SAAAE,GAAE,OAAIA,IAGxCV,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,mBACiB,SAAAU,GAAC,OAAIA,KAG3CC,EAAoBZ,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,eACqB,SAAAY,GAAE,OAAIA,IAEpDC,EAAiB,SAAAb,GAAK,OAAIC,cAAID,EAAO,mBAAmB,IAIxDc,GAHyBf,YAAec,EAAgB,SAAAE,GAAE,OAAIA,IAG3ChB,YADR,SAAAC,GAAK,OAAIC,cAAID,EAAO,qBAAqB,IACR,SAAAgB,GAAC,OAAIA,KAEjDC,EAA0BlB,YACnCQ,EACAM,EACA,SAACJ,EAAIM,GAAL,OAAaN,GAAMM,IAIVG,EAA0BnB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,4BAA4B,IACD,SAAAmB,GAAE,OAAIA,IAGhEC,EAAuBrB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,kBACwB,SAACP,GAC9D,OAAOD,EAAcC,KAIZ4B,EAA+BtB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,0BACgC,SAACP,GAC9E,OAAOD,EAAcC,KAIZ6B,EAA+BvB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,0BACgC,SAACP,GAC9E,OAAOD,EAAcC,KAIZ8B,EAA6BxB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,8BAA+B,IACD,SAAAwB,GAAG,OAAIA,IAGvEC,EAA8B1B,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,+BAAgC,IACD,SAAA0B,GAAG,OAAIA,IAIzEC,EAA6B5B,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,8BAA+B,IACD,SAAA4B,GAAG,OAAIA,IAGvEC,EAA8B9B,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,+BAAgC,IACD,SAAA8B,GAAG,OAAIA,ICjDhFC,mLAGE,OACIC,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,kDACXF,EAAA3B,EAAA4B,cAAA,KAAGC,UAAU,eAAeC,KAAK,MAAjC,kCACAH,EAAA3B,EAAA4B,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,oBAAoBC,gBAAc,QAAQC,aAAW,qBACxKT,EAAA3B,EAAA4B,cAAA,QAAMC,UAAU,yBAEpBF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,sBACVF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACdF,EAAA3B,EAAA4B,cAACS,EAAA,EAAD,KACIV,EAAA3B,EAAA4B,cAACS,EAAA,EAASC,OAAV,CAAiBC,KAAK,KAAKC,GAAG,kBACzBC,KAAKC,MAAMC,UADhB,QAIAhB,EAAA3B,EAAA4B,cAACS,EAAA,EAASO,KAAV,QAOJjB,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,YACVF,EAAA3B,EAAA4B,cAAA,KACIC,UAAU,iBACVC,KAAM,gCAAkCW,KAAKC,MAAM5C,QACnD+C,OAAO,SACPC,IAAI,uBAEHL,KAAKC,MAAM5C,mBA9BnBiD,aA+CNC,kBAPf,SAAyBrD,GACrB,MAAO,CACHG,QAASC,EAAgBJ,GACzBgD,UAAWrC,EAAkBX,KAItBqD,CAAyBtB,GC9CjC,SAASuB,EAAkBnD,GAC9B,MAAO,CACHiC,KAAM,sBACNjC,WAID,SAASI,EAAYgD,EAAOC,GAC/B,MAAO,CACHpB,KAAM,eACNmB,QACAC,QAID,SAAS3C,EAAe4C,GAC3B,MAAO,CACHrB,KAAM,kBACNqB,YAID,SAASC,EAAsBC,GAClC,MAAO,CACHvB,KAAM,0BACNuB,mBAID,SAASC,EAAaC,GACzB,MAAO,CACHzB,KAAM,gBACNyB,UAID,SAASC,EAAaC,GACzB,MAAO,CACH3B,KAAM,gBACN2B,UAqCD,SAASC,EAAmBvE,GAC/B,MAAO,CACH2C,KAAM,uBACN3C,WAID,SAASwE,EAA2BxE,GACvC,MAAO,CACH2C,KAAM,gCACN3C,WAID,SAASyE,GAA2BzE,GACvC,MAAO,CACH2C,KAAM,gCACN3C,WCjGD,IAAM0E,GAAiB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAC,EAAOC,EAAUjB,GAAjB,OAAAc,EAAAlE,EAAAsE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7BrB,EAASsB,OAAOC,OAAO,GAAI,SAACC,EAAOC,GAC/BR,EDoDG,CACHtC,KAAM,kBACN+C,MCtDwBD,EAAME,iBAGlC3B,EAASsB,OAAOM,MAAM,GAAI,SAACJ,EAAOC,GAC9BR,ED6DG,CACHtC,KAAM,eACN+C,MC/DqBD,EAAME,iBAG/B3B,EAASsB,OAAOO,QAAQ,GAAI,SAACL,EAAOC,GAChCR,ED4FG,CACHtC,KAAM,sBC1FVqB,EAASsB,OAAOQ,SAAS,GAAI,SAACN,EAAOC,GACjCR,EDwFG,CACHtC,KAAM,sBCtFVqB,EAASsB,OAAOS,MAAM,GAAI,SAACP,EAAOC,GAC9BR,EDoKG,CACHtC,KAAM,aACN+C,MCtKmBD,EAAME,iBAlBA,wBAAAR,EAAAa,SAAAhB,MAAH,gBAAAiB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAA9C,KAAA+C,YAAA,GCOjBC,GAAa,eAAA1B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAC,EAAOC,EAAUjB,GAAjB,IAAAsC,EAAApC,EAAAqC,EAAAjC,EAAAkC,EAAApC,EAAA,OAAAU,EAAAlE,EAAAsE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMrB,EAASyC,cAAc,SAAU,CAACC,UAAW,EAAGC,QAAS,WAH/D,cAGfL,EAHenB,EAAAyB,KAIf1C,EAAkBoC,EAAaO,IAAI,SAACpB,GAAD,OAAWA,EAAME,eAC1DV,EAAShB,EAAsBC,IALViB,EAAAE,KAAA,EAOKrB,EAASyC,cAAc,QAAS,CAACC,UAAW,EAAGC,QAAS,WAP7D,cAOfJ,EAPepB,EAAAyB,KAQftC,EAASiC,EAAYM,IAAI,SAACpB,GAAD,OAAWA,EAAME,eAChDV,EAASZ,EAAaC,IATDa,EAAAE,KAAA,GAWKrB,EAASyC,cAAc,QAAS,CAACC,UAAW,EAAGC,QAAS,WAX7D,QAWfH,EAXerB,EAAAyB,KAYfxC,EAASoC,EAAYK,IAAI,SAACpB,GAAD,OAAWA,EAAME,eAChDV,EAASd,EAAaC,IAbDe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2B,GAAA3B,EAAA,SAiBrB4B,QAAQC,IAAR7B,EAAA2B,IAjBqB,yBAAA3B,EAAAa,SAAAhB,EAAA,kBAAH,gBAAAiB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAA9C,KAAA+C,YAAA,gCCIpBa,GAAwB,SAACvB,EAAOhF,GAClC,IAEIwG,EAOJ,OALIA,EAJYxB,EAAMyB,QAAUzG,EAIhBgF,EAAM0B,aAAe7H,EAAgB,MAAQ,OAE7CmG,EAAM0B,aAAe7H,EAAgB,OAAS,MAG9DqF,OAAAyC,GAAA,EAAAzC,CAAA,GACOc,EADP,CAEIwB,YACAI,eAA+B,QAAdJ,EP1BJ,UO0BkC1H,EAC/C+H,UAA0B,QAAdL,EAAsB,IAAM,OAY1CM,GAAsB,SAAC9B,EAAOhF,GAChC,IAAIwG,EAAYxB,EAAM0B,aAAe7H,EAAgB,MAAQ,OAE7D,OAAAqF,OAAAyC,GAAA,EAAAzC,CAAA,GACOc,EADP,CAEIwB,YACAI,eAA+B,QAAdJ,EP7CJ,UO6CkC1H,KAcjDiI,GAAyB,SAAC/B,GAC5B,IAAMwB,EAAYxB,EAAM0B,aAAe7H,EAAgB,MAAQ,OAC/D,OAAOqF,OAAAyC,GAAA,EAAAzC,CAAA,GACAc,EADP,CAEIwB,YACAI,eAA+B,QAAdJ,EPhEJ,UOgEmC1H,EAChDkI,gBAAgC,QAAdR,EAAuB,OAAS,SAM7CS,GAAuB,SAACvD,GACjC,IAAIwD,EAAgBxD,EAAO,GAC3B,OAAOA,EAAOyC,IAAI,SAACnB,GAIf,OAHAA,EAAQmC,GAAcnC,GACtBA,EAAQoC,GAAoBpC,EAAOkC,GACnCA,EAAgBlC,EACTA,KAITmC,GAAgB,SAACnC,GACnB,IAAIqC,EAAaC,EACO,+CAArBtC,EAAM0B,YACLW,EAAcrC,EAAMuC,YACpBD,EAActC,EAAMwC,aAGpBH,EAAcrC,EAAMwC,WACpBF,EAActC,EAAMuC,aAGxB,IACIE,EAAcJ,EAAcC,EAGhC,OAFAG,EAAazI,KAAKO,MAFA,IAEMkI,GAFN,IAIlBvD,OAAAyC,GAAA,EAAAzC,CAAA,GACOc,EADP,CAEIqC,YAAajI,EAAMiI,GACnBC,YAAapI,EAAOoI,GACpBG,aACAC,mBAAoBC,KAAOC,KAAK5C,EAAM6C,YAAYC,OAAO,oBAK3DV,GAAsB,SAACpC,EAAOkC,GAChC,OAAOhD,OAAAyC,GAAA,EAAAzC,CAAA,GACAc,EADP,CAEI+C,gBAAiBA,GAAgB/C,EAAMyC,WAAYP,MAIrDa,GAAkB,SAACC,EAAOd,GAC5B,OAAQA,EAAcO,WAAaO,EAASlJ,EPlH3B,WQQRyE,GAAwB,SAAA1D,GAAK,OAAIC,cAAID,EAAO,mCAAmC,IAG/E2D,IAFgC5D,YAAe2D,GAAuB,SAAA0E,GAAG,OAAIA,IAE3D,SAAApI,GAAK,OAAIC,cAAID,EAAO,gCAAiC,MAGvE4D,IAF0B7D,YAAe4D,GAAiB,SAAA0E,GAAE,OAAIA,IAEjD,SAAArI,GAAK,OAAIC,cAAID,EAAO,0BAA0B,KAG7D6D,IAFuB9D,YAAe6D,GAAc,SAAA0E,GAAE,OAAIA,IAEjD,SAAAtI,GAAK,OAAIC,cAAID,EAAO,uBAAwB,MAGrDuI,IAFiBxI,YAAe8D,GAAQ,SAAA2E,GAAC,OAAIA,IAExB,SAAAxI,GAAK,OAAIC,cAAID,EAAO,0BAA0B,KACnEyI,GAA6B1I,YAAewI,GAAoB,SAAAD,GAAE,OAAIA,IAEtEI,GAAe,SAAA1I,GAAK,OAAIC,cAAID,EAAO,uBAAwB,KAC3D2I,GAAuB5I,YAChC2I,GACA,SAAC7E,GAOG,OALAA,EAASA,EAAO+E,KAAK,SAACvI,EAAEwI,GAAH,OAASxI,EAAE2H,WAAaa,EAAEb,aAI/CnE,GAFAA,EAASuD,GAAqBvD,IAEd+E,KAAK,SAACvI,EAAEwI,GAAH,OAASA,EAAEb,WAAa3H,EAAE2H,eAMjDc,GAAa,SAAA9I,GACf,IAAM+I,EAAMlF,GAAO7D,GACbgJ,EAAYrF,GAAgB3D,GAC5BiJ,EAASP,GAAa1I,GAGtB8I,EAAaI,iBAAOH,EAAK,SAAC5D,GAC5B,IAAMgE,EAAcF,EAAOG,KAAK,SAACZ,GAAD,OAAOA,EAAEa,MAAQlE,EAAMkE,MACjDC,EAAiBN,EAAUI,KAAK,SAACZ,GAAD,OAAOA,EAAEa,MAAQlE,EAAMkE,MAC7D,OAAQF,GAAeG,IAE3B,OAAOR,GAELS,GAAkB,SAAAvJ,GAAK,OAAI0D,GAAsB1D,IAAUuI,GAAmBvI,IAAU4D,GAAa5D,IAC9FwJ,GAA0BzJ,YAAewJ,GAAiB,SAAAE,GAAG,OAAIA,IACjEC,GAAoB3J,YAC7B+I,GACA,SAACjF,GAEGA,EDP+B,SAACA,GACpC,OACIA,EAAOyC,IAAI,SAACnB,GAGR,OAFAA,EAAQmC,GAAcnC,GACtBA,EAAQ+B,GAAuB/B,KCG1BwE,CAAwB9F,GAEjCA,EAAS+F,kBAAQ/F,EAAQ,aACzB,IAAIgG,EAAY5J,cAAI4D,EAAQ,MAAO,IAC/BiG,EAAa7J,cAAI4D,EAAQ,OAAQ,IAMrC,OALAA,EAAMQ,OAAAyC,GAAA,EAAAzC,CAAA,GACCR,EADD,CAEFgG,UAAWA,EAAUjB,KAAK,SAACvI,EAAGwI,GAAJ,OAAUA,EAAEjB,WAAavH,EAAEuH,aACrDkC,WAAYA,EAAWlB,KAAK,SAACvI,EAAGwI,GAAJ,OAAUA,EAAEjB,WAAavH,EAAEuH,iBAOtDmC,GAA+BhK,YAAewI,GAAoB,SAAAyB,GAAM,OAAIA,IAC5EC,GAAyBlK,YAClCI,EACAuI,GACA,SAACvI,EAAS0D,GAON,OADAA,ED/E8B,SAACA,EAAQ1D,GAC3C,OACI0D,EAAOyC,IAAI,SAACnB,GAGZ,OAFAA,EAAQmC,GAAcnC,GACtBA,EAAQuB,GAAsBvB,EAAOhF,KC2E5B+J,CAFTrG,GAFAA,EAASA,EAAOsG,OAAO,SAAC3B,GAAD,OAAOA,EAAE5B,QAAUzG,GAAWqI,EAAE4B,YAAcjK,KAErDyI,KAAK,SAACvI,EAAEwI,GAAH,OAASA,EAAEb,WAAa3H,EAAE2H,aAEP7H,KAMnCkK,GAA6BtK,YAAewJ,GAAiB,SAAAS,GAAM,OAAIA,IACvEM,GAAuBvK,YAChCI,EACA2I,GACA,SAAC3I,EAAS0D,GAON,OADAA,GAFAA,EDlE4B,SAACA,EAAQ1D,GACzC,OACI0D,EAAOyC,IAAI,SAACnB,GAGZ,OAFAA,EAAQmC,GAAcnC,GACtBA,EAAQ8B,GAAoB9B,EAAOhF,KC8D1BoK,CAFT1G,EAASA,EAAOsG,OAAO,SAAC3B,GAAD,OAAOA,EAAE5B,QAAUzG,MAI1ByI,KAAK,SAACvI,EAAEwI,GAAH,OAASA,EAAEb,WAAa3H,EAAE2H,eAM1CwC,GAA0BzK,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,4BAA4B,IACD,SAAAyK,GAAE,OAAIA,IAGhEC,GAAuB3K,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,yBAAyB,IACD,SAAA2K,GAAE,OAAIA,IAG1DC,GAAmB7K,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,oBAAqB,KACD,SAAA6K,GAAE,OAAIA,IAGlDC,GAAoB/K,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,qBAAsB,KACD,SAAA6K,GAAE,OAAIA,IChHlDE,GAAA,SAAA3G,GACX,MAAY,UADeA,EAANhC,KAETJ,EAAA3B,EAAA4B,cAAA,SAAOC,UAAU,0CAErBF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2CCgBrB8I,oLAEO,IAlBatC,EAmBX1F,EAAaF,KAAKC,MAAlBC,UACP,OACIhB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eAAf,UAGAF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACXF,EAAA3B,EAAA4B,cAAA,SAAOC,UAAU,mCACbF,EAAA3B,EAAA4B,cAAA,aACID,EAAA3B,EAAA4B,cAAA,UACID,EAAA3B,EAAA4B,cAAA,kBACAD,EAAA3B,EAAA4B,cAAA,UAAKe,GACLhB,EAAA3B,EAAA4B,cAAA,UAAKe,EAAL,UAGNF,KAAKC,MAAMwF,oBAnCfG,EAmCqD5F,KAAKC,MAAM2F,aAjClF1G,EAAA3B,EAAA4B,cAAA,aACKyG,EAAapC,IAAI,SAACnB,GACf,OACInD,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,SAAA+I,OAAW9F,EAAMkE,KAAO6B,IAAK/F,EAAMkE,KAC5CrH,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,cAAciD,EAAM0C,oBAClC7F,EAAA3B,EAAA4B,cAAA,UAAKkD,EAAMsC,aACXzF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,QAAA+I,OAAU9F,EAAM+C,kBAAoB/C,EAAMyC,iBA2B2B5F,EAAA3B,EAAA4B,cAAC8I,GAAD,CAAS3I,KAAK,qBAnBnGgB,aAoCNC,mBARf,SAAyBrD,GACrB,MAAO,CACHuI,mBAAoBE,GAA2BzI,GAC/C0I,aAAcC,GAAqB3I,GACnCgD,UAAWrC,EAAkBX,KAItBqD,CAAyB2H,wBChDlCG,GAAc,SAAChG,EAAOpC,GAAU,IAC1B2B,EAA+B3B,EAA/B2B,SAAUjB,EAAqBV,EAArBU,SAAUtD,EAAW4C,EAAX5C,QAC5B,OACI6B,EAAA3B,EAAA4B,cAACmJ,GAAA,EAAD,CAAgBF,IAAK/F,EAAMkE,IAAKgC,UAAU,OACtCC,QACItJ,EAAA3B,EAAA4B,cAACsJ,GAAA,EAAD,CAAS1I,GAAIsC,EAAMkE,KAAnB,iBAAA4B,OACsB9F,EAAMgC,mBAIhCnF,EAAA3B,EAAA4B,cAAA,MAAIiJ,IAAK/F,EAAMkE,IAAKnH,UAAU,mBAAmBsJ,QAAS,SAACxK,GAAD,OLuB7C,SAAC0D,EAAUjB,EAAU0B,EAAOhF,GACjDsD,EAASgI,QAAQC,UAAUvG,EAAMkE,KAAKsC,KAAK,CAACC,KAAMzL,IAE7C0L,GAAG,kBAAmB,SAACC,GACpBpH,EFiBD,CACHtC,KAAM,oBEhBLyJ,GAAG,QAAS,SAAC5G,GACVuB,QAAQC,IAAIxB,GACZ8G,OAAOC,MAAM,wBK/BoDN,CAAUhH,EAAUjB,EAAU0B,EAAOhF,KAClG6B,EAAA3B,EAAA4B,cAAA,UAAKkD,EAAMsC,aACXzF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,QAAA+I,OAAU9F,EAAM4B,iBAAmB5B,EAAMyC,YACtD5F,EAAA3B,EAAA4B,cAAA,UAAKkD,EAAMqC,gBAsBrByE,oLAEE,OACIjK,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eAAf,cAGAF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,wBACXF,EAAA3B,EAAA4B,cAAA,SAAOC,UAAU,mCACZY,KAAKC,MAAMmJ,cA1BlB,SAACnJ,GAAU,IAEtBoJ,EAAwBpJ,EAAxBoJ,UAAWnJ,EAAaD,EAAbC,UAClB,OACIhB,EAAA3B,EAAA4B,cAAA,aACKkK,EAAUrC,WAAWxD,IAAI,SAACnB,GAAD,OAAWgG,GAAYhG,EAAOpC,KACxDf,EAAA3B,EAAA4B,cAAA,UACID,EAAA3B,EAAA4B,cAAA,UAAKe,GACLhB,EAAA3B,EAAA4B,cAAA,UAAKe,EAAL,QACAhB,EAAA3B,EAAA4B,cAAA,kBAEHkK,EAAUtC,UAAUvD,IAAI,SAACnB,GAAD,OAAWgG,GAAYhG,EAAOpC,MAeXmJ,CAAcpJ,KAAKC,OAASf,EAAA3B,EAAA4B,cAAC8I,GAAD,CAAS3I,KAAK,qBAV1EgB,aA+BTC,mBAZf,SAAyBrD,GACrB,IAAMuJ,EAAkBC,GAAwBxJ,GAC1CoM,EAAe1B,GAAqB1K,GAC1C,MAAO,CACHmM,UAAWzC,GAAkB1J,GAC7BkM,cAAe3C,IAAoB6C,EACnC3I,SAAU3C,EAAiBd,GAC3BG,QAASC,EAAgBJ,GACzBgD,UAAWrC,EAAkBX,KAItBqD,CAAyB4I,wBC9ClCI,GAAmB,SAACtJ,GAAU,IACzBuJ,EAA6CvJ,EAA7CuJ,aAAc5H,EAA+B3B,EAA/B2B,SAAUjB,EAAqBV,EAArBU,SAAUtD,EAAW4C,EAAX5C,QACzC,OACI6B,EAAA3B,EAAA4B,cAAA,aACKqK,EAAahG,IAAI,SAACnB,GACf,OACInD,EAAA3B,EAAA4B,cAAA,MAAIiJ,IAAG,QAAAD,OAAU9F,EAAMkE,MACnBrH,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,QAAA+I,OAAU9F,EAAM4B,iBAAmB5B,EAAMsC,aACtDzF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,QAAA+I,OAAU9F,EAAM4B,iBAAmB5B,EAAMyC,YACtD5F,EAAA3B,EAAA4B,cAAA,MACIC,UAAU,0BACVsJ,QAAS,SAACxK,INVX,SAAC0D,EAAUjB,EAAU0B,EAAOhF,GACnDsD,EAASgI,QAAQc,YAAYpH,EAAMkE,KAAKsC,KAAK,CAACC,KAAMzL,IAE/C0L,GAAG,kBAAmB,SAACC,GACpBpH,EFgBD,CACHtC,KAAM,uBEfLyJ,GAAG,QAAS,SAAC5G,GACVuB,QAAQC,IAAIxB,GACZ8G,OAAOC,MAAM,wBMGOO,CAAY7H,EAAUjB,EAAU0B,EAAOhF,KAH/C,UAalBqM,oLACO,IAvCeC,EAwCbzJ,EAAaF,KAAKC,MAAlBC,UACP,OACIhB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eAAf,mBAGAF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACXF,EAAA3B,EAAA4B,cAACyK,GAAA,EAAD,CAAMC,iBAAiB,SAASzK,UAAU,sBACtCF,EAAA3B,EAAA4B,cAAC2K,GAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAAS5K,UAAU,WAC5CF,EAAA3B,EAAA4B,cAAA,SAAOC,UAAU,mCACbF,EAAA3B,EAAA4B,cAAA,aACID,EAAA3B,EAAA4B,cAAA,UACID,EAAA3B,EAAA4B,cAAA,kBACAD,EAAA3B,EAAA4B,cAAA,UAAKe,GACLhB,EAAA3B,EAAA4B,cAAA,UAAKe,EAAL,UAGPF,KAAKC,MAAMgK,oBAzDhBN,EAyDwD3J,KAAKC,MAAM0J,eAvDvFzK,EAAA3B,EAAA4B,cAAA,aACKwK,EAAenG,IAAI,SAACnB,GACjB,OACInD,EAAA3B,EAAA4B,cAAA,MAAIiJ,IAAG,UAAAD,OAAY9F,EAAMkE,MACrBrH,EAAA3B,EAAA4B,cAAA,MAAIC,UAAU,cAAciD,EAAM0C,oBAClC7F,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,QAAA+I,OAAU9F,EAAM4B,iBAAmB5B,EAAM6B,UAAW7B,EAAMsC,aACvEzF,EAAA3B,EAAA4B,cAAA,MAAIC,UAAS,QAAA+I,OAAU9F,EAAM4B,iBAAmB5B,EAAMyC,iBAiDmC5F,EAAA3B,EAAA4B,cAAC8I,GAAD,CAAS3I,KAAK,YAGvGJ,EAAA3B,EAAA4B,cAAC2K,GAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAAS5K,UAAU,WAC5CF,EAAA3B,EAAA4B,cAAA,SAAOC,UAAU,mCACbF,EAAA3B,EAAA4B,cAAA,aACID,EAAA3B,EAAA4B,cAAA,UACID,EAAA3B,EAAA4B,cAAA,oBACAD,EAAA3B,EAAA4B,cAAA,UAAKe,EAAL,QACAhB,EAAA3B,EAAA4B,cAAA,sBAGPa,KAAKC,MAAMsJ,iBAAmBA,GAAiBvJ,KAAKC,OAASf,EAAA3B,EAAA4B,cAAC8I,GAAD,CAAS3I,KAAK,sBA/B/EgB,aAwDdC,mBAff,SAAyBrD,GACrB,IAAMgN,EAAmB3C,GAA2BrK,GAC9CiN,EAAkBzC,GAAwBxK,GAEhD,MAAO,CACHyM,eAAgBxC,GAAuBjK,GACvC+M,mBAAoBhD,GAA6B/J,GACjDsM,aAAchC,GAAqBtK,GACnCqM,iBAAkBW,IAAqBC,EACvCxJ,SAAU3C,EAAiBd,GAC3BG,QAASC,EAAgBJ,GACzBgD,UAAWrC,EAAkBX,KAItBqD,CAAyBmJ,yBC5G3BU,GAAe,CACxBC,MAAO,CACLC,WAAY,CAAEC,SAAS,GACvBC,QAAS,CAAEC,MAAM,GACjBC,MAAO,SAETC,QAAS,CACPJ,SAAS,EACTK,OAAO,EACPC,MAAO,CACLC,SAAU,OACVC,gBAAYC,GAEdC,EAAG,CACCR,MAAM,EACNtF,OAAQ,SACR+F,eAAWF,GAEfG,EAAG,CACDV,MAAM,EACNT,MAAO,SAEToB,OAAQ,CACNX,MAAM,GAERY,MAAO,CACJC,QAAS,QAEZC,MAAO,CACHhB,SAAS,EACTiB,SAAU,WACVC,QAAS,EACTC,QAAS,IAGfC,MAAO,CACLrM,KAAM,WACNsM,OAAQ,CACNnB,MAAM,EACNI,MAAO,CACHgB,OAAQ,OACRf,SAAU,MACVgB,SAAU,4BAIlBC,MAAO,CACLH,OAAQ,CACNnB,MAAM,EACNuB,SAAU,EACVC,SAAU,IACVpB,MAAO,CACLqB,MAAO,OACPpB,SAAU,MACVgB,SAAU,0BAEZL,QAAS,EACTC,QAAS,EACTS,OAAQ,KCvDHC,IDgEA,IAAIC,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,UAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YC5SQ,SAACtL,GAgB3B,OAfAA,EAAS+F,kBAAQ/F,EAAQ,SAAC2E,GAAD,OAAOV,KAAOC,KAAKS,EAAER,YAAYoH,QAAQ,QAAQnH,WAC5D5D,OAAOgL,KAAKxL,GAEFyC,IAAI,SAACgJ,GAEzB,IAAMC,EAAY1L,EAAOyL,GACnBE,EAAOD,EAAU,GACjBE,EAAQF,EAAUA,EAAUG,OAAO,GACnCC,EAAOC,gBAAML,EAAW,cACxBM,EAAMC,gBAAMP,EAAW,cAC7B,MAAQ,CACJxB,EAAG,IAAIoB,KAAKG,GACZrB,EAAG,CAACuB,EAAK5H,WAAY+H,EAAK/H,WAAYiI,EAAIjI,WAAY6H,EAAM7H,iBCV3DmI,GAA2BhQ,YAAewI,GAAoB,SAAAyB,GAAM,OAAIA,IACxEgG,GAAqBjQ,YAC9B2I,GACA,SAAC7E,GAEGA,EAASA,EAAO+E,KAAK,SAACvI,EAAEwI,GAAH,OAASxI,EAAE2H,WAAaa,EAAEb,aAG/C,IAAIiI,GADJpM,EAASuD,GAAqBvD,IACPA,EAAO6L,OAAO,GACjCQ,EAAkBrM,EAAOA,EAAO6L,OAAO,GACvCS,EAAYlQ,cAAIgQ,EAAW,aAAc,GAG7C,MAAQ,CACJE,YACAC,gBAAkBD,GAJAlQ,cAAIiQ,EAAiB,aAAc,GAIH,IAAM,IACxDG,OAAQ,CAAC,CACLC,KAAMpB,GAAerL,QCL/B0M,GAAiB,SAACxN,GAAU,IACvByN,EAAwBzN,EAAxByN,UAAWxN,EAAaD,EAAbC,UAClB,OACIhB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eACXF,EAAA3B,EAAA4B,cAAA,UAAKe,EAAL,aAZe,MAYyBwN,EAAUJ,gBAX7CpO,EAAA3B,EAAA4B,cAAA,QAAMC,UAAU,gBAAhB,UAEAF,EAAA3B,EAAA4B,cAAA,QAAMC,UAAU,eAAhB,UASL,SAA4EsO,EAAUL,WACtFnO,EAAA3B,EAAA4B,cAACwO,GAAApQ,EAAD,CAAOqQ,QAASxD,GAAcmD,OAAQG,EAAUH,OAAQjO,KAAK,cAAcoL,MAAM,OAAOmD,OAAO,WAKrGC,oLAEE,OACI5O,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eAAf,SAGAF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACTY,KAAKC,MAAM8N,UAAaN,GAAezN,KAAKC,OAASf,EAAA3B,EAAA4B,cAAC8I,GAAD,CAAS3I,KAAK,iBARhEgB,aAuBVC,mBARf,SAAyBrD,GACrB,MAAO,CACH6Q,UAAWd,GAAyB/P,GACpCwQ,UAAWR,GAAmBhQ,GAC9BgD,UAAWrC,EAAkBX,KAItBqD,CAAyBuN,wBC7C3BE,GAAS,eAAA1M,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAC,EAAOsM,EAAMC,EAAWtM,GAAxB,IAAAnB,EAAAC,EAAA,OAAAe,EAAAlE,EAAAsE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEXtB,EAAQwN,EAAKE,IAAIC,SAASC,GAAMC,IAAKD,GAAME,SAASL,GAAWM,SAFpD1M,EAAAE,KAAA,EAGEvB,EAAMkI,QAAQ8F,SAASC,OAHzB,cAGXhO,EAHWoB,EAAAyB,KAIjB3B,EAASnE,EAAYgD,EAAOC,IAJXoB,EAAA6M,OAAA,SAKVlO,GALU,OAAAqB,EAAAC,KAAA,EAAAD,EAAA2B,GAAA3B,EAAA,SAQjBmH,OAAOC,MAAM,4CARI,eAAApH,EAAA6M,OAAA,SAUd,MAVc,yBAAA7M,EAAAa,SAAAhB,EAAA,iBAAH,gBAAAiB,EAAAC,EAAA+L,GAAA,OAAAtN,EAAAwB,MAAA9C,KAAA+C,YAAA,GAaT8L,GAAY,eAAAC,EAAAvN,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAqN,EAAOd,EAAMC,EAAWtM,GAAxB,IAAAjB,EAAA,OAAAc,EAAAlE,EAAAsE,KAAA,SAAAmN,GAAA,cAAAA,EAAAjN,KAAAiN,EAAAhN,MAAA,cAAAgN,EAAAjN,KAAA,EAEdpB,EAAWsN,EAAKE,IAAIC,SAASa,GAASX,IAAKW,GAASV,SAASL,GAAWM,SAC9E5M,EAAS7D,EAAe4C,IAHJqO,EAAAL,OAAA,SAIbhO,GAJa,OAAAqO,EAAAjN,KAAA,EAAAiN,EAAAvL,GAAAuL,EAAA,SAOpB/F,OAAOC,MAAM,4CAPO,cAAA8F,EAAAL,OAAA,SASjB,MATiB,yBAAAK,EAAArM,SAAAoM,EAAA,iBAAH,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAhM,MAAA9C,KAAA+C,YAAA,GAYZsM,GAAY,eAAAC,EAAA/N,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAA6N,EAAOtB,EAAMtN,EAAUF,EAAOpD,EAASuE,GAAvC,IAAA4N,EAAAC,EAAAC,EAAAC,EAAA,OAAAlO,EAAAlE,EAAAsE,KAAA,SAAA+N,GAAA,cAAAA,EAAA7N,KAAA6N,EAAA5N,MAAA,cACxBJ,Eb+EO,CACHtC,KAAM,qBajFcsQ,EAAA5N,KAAA,EAIGiM,EAAKE,IAAI0B,WAAWxS,GAJvB,cAIlBmS,EAJkBI,EAAArM,KAKxB3B,EbyCO,CACHtC,KAAM,uBACN3C,Qa3CwB6S,IALJI,EAAA5N,KAAA,EAQGvB,EAAMkI,QAAQmH,UAAUzS,GAASqR,OARpC,cAQlBe,EARkBG,EAAArM,KASxB3B,EAASV,EAAmBuO,IATJG,EAAA5N,KAAA,GAYWrB,EAASgI,QAAQmH,UAAU5T,EAAemB,GAASqR,OAZ9D,eAYlBgB,EAZkBE,EAAArM,KAaxB3B,EAAST,EAA2BuO,IAbZE,EAAA5N,KAAA,GAgBWrB,EAASgI,QAAQmH,UAAUrP,EAAMmN,QAAQY,QAASnR,GAASqR,OAhBtE,QAgBlBiB,EAhBkBC,EAAArM,KAiBxB3B,EAASR,GAA2BuO,IAEpC/N,EbuDO,CACHtC,KAAM,oBa3Ec,yBAAAsQ,EAAAjN,SAAA4M,MAAH,gBAAAQ,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAAxM,MAAA9C,KAAA+C,YAAA,GAsBZqN,GAAY,eAAAC,EAAA9O,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAA4O,EAAOrC,EAAMtN,EAAUtD,EAASkT,EAAoB3O,GAApD,IAAA4O,EAAA,OAAA/O,EAAAlE,EAAAsE,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OAClBwO,EAASvC,EAAKyC,MAAMC,MAAMJ,EAAoB,SACpD5P,EAASgI,QAAQyH,aAAavH,KAAK,CAACC,KAAMzL,EAASuT,MAAOJ,IACrDzH,GAAG,kBAAmB,SAACC,GACpBpH,EbsDD,CACHtC,KAAM,uBarDLyJ,GAAG,QAAS,SAAC8H,GACVnN,QAAQC,IAAIkN,GACZ5H,OAAOC,MAAM,sBARG,wBAAAuH,EAAA9N,SAAA2N,MAAH,gBAAAQ,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAAvN,MAAA9C,KAAA+C,YAAA,GAYZoO,GAAa,eAAAC,EAAA7P,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAA2P,EAAOpD,EAAMtN,EAAUtD,EAASiU,EAAqB1P,GAArD,IAAA4O,EAAA,OAAA/O,EAAAlE,EAAAsE,KAAA,SAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAAvP,MAAA,OACnBwO,EAASvC,EAAKyC,MAAMC,MAAMW,EAAqB,SACrD3Q,EAASgI,QAAQwI,cAAcX,GAAQ3H,KAAK,CAACC,KAAMzL,IAC9C0L,GAAG,kBAAmB,SAACC,GACpBpH,Eb0CD,CACHtC,KAAM,uBazCLyJ,GAAG,QAAS,SAAC8H,GACVnN,QAAQC,IAAIkN,GACZ5H,OAAOC,MAAM,uBARI,wBAAAqI,EAAA5O,SAAA0O,MAAH,gBAAAG,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAtO,MAAA9C,KAAA+C,YAAA,GAYb8O,GAAY,eAAAC,EAAAvQ,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAqQ,EAAO9D,EAAMtN,EAAUF,EAAOpD,EAASiU,EAAqB1P,GAA5D,IAAA4O,EAAA,OAAA/O,EAAAlE,EAAAsE,KAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,OAClBwO,EAASvC,EAAKyC,MAAMC,MAAMW,EAAqB,SAErD7Q,EAAMkI,QAAQsJ,QAAQtR,EAASiN,QAAQY,QAASgC,GAAQ3H,KAAK,CAACC,KAAMzL,IAC/D0L,GAAG,kBAAmB,SAACC,GACpBrI,EAASgI,QAAQkJ,aAAapR,EAAMmN,QAAQY,QAASgC,GAAQ3H,KAAK,CAACC,KAAMzL,IACpE0L,GAAG,kBAAmB,SAACC,GACpBpH,Eb2BT,CACHtC,KAAM,uBa1BGyJ,GAAG,QAAS,SAAC8H,GACVnN,QAAQC,IAAIkN,GACZ5H,OAAOC,MAAM,8BAXL,wBAAA8I,EAAArP,SAAAoP,MAAH,gBAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAhP,MAAA9C,KAAA+C,YAAA,GAgBZyP,GAAa,eAAAC,EAAAlR,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAgR,EAAOzE,EAAMtN,EAAUF,EAAOpD,EAASsV,EAAqB/Q,GAA5D,IAAA4O,EAAA,OAAA/O,EAAAlE,EAAAsE,KAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OACnBwO,EAASvC,EAAKyC,MAAMC,MAAMgC,EAAqB,SACrDhS,EAASgI,QAAQ6J,cAAc/R,EAAMmN,QAAQY,QAASgC,GAAQ3H,KAAK,CAACC,KAAMzL,IACrE0L,GAAG,kBAAmB,SAACC,GACpBpH,EbcD,CACHtC,KAAM,uBabLyJ,GAAG,QAAS,SAAC8H,GACVnN,QAAQC,IAAIkN,GACZ5H,OAAOC,MAAM,uBARI,wBAAA0J,EAAAjQ,SAAA+P,MAAH,gBAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAA3P,MAAA9C,KAAA+C,YAAA,GC1FpBoQ,oLACM,IAAAC,EACkDpT,KAAKC,MAApDoT,EADHD,EACGC,SAAUC,EADbF,EACaE,YAAaC,EAD1BH,EAC0BG,SAAUC,EADpCJ,EACoCI,WACxC,OACItU,EAAA3B,EAAA4B,cAAA,QAAMC,UAAU,MAAMiU,SAAUA,GAC5BnU,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,yBACXF,EAAA3B,EAAA4B,cAAA,SAAOG,KAAK,SACRmU,KAAK,MACLC,IAAI,IACJC,YAAaL,EACbC,SAAUA,EACVnU,UAAU,kDACVwU,UAAQ,KAEhB1U,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,8BACXF,EAAA3B,EAAA4B,cAAA,UAAQG,KAAK,SAASF,UAAU,oCAAoCoU,YAf9DlT,aA0BXC,mBAJf,SAAyBrD,GACrB,MAAO,IAGIqD,CAAyB4S,ICJlCU,oLACO,IAAAT,EACsDpT,KAAKC,MAAzD6T,EADFV,EACEU,QAAS5T,EADXkT,EACWlT,UAAW6T,EADtBX,EACsBW,aAAcC,EADpCZ,EACoCY,eACzC,OACI9U,EAAA3B,EAAA4B,cAAA,SAAOC,UAAU,mCACX0U,EAfV5U,EAAA3B,EAAA4B,cAAA,aACID,EAAA3B,EAAA4B,cAAA,UACID,EAAA3B,EAAA4B,cAAA,mBACAD,EAAA3B,EAAA4B,cAAA,oBACAD,EAAA3B,EAAA4B,cAAA,wBAW2B,KAC3BD,EAAA3B,EAAA4B,cAAA,aA5BC,SAACe,EAAW6T,EAAcC,GACvC,OACI9U,EAAA3B,EAAA4B,cAAA,UACID,EAAA3B,EAAA4B,cAAA,UAAKe,GACLhB,EAAA3B,EAAA4B,cAAA,UAAK4U,EAAaE,YAClB/U,EAAA3B,EAAA4B,cAAA,UAAK6U,EAAeC,aAwBXC,CAAShU,EAAW6T,EAAcC,YAP5B1T,aAkBZC,mBAJf,SAAyBrD,GACrB,MAAO,IAGIqD,CAAyBsT,ICgDlCM,gMAGEnU,KAAKoU,mMAI8CpU,KAAKC,MAAjD2B,aAAUjB,aAAUF,UAAOpD,YAAS4Q,kBACrCoB,GAAapB,EAAMtN,EAAUF,EAAOpD,EAASuE,sIAInD,OACI1C,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eAAf,WAGAF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACVY,KAAKC,MAAMoU,SAtFf,SAACpU,GAAU,IACjB2B,EAGH3B,EAHG2B,SAAU4N,EAGbvP,EAHauP,aAAcC,EAG3BxP,EAH2BwP,aAAcC,EAGzCzP,EAHyCyP,qBAAsBC,EAG/D1P,EAH+D0P,qBAC/DY,EAEAtQ,EAFAsQ,mBAAoBe,EAEpBrR,EAFoBqR,oBAAqBgD,EAEzCrU,EAFyCqU,mBAAoB3B,EAE7D1S,EAF6D0S,oBAC7D1E,EACAhO,EADAgO,KAAMtN,EACNV,EADMU,SAAUF,EAChBR,EADgBQ,MAAOpD,EACvB4C,EADuB5C,QA2B3B,OACI6B,EAAA3B,EAAA4B,cAACyK,GAAA,EAAD,CAAMC,iBAAkB,UAAWzK,UAAW,sBAC1CF,EAAA3B,EAAA4B,cAAC2K,GAAA,EAAD,CAAKC,SAAU,UAAWC,MAAO,UAAW5K,UAAW,WACnDF,EAAA3B,EAAA4B,cAACoV,GAAD,CAAcT,SAAS,EAAM5T,UAAW,MAAO6T,aAAcvE,EAAcwE,eAAgBtE,IAC3FxQ,EAAA3B,EAAA4B,cAACqV,GAAD,CACInB,SA7BW,SAACnV,GACxBA,EAAEuW,iBACFrE,GAAanC,EAAMtN,EAAUtD,EAASkT,EAAoB3O,IA4B9C0R,YAAa,aACbC,SA3BW,SAACrV,GAAD,OAAO0D,EhBoF3B,CACHtC,KAAM,+BACNkR,OgBtFiEtS,EAAEkC,OAAOwQ,SA4B9D4C,WAAY,YAEhBtU,EAAA3B,EAAA4B,cAACoV,GAAD,CAAcT,SAAS,EAAO5T,UAAWD,EAAMC,UAAW6T,aAActE,EAAcuE,eAAgBrE,IACtGzQ,EAAA3B,EAAA4B,cAACqV,GAAD,CACInB,SA9BW,SAACnV,GACxBA,EAAEuW,iBACF5C,GAAa5D,EAAMtN,EAAUF,EAAOpD,EAASiX,EAAoB1S,IA6BrD0R,YAAa,eACbC,SA5BW,SAACrV,GAAD,OAAO0D,EhB4F3B,CACHtC,KAAM,+BACNkR,OgB9FiEtS,EAAEkC,OAAOwQ,SA6B9D4C,WAAY,aAGpBtU,EAAA3B,EAAA4B,cAAC2K,GAAA,EAAD,CAAKC,SAAU,WAAYC,MAAO,WAAY5K,UAAW,WACrDF,EAAA3B,EAAA4B,cAACoV,GAAD,CAAcT,SAAS,EAAM5T,UAAW,MAAO6T,aAAcvE,EAAcwE,eAAgBtE,IAC3FxQ,EAAA3B,EAAA4B,cAACqV,GAAD,CACInB,SAjCY,SAACnV,GACzBA,EAAEuW,iBACFtD,GAAclD,EAAMtN,EAAUtD,EAASiU,EAAqB1P,IAgChD0R,YAAa,aACbC,SA/BY,SAACrV,GAAD,OAAO0D,EhB+E5B,CACHtC,KAAM,gCACNkR,OgBjFmEtS,EAAEkC,OAAOwQ,SAgChE4C,WAAY,aAEhBtU,EAAA3B,EAAA4B,cAACoV,GAAD,CAAcT,SAAS,EAAO5T,UAAWD,EAAMC,UAAW6T,aAActE,EAAcuE,eAAgBrE,IACtGzQ,EAAA3B,EAAA4B,cAACqV,GAAD,CACInB,SAlCY,SAACnV,GACzBA,EAAEuW,iBACFjC,GAAcvE,EAAMtN,EAAUF,EAAOpD,EAASsV,EAAqB/Q,IAiCvD0R,YAAa,eACbC,SAhCY,SAACrV,GAAD,OAAO0D,EhBuF5B,CACHtC,KAAM,gCACNkR,OgBzFmEtS,EAAEkC,OAAOwQ,SAiChE4C,WAAY,eAyBWa,CAASrU,KAAKC,OAASf,EAAA3B,EAAA4B,cAAC8I,GAAD,eAlB5C3H,aA8CPC,mBArBf,SAAyBrD,GACrB,IAAMwX,EAAkBtW,EAAwBlB,GAChD,MAAO,CACHG,QAASC,EAAgBJ,GACzByD,SAAU3C,EAAiBd,GAC3B+Q,KAAMjR,EAAaE,GACnBuD,MAAO/C,EAAcR,GACrBgD,UAAWrC,EAAkBX,GAC7BsS,aAAchS,EAAqBN,GACnCuS,aAAcnR,EAAqBpB,GACnCwS,qBAAsBnR,EAA6BrB,GACnDyS,qBAAsBnR,EAA6BtB,GACnDwX,kBACAL,UAAWK,EACXnE,mBAAoB9R,EAA2BvB,GAC/CoU,oBAAqB3S,EAA4BzB,GACjDoX,mBAAoBzV,EAA2B3B,GAC/CyV,oBAAqB5T,EAA4B7B,KAI1CqD,CAAyB4T,ICrIlCQ,oLACM,IAAAvB,EAOApT,KAAKC,MANFoT,EADHD,EACGC,SACHuB,EAFAxB,EAEAwB,eACAC,EAHAzB,EAGAyB,cACArB,EAJAJ,EAIAI,WACAsB,EALA1B,EAKA0B,UACA5U,EANAkT,EAMAlT,UAEJ,OACIhB,EAAA3B,EAAA4B,cAAA,QAAMkU,SAAUA,GACZnU,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACXF,EAAA3B,EAAA4B,cAAA,gBAAAgJ,OAAW2M,EAAX,aAAA3M,OAAgCjI,EAAhC,MACAhB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eACXF,EAAA3B,EAAA4B,cAAA,SAAOG,KAAK,SACRmU,KAAK,MACLC,IAAI,IACJC,YAAY,SACZJ,SAAUqB,EACVxV,UAAU,kDACVwU,UAAQ,MAGpB1U,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBACXF,EAAA3B,EAAA4B,cAAA,gBAAAgJ,OAAW2M,EAAX,WACA5V,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eACXF,EAAA3B,EAAA4B,cAAA,SAAOG,KAAK,OACRmU,KAAK,MACLC,IAAI,IACJC,YAAY,QACZJ,SAAUsB,EACVzV,UAAU,kDACVwU,UAAQ,MAGpB1U,EAAA3B,EAAA4B,cAAA,UAAQG,KAAK,SAASF,UAAU,oCAAoCoU,WAnC5DlT,aA+CTC,mBANf,SAAyBrD,GACrB,MAAO,CACHgD,UAAWrC,EAAkBX,KAItBqD,CAAyBoU,ICtClCN,GAAW,SAACpU,GAAU,IACjB2B,EAA8F3B,EAA9F2B,SAAUqM,EAAoFhO,EAApFgO,KAAMtN,EAA8EV,EAA9EU,SAAUF,EAAoER,EAApEQ,MAAOpD,EAA6D4C,EAA7D5C,QAAS0X,EAAoD9U,EAApD8U,SAAUC,EAA0C/U,EAA1C+U,UAAWC,EAA+BhV,EAA/BgV,aAAcC,EAAiBjV,EAAjBiV,cAgBpF,OACIhW,EAAA3B,EAAA4B,cAACyK,GAAA,EAAD,CAAMC,iBAAiB,MAAMzK,UAAU,sBACnCF,EAAA3B,EAAA4B,cAAC2K,GAAA,EAAD,CAAK1K,UAAU,UAAU4K,MAAM,MAAMD,SAAS,OAC1C7K,EAAA3B,EAAA4B,cAACgW,GAAD,CACI9B,SAlBS,SAACnV,GACtBA,EAAEuW,iBhBsCkB,SAAC7S,EAAUjB,EAAUF,EAAOwN,EAAM5L,EAAOhF,GACjE,IAAM+X,EAAW3U,EAAMmN,QAAQY,QACzB6G,EAAYpH,EAAKyC,MAAMC,MAAMtO,EAAMmO,OAAQ,SAE3C8E,EAAarH,EAAKyC,MAAMC,OAAOtO,EAAMmO,OAASnO,EAAMgD,OAAOkQ,QAAQ,IAAK,SAE9E5U,EAASgI,QAAQ6M,UAAUJ,EAAUC,EAHnBnZ,6CAGyCoZ,GAAYzM,KAAK,CAACC,KAAMzL,IAC9E0L,GAAG,kBAAmB,SAACC,GACpBpH,EFgGD,CACHtC,KAAM,uBE/FLyJ,GAAG,QAAS,SAAC5G,GACVuB,QAAQC,IAAIxB,GACZ8G,OAAOC,MAAM,6BgBjDjBuM,CAAa7T,EAAUjB,EAAUF,EAAOwN,EAAM8G,EAAU1X,IAiB5CuX,eAfS,SAAC1W,GAAD,OAAO0D,ElB6HzB,CACHtC,KAAM,2BACNkR,OkB/H2DtS,EAAEkC,OAAOwQ,SAgBxDiE,cAfQ,SAAC3W,GAAD,OAAO0D,ElBmIxB,CACHtC,KAAM,0BACN+F,MkBrIyDnH,EAAEkC,OAAOwQ,SAgBtD4C,WAAY,mBACZsB,UAAW,QAEbG,EAAe/V,EAAA3B,EAAA4B,cAAA,uBAAetC,GAAqBkY,EAASvE,OAASuE,EAAS1P,OAAOkQ,QAAQ,KAA9E,QAAkG,MAEvHrW,EAAA3B,EAAA4B,cAAC2K,GAAA,EAAD,CAAK1K,UAAU,UAAU4K,MAAM,OAAOD,SAAS,QAC3C7K,EAAA3B,EAAA4B,cAACgW,GAAD,CACI9B,SArBU,SAACnV,GACvBA,EAAEuW,iBhB+CmB,SAAC7S,EAAUjB,EAAUF,EAAOwN,EAAM5L,EAAOhF,GAClE,IACMgY,EAAYpH,EAAKyC,MAAMC,OAAOtO,EAAMmO,OAASnO,EAAMgD,OAAOkQ,QAAQ,IAAK,SACvEG,EAAYjV,EAAMmN,QAAQY,QAC1B8G,EAAarH,EAAKyC,MAAMC,MAAMtO,EAAMmO,OAAQ,SAElD7P,EAASgI,QAAQ6M,UALAtZ,6CAKoBmZ,EAAWK,EAAWJ,GAAYzM,KAAK,CAACC,KAAMzL,IAC9E0L,GAAG,kBAAmB,SAACC,GACpBpH,EFgFD,CACHtC,KAAM,uBE/ELyJ,GAAG,QAAS,SAAC5G,GACVuB,QAAQC,IAAIxB,GACZ8G,OAAOC,MAAM,6BgB1DjByM,CAAc/T,EAAUjB,EAAUF,EAAOwN,EAAM+G,EAAW3X,IAoB9CuX,eAlBU,SAAC1W,GAAD,OAAO0D,ElB0I1B,CACHtC,KAAM,4BACNkR,OkB5I6DtS,EAAEkC,OAAOwQ,SAmB1DiE,cAlBS,SAAC3W,GAAD,OAAO0D,ElBgJzB,CACHtC,KAAM,2BACN+F,MkBlJ2DnH,EAAEkC,OAAOwQ,SAmBxD4C,WAAY,oBACZsB,UAAW,SAEbI,EAAgBhW,EAAA3B,EAAA4B,cAAA,uBAAetC,GAAqBmY,EAAUxE,OAASwE,EAAU3P,OAAOkQ,QAAQ,KAAhF,QAAoG,QAMhIK,oLAGE,OACI1W,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,2BACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,eAAf,aAGAF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACViV,GAAUA,GAASrU,KAAKC,OAASf,EAAA3B,EAAA4B,cAAC8I,GAAD,CAAS3I,KAAK,iBAT7CgB,aAkCRC,mBAjBf,SAAyBrD,GACrB,IAAM6X,EAAWjN,GAAiB5K,GAC5B8X,EAAYhN,GAAkB9K,GAEpC,MAAO,CACHG,QAASC,EAAgBJ,GACzByD,SAAU3C,EAAiBd,GAC3B+Q,KAAMjR,EAAaE,GACnBuD,MAAO/C,EAAcR,GACrB6X,WACAC,YACAX,UAAWU,EAASc,SAAWb,EAAUa,OACzCZ,aAAcF,EAASvE,QAAUuE,EAAS1P,MAC1C6P,cAAeF,EAAUxE,QAAUwE,EAAU3P,QAItC9E,CAAyBqV,IC9ElCE,gMAGJ9V,KAAKoU,mBAAmBpU,KAAKC,0FAGLA,kFACXU,EAAsBV,EAAtBU,SAAUiB,EAAY3B,EAAZ2B,kBACXoB,GAAcpB,EAAUjB,0BACxBU,GAAkBO,EAAUjB,kIAIlC,OACIzB,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,WACXF,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,kBACXF,EAAA3B,EAAA4B,cAAC4W,GAAD,MACA7W,EAAA3B,EAAA4B,cAAC6W,GAAD,OAEJ9W,EAAA3B,EAAA4B,cAAC8W,GAAD,MACA/W,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,kBACXF,EAAA3B,EAAA4B,cAAC+W,GAAD,MACAhX,EAAA3B,EAAA4B,cAACgX,GAAD,OAEJjX,EAAA3B,EAAA4B,cAACiX,GAAD,cAxBM9V,aAoCPC,mBANf,SAAyBrD,GACrB,MAAO,CACHyD,SAAU3C,EAAiBd,KAIpBqD,CAAyBuV,yBC7ClCO,GAAWC,KAAKC,cAETC,GAAW,SAAC5U,GACrB,IAAMqM,EAAO,IAAIqI,KAAKD,IAAY,yBAElC,OADAzU,EpBNO,CACHtC,KAAM,cACNmX,WoBIgBxI,IACbA,GAGEyI,GAAW,eAAApV,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAlE,EAAAmE,KAAG,SAAAC,EAAOsM,EAAMrM,GAAb,IAAA+U,EAAAtZ,EAAA,OAAAoE,EAAAlE,EAAAsE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBqU,GAASO,SADQ,cAAA9U,EAAAE,KAAA,EAEAiM,EAAKE,IAAI0I,cAFT,cAEjBF,EAFiB7U,EAAAyB,KAGjBlG,EAAUsZ,EAAS,GACzB/U,EAASpB,EAAkBnD,IAJJyE,EAAA6M,OAAA,SAKhBtR,GALgB,wBAAAyE,EAAAa,SAAAhB,MAAH,gBAAAiB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAA9C,KAAA+C,YAAA,GCDlB+T,gMAIJ9W,KAAKoU,mBAAmBpU,KAAKC,MAAM2B,6FAGXA,8EAClBqM,EAAOuI,GAAS5U,0BAErBsH,MAAM,iEAGiB+E,EAAKE,IAAI4I,IAAIC,sBAA/B9I,kBACsBwI,GAAYzI,EAAMrM,4CAE7CsH,MAAM,sEAGa8E,GAAUC,EAAMC,EAAWtM,0BAE9CsH,MAAM,gEAEgB2F,GAAaZ,EAAMC,EAAWtM,mBAEpDsH,MAAM,4LAKP,OACChK,EAAA3B,EAAA4B,cAAA,WACCD,EAAA3B,EAAA4B,cAAC8X,EAAD,MACCjX,KAAKC,MAAMiX,gBAAkBhY,EAAA3B,EAAA4B,cAACgY,GAAD,MAAcjY,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,oBAjC7CkB,aA8CHC,mBANf,SAAyBrD,GACxB,MAAO,CACNga,gBAAiB/Y,EAAwBjB,KAI5BqD,CAAyBuW,iCCqExC,IAMeM,GANK,IAAIC,KAAgB,CACpCpJ,KA5HJ,WAAkC,IAApB/Q,EAAoB6F,UAAA6J,OAAA,QAAA5B,IAAAjI,UAAA,GAAAA,UAAA,GAAZ,GAAIuU,EAAQvU,UAAA6J,OAAA,EAAA7J,UAAA,QAAAiI,EAC9B,OAAQsM,EAAOhY,MACX,IAAK,cACD,OAAOiC,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBuZ,WAAYa,EAAOb,aAC1C,IAAK,sBACD,OAAOlV,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBG,QAASia,EAAOja,UACvC,IAAK,uBACG,OAAOkE,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBP,QAAS2a,EAAO3a,UAC3C,QACI,OAAOO,IAoHfuD,MAhHJ,WAAmC,IAApBvD,EAAoB6F,UAAA6J,OAAA,QAAA5B,IAAAjI,UAAA,GAAAA,UAAA,GAAZ,GAAIuU,EAAQvU,UAAA6J,OAAA,EAAA7J,UAAA,QAAAiI,EAC/B,OAAQsM,EAAOhY,MACX,IAAK,eACD,OAAOiC,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBgK,QAAQ,EAAMqQ,SAAUD,EAAO7W,MAAOC,KAAM4W,EAAO5W,OAC1E,IAAK,uBACG,OAAOa,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBP,QAAS2a,EAAO3a,UAC3C,QACI,OAAOO,IA0GfyD,SAtGJ,WAAsC,IAC9B6W,EAAOhK,EADGtQ,EAAoB6F,UAAA6J,OAAA,QAAA5B,IAAAjI,UAAA,GAAAA,UAAA,GAAZ,GAAIuU,EAAQvU,UAAA6J,OAAA,EAAA7J,UAAA,QAAAiI,EAElC,OAAQsM,EAAOhY,MACX,IAAK,kBACD,OAAOiC,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBgK,QAAQ,EAAMqQ,SAAUD,EAAO3W,WACtD,IAAK,0BACD,OAAOY,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB2D,gBAAiB,CAACqG,QAAQ,EAAMsG,KAAM8J,EAAOzW,mBACpE,IAAK,gBACD,OAAOU,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB6D,OAAQ,CAACmG,QAAQ,EAAMsG,KAAM8J,EAAOvW,UAC3D,IAAK,gBACD,OAAOQ,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB+D,OAAQ,CAACiG,QAAQ,EAAMsG,KAAM8J,EAAOrW,UAC3D,IAAK,mBACD,OAAOM,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBiN,iBAAiB,IACxC,IAAK,kBACD,OAAO5I,OAAAyC,GAAA,EAAAzC,CAAA,GACArE,EADP,CAEIiN,iBAAiB,EACjBtJ,gBAAgBU,OAAAyC,GAAA,EAAAzC,CAAA,GACTrE,EAAM2D,gBADE,CAEX2M,KAAI,GAAArF,OAAA5G,OAAAkW,GAAA,EAAAlW,CACGrE,EAAM2D,gBAAgB2M,MADzB,CAEA8J,EAAOjV,YAIvB,IAAK,gBACD,OAAOd,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBoM,cAAc,IACrC,IAAK,eAQD,OANAkO,EAAQta,EAAM+D,OAAOuM,KAAKkK,UAAU,SAAArV,GAAK,OAAIA,EAAMkE,MAAQ+Q,EAAOjV,MAAMkE,MACxEiH,EAAOtQ,EAAM+D,OAAOuM,MAEL,IAAXgK,IACAhK,EAAI,GAAArF,OAAA5G,OAAAkW,GAAA,EAAAlW,CAAOrE,EAAM+D,OAAOuM,MAApB,CAA0B8J,EAAOjV,SAElCd,OAAAyC,GAAA,EAAAzC,CAAA,GACArE,EADP,CAEIoM,cAAa,EACbrI,OAAOM,OAAAyC,GAAA,EAAAzC,CAAA,GACArE,EAAM+D,OADP,CAEFuM,WAGZ,IAAK,gCACD,OAAOjM,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBsS,aAAc8H,EAAO3a,UAC5C,IAAK,gCACD,OAAO4E,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBuS,aAAc6H,EAAO3a,UAC5C,IAAK,mBACD,OAAO4E,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBwX,iBAAiB,IACxC,IAAK,kBACD,OAAOnT,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBwX,iBAAiB,IACxC,IAAK,+BACD,OAAOnT,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBqT,mBAAoB+G,EAAO9G,SAClD,IAAK,gCACD,OAAOjP,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBoU,oBAAqBgG,EAAO9G,SACnD,IAAK,+BACG,OAAOjP,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmBoX,mBAAoBgD,EAAO9G,SACtD,IAAK,gCACD,OAAOjP,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmByV,oBAAqB2E,EAAO9G,SACnD,IAAK,2BACD,OAAOjP,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB6X,SAASxT,OAAAyC,GAAA,EAAAzC,CAAA,GAAMrE,EAAM6X,SAAb,CAAuBvE,OAAQ8G,EAAO9G,WACrE,IAAK,0BACD,OAAOjP,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB6X,SAASxT,OAAAyC,GAAA,EAAAzC,CAAA,GAAMrE,EAAM6X,SAAb,CAAuB1P,MAAOiS,EAAOjS,UACpE,IAAK,mBACD,OAAO9D,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB6X,SAASxT,OAAAyC,GAAA,EAAAzC,CAAA,GAAMrE,EAAM6X,SAAb,CAAuBvE,OAAQ,KAAMnL,MAAO,KAAMwQ,QAAQ,MACzF,IAAK,4BACD,OAAOtU,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB8X,UAAUzT,OAAAyC,GAAA,EAAAzC,CAAA,GAAMrE,EAAM8X,UAAb,CAAwBxE,OAAQ8G,EAAO9G,WACvE,IAAK,2BACD,OAAOjP,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB8X,UAAUzT,OAAAyC,GAAA,EAAAzC,CAAA,GAAMrE,EAAM8X,UAAb,CAAwB3P,MAAOiS,EAAOjS,UACtE,IAAK,oBACD,OAAO9D,OAAAyC,GAAA,EAAAzC,CAAA,GAAKrE,EAAZ,CAAmB8X,UAAUzT,OAAAyC,GAAA,EAAAzC,CAAA,GAAMrE,EAAM8X,UAAb,CAAwBxE,OAAQ,KAAMnL,MAAO,KAAMwQ,QAAQ,MAC3F,IAAK,aAOD,OALA2B,EAAQta,EAAM6D,OAAOyM,KAAKkK,UAAU,SAAArV,GAAK,OAAIA,EAAMkE,MAAQ+Q,EAAOjV,MAAMkE,MACxEiH,EAAOtQ,EAAM6D,OAAOyM,MACL,IAAXgK,IACAhK,EAAI,GAAArF,OAAA5G,OAAAkW,GAAA,EAAAlW,CAAOrE,EAAM6D,OAAOyM,MAApB,CAA0B8J,EAAOjV,SAElCd,OAAAyC,GAAA,EAAAzC,CAAA,GACArE,EADP,CAEI6D,OAAOQ,OAAAyC,GAAA,EAAAzC,CAAA,GACArE,EAAM6D,OADP,CAEFyM,SAEJuH,SAASxT,OAAAyC,GAAA,EAAAzC,CAAA,GACFrE,EAAM6X,SADL,CAEJc,QAAO,IAEXb,UAAUzT,OAAAyC,GAAA,EAAAzC,CAAA,GACHrE,EAAM8X,UADJ,CAELa,QAAO,MAGnB,QACI,OAAO3Y,MCpHbya,GAAmBC,0BACnBC,GAAa,GAGbC,GAAmB7O,OAAO8O,sCAAwCC,KCIxE,IDFuCC,GCEnBC,QACW,cAA7BjP,OAAOkP,SAASC,UAEe,UAA7BnP,OAAOkP,SAASC,UAEhBnP,OAAOkP,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACLrZ,EAAA3B,EAAA4B,cAACqZ,EAAA,EAAD,CAAUC,MFEHC,aACHtB,GACAa,GACAH,GAAiBa,KAAe7V,WAAf,EAAmB+U,GAAnB1P,OAAA,CAA+BwP,SEJhDzY,EAAA3B,EAAA4B,cAACyZ,GAAD,OAEJC,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0343ef4f.chunk.js","sourcesContent":["export const ETHER_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const GREEN = \"success\";\nexport const RED = \"danger\";\nexport const DECIMALS = (10**18);\n\n//calculate without importing web3\nexport const tokens = (wei) => {\n    if(wei) {\n        return (wei / DECIMALS);\n    }\n}\n\nexport const ether = tokens;\n\nexport const formatBalance = (balance) => {\n    const precision = 100; //2 dm\n    balance = ether(balance);\n    balance = Math.round(balance * precision) / precision;\n    return balance;\n}\n\nexport const removeTrailingZeros = (number) => {\n    number = number.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/,'$1');\n    return number;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\nconst web3 = state => get(state, 'web3.connection');\nexport const web3Selector = createSelector(web3, w => w);\n\nexport const account = state => get(state, 'web3.account');\nexport const accountSelector = createSelector(account, a => a);\n\nconst etherBalance = state => get(state, 'web3.balance');\nexport const etherBalanceSelector = createSelector(etherBalance, (balance) => {\n    return formatBalance(balance);\n});","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\n\nexport const tokenLoaded = state => get(state, 'token.loaded', false);\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl);\n\nconst token = state => get(state, 'token.contract');\nexport const tokenSelector = createSelector(token, t => t);\n\nconst tokenName = state => get(state, 'token.name');\nexport const tokenNameSelector = createSelector(tokenName, tn => tn);\n\nexport const exchangeLoaded = state => get(state, 'exchange.loaded', false);\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el);\n\nexport const exchange = state => get(state, 'exchange.contract', false);\nexport const exchangeSelector = createSelector(exchange, e => e);\n\nexport const contractsLoadedSelector = createSelector(\n    tokenLoaded, \n    exchangeLoaded, \n    (tl, el) => (tl && el)\n);\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', false);\nexport const balancesLoadingSelector = createSelector(balancesLoading, bl => bl);\n\nconst tokenBalance = state => get(state, 'token.balance');\nexport const tokenBalanceSelector = createSelector(tokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance');\nexport const exchangeEtherBalanceSelector = createSelector(exchangeEtherBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance');\nexport const exchangeTokenBalanceSelector = createSelector(exchangeTokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', 0);\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, eda => eda);\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', 0);\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, ewa => ewa);\n\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', 0);\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, tda => tda);\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', 0);\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, twa => twa);","import React, {Component} from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {accountSelector} from '../store/selectors/web3';\nimport {tokenNameSelector} from '../store/selectors/contracts';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <a className=\"navbar-brand\" href=\"/#\">Ethereum Dex - (Kovan Network)</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                    <Dropdown>\n                        <Dropdown.Toggle size=\"sm\" id=\"dropdown-basic\">\n                            {this.props.tokenName}/ETH\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {/* <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item> */}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a \n                            className=\"nav-link small\"\n                            href={'https://etherscan.io/address/' + this.props.account}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.props.account}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    return {\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","export function web3Loaded(connection){\n    return {\n        type: 'WEB3_LOADED',\n        connection\n    }\n}\n\nexport function web3AccountLoaded(account){\n    return {\n        type: 'WEB3_ACCOUNT_LOADED',\n        account\n    }\n}\n\nexport function tokenLoaded(token, name){\n    return {\n        type: 'TOKEN_LOADED',\n        token,\n        name\n    }\n}\n\nexport function exchangeLoaded(exchange){\n    return {\n        type: 'EXCHANGE_LOADED',\n        exchange\n    }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders){\n    return {\n        type: 'CANCELLED_ORDERS_LOADED',\n        cancelledOrders\n    }\n}\n\nexport function ordersLoaded(orders){\n    return {\n        type: 'ORDERS_LOADED',\n        orders\n    }\n}\n\nexport function tradesLoaded(trades){\n    return {\n        type: 'TRADES_LOADED',\n        trades\n    }\n}\n\nexport function orderCancelling(){\n    return {\n        type: 'ORDER_CANCELLING',\n    }\n}\n\nexport function orderCancelled(order){\n    return {\n        type: 'ORDER_CANCELLED',\n        order\n    }\n}\n\nexport function orderFilling(){\n    return {\n        type: 'ORDER_FILLING'\n    }\n}\n\nexport function orderFilled(order){\n    return {\n        type: 'ORDER_FILLED',\n        order\n    }\n}\n\nexport function etherBalanceLoaded(balance){\n    return {\n        type: 'ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function tokenBalanceLoaded(balance){\n    return {\n        type: 'TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeEtherBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeTokenBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function balancesLoaded(){\n    return {\n        type: 'BALANCES_LOADED'\n    }\n}\n\nexport function balancesLoading(){\n    return {\n        type: 'BALANCES_LOADING'\n    }\n}\n\nexport function etherDepositAmountChanged(amount){\n    return {\n        type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function etherWithdrawAmountChanged(amount){\n    return {\n        type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenDepositAmountChanged(amount){\n    return {\n        type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenWithdrawAmountChanged(amount){\n    return {\n        type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderAmountChanged(amount) {\n    return {\n        type: 'BUY_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderPriceChanged(price) {\n    return {\n        type: 'BUY_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function buyOrderMaking(){\n    return {\n        type: 'BUY_ORDER_MAKING'\n    }\n}\n\nexport function sellOrderAmountChanged(amount) {\n    return {\n        type: 'SELL_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function sellOrderPriceChanged(price) {\n    return {\n        type: 'SELL_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function sellOrderMaking(){\n    return {\n        type: 'SELL_ORDER_MAKING'\n    }\n}\n\nexport function orderMade(order){\n    return {\n        type: 'ORDER_MADE',\n        order\n    }\n}","import {orderCancelled, orderFilled, balancesLoaded, orderMade} from \"../actions\";\n\n//Subscriptions\nexport const subscribeToEvents = async (dispatch, exchange) => {\n    exchange.events.Cancel({}, (error, event) => {\n        dispatch(orderCancelled(event.returnValues))\n    });\n\n    exchange.events.Trade({}, (error, event) => {\n        dispatch(orderFilled(event.returnValues));\n    });\n\n    exchange.events.Deposit({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Withdraw({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Order({}, (error, event) => {\n        dispatch(orderMade(event.returnValues));\n    })\n}","import {\n    cancelledOrdersLoaded,\n    ordersLoaded,\n    tradesLoaded,\n    orderCancelling,\n    orderFilling,\n    buyOrderMaking\n} from \"../actions\";\nimport {ETHER_ADDRESS} from '../../helpers';\n\nexport const loadAllOrders = async (dispatch, exchange) => {\n    try{\n        // Cancelled\n        const cancelStream = await exchange.getPastEvents(\"Cancel\", {fromBlock: 0, toBlock: 'latest'});\n        const cancelledOrders = cancelStream.map((event) => event.returnValues);\n        dispatch(cancelledOrdersLoaded(cancelledOrders));\n        // Trade events (filles)\n        const tradeStream = await exchange.getPastEvents(\"Trade\", {fromBlock: 0, toBlock: 'latest'});\n        const trades = tradeStream.map((event) => event.returnValues);\n        dispatch(tradesLoaded(trades));\n        // Open orders\n        const orderStream = await exchange.getPastEvents(\"Order\", {fromBlock: 0, toBlock: 'latest'});\n        const orders = orderStream.map((event) => event.returnValues);\n        dispatch(ordersLoaded(orders));\n\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.cancelOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderCancelling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.fillOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderFilling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = token.options.address;\n    const amountGet = web3.utils.toWei(order.amount, 'ether');\n    const tokenGive = ETHER_ADDRESS;\n    const amountGive = web3.utils.toWei((order.amount * order.price).toFixed(18), 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = ETHER_ADDRESS;\n    const amountGet = web3.utils.toWei((order.amount * order.price).toFixed(18), 'ether');\n    const tokenGive = token.options.address;\n    const amountGive = web3.utils.toWei(order.amount, 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}","import {ether, tokens, GREEN, RED, ETHER_ADDRESS} from '../../../helpers';\nimport moment from 'moment';\n\n//My Transactions\nexport const decorateMyFilledOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyFilledOrder(order, account)\n        return(order)\n        })\n    )\n}\n//decorate orders depending on if they are buy or sell\nconst decorateMyFilledOrder = (order, account) => {\n    const myOrder = order._user === account\n\n    let orderType\n    if(myOrder) {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n    } else {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n    }\n\n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n        orderSign: (orderType === 'buy' ? '+' : '-')\n    })\n}\nexport const decorateMyOpenOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyOpenOrder(order, account)\n        return(order)\n        })\n    )\n}\nconst decorateMyOpenOrder = (order, account) => {\n    let orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  \n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n    })\n}\n\n//Order Book\nexport const decorateOrderBookOrders = (orders) => {\n    return(\n        orders.map((order) => {\n            order = decorateOrder(order);\n            order = decorateOrderBookOrder(order);\n            return order;\n        })\n    )\n}\nconst decorateOrderBookOrder = (order) => {\n    const orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy') ? GREEN : RED,\n        orderFillAction: (orderType === 'buy') ? 'sell' : 'buy'\n    })\n}\n\n\n//Filled Orders\nexport const decorateFilledOrders = (orders) => {\n    let previousOrder = orders[0];\n    return(orders.map((order) => {\n        order = decorateOrder(order);\n        order = decorateFilledOrder(order, previousOrder);\n        previousOrder = order;\n        return order;\n    }));\n}\n//decorate objects to be readable from events\nconst decorateOrder = (order) => {\n    let etherAmount, tokenAmount;\n    if(order._tokenGive === \"0x0000000000000000000000000000000000000000\") {\n        etherAmount = order._amountGive;\n        tokenAmount = order._amountGet;\n    }\n    else{\n        etherAmount = order._amountGet;\n        tokenAmount = order._amountGive;\n    }\n\n    const precision = 100000;\n    let tokenPrice = (etherAmount / tokenAmount);\n    tokenPrice = Math.round(tokenPrice * precision) / precision;\n\n    return({\n        ...order,\n        etherAmount: ether(etherAmount),\n        tokenAmount: tokens(tokenAmount),\n        tokenPrice,\n        formattedTimestamp: moment.unix(order._timestamp).format('h:mm:ss a M/D')\n    });\n}\n//Specific decorator for filled orders only\n//If higher than previous = green, lower than previous = red\nconst decorateFilledOrder = (order, previousOrder) => {\n    return ({\n        ...order,\n        tokenPriceClass: tokenPriceClass(order.tokenPrice, previousOrder)\n    });\n}\n\nconst tokenPriceClass = (price, previousOrder) => {\n    return (previousOrder.tokenPrice > price) ? RED : GREEN;\n}","import {get, reject, groupBy} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {account} from './web3';\nimport {decorateFilledOrders, \n    decorateOrderBookOrders, \n    decorateMyFilledOrders,\n    decorateMyOpenOrders\n} from './decorators/orders';\n\nexport const cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false);\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col);\n\nexport const cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', []);\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, co => co);\n\nexport const ordersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const ordersLoadedSelector = createSelector(ordersLoaded, ol => ol);\n\nexport const orders = state => get(state, 'exchange.orders.data', []);\nexport const ordersSelector = createSelector(orders, o => o);\n\nexport const filledOrdersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, ol => ol);\n\nexport const filledOrders = state => get(state, 'exchange.trades.data', []);    \nexport const filledOrdersSelector = createSelector(\n    filledOrders, \n    (orders) => {\n        //sort ascending for price comparison\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        //sort descending for display\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    } \n);\n\n//Return order that have not been traded (filled) or cancelled\nconst openOrders = state => {\n    const all = orders(state);\n    const cancelled = cancelledOrders(state);\n    const filled = filledOrders(state);\n\n    //reject the orders if they appear in filled or cancelled\n    const openOrders = reject(all, (order) => {\n        const orderFilled = filled.some((o) => o._id === order._id);\n        const orderCancelled = cancelled.some((o) => o._id === order._id);\n        return (orderFilled || orderCancelled);\n    });\n    return openOrders;\n}\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && ordersLoaded(state);\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl);\nexport const orderBookSelector = createSelector(\n    openOrders,\n    (orders) => {\n        //decorate\n        orders = decorateOrderBookOrders(orders);\n        //group by type\n        orders = groupBy(orders, 'orderType');\n        let buyOrders = get(orders, 'buy', []);\n        let sellOrders = get(orders, 'sell', []);\n        orders = {\n            ...orders,\n            buyOrders: buyOrders.sort((a, b) => b.tokenPrice - a.tokenPrice),\n            sellOrders: sellOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\n        }\n        return orders;\n    }\n)\n\n//If all trades loaded, the my trades are definitely loaded\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const myFilledOrdersSelector = createSelector(\n    account,\n    filledOrders,\n    (account, orders) => {\n        // Find our orders\n        orders = orders.filter((o) => o._user === account || o._userFill === account);\n        // Sort by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        // Decorate orders - add display attributes\n        orders = decorateMyFilledOrders(orders, account);\n        return orders;\n    }\n)\n\n//If the order book is loaded, my open orders are definitely loaded\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded);\nexport const myOpenOrdersSelector = createSelector(\n    account,\n    openOrders,\n    (account, orders) => {\n        // Filter orders created by current account\n        orders = orders.filter((o) => o._user === account);\n        // Decorate orders - add display attributes\n        orders = decorateMyOpenOrders(orders);\n        // Sort orders by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    }\n)\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false);\nexport const orderCancellingSelector = createSelector(orderCancelling, oc => oc);\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false);\nexport const orderFillingSelector = createSelector(orderFilling, of => of);\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {});\nexport const buyOrderSelector = createSelector(buyOrder, bo => bo);\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {});\nexport const sellOrderSelector = createSelector(sellOrder, bo => bo);","import React from 'react';\n\nexport default function({type}){\n    if(type === 'table') {\n        return (<tbody className=\"spinner-border text-light text-center\"></tbody>);\n    }\n    return (<div className=\"spinner-border text-light text-center\"></div>);\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {filledOrdersSelector, filledOrdersLoadedSelector} from '../store/selectors/orders';\nimport Spinner from './Spinner';\nimport { tokenNameSelector } from '../store/selectors/contracts';\n\nconst showFilledOrders = (filledOrders) => {\n    return (\n        <tbody>\n            {filledOrders.map((order) => {\n                return (\n                    <tr className={`trade-${order._id}`} key={order._id}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td>{order.tokenAmount}</td>\n                        <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass Trades extends Component {\n\n    render() {\n        const {tokenName} = this.props;\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Trades\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-dark table-sm small\">\n                            <thead>\n                                <tr>\n                                    <th>Time</th>\n                                    <th>{tokenName}</th>\n                                    <th>{tokenName}/Eth</th>\n                                </tr>\n                            </thead>\n                            { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" />}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        filledOrdersLoaded: filledOrdersLoadedSelector(state),\n        filledOrders: filledOrdersSelector(state),\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(Trades);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {orderBookLoadedSelector, orderBookSelector, orderFillingSelector} from '../store/selectors/orders';\nimport {exchangeSelector, tokenNameSelector} from '../store/selectors/contracts';\nimport {accountSelector} from '../store/selectors/web3';\n\nimport Spinner from './Spinner';\nimport { fillOrder } from '../store/interactions/orders';\n\nconst renderOrder = (order, props) => {\n    const { dispatch, exchange, account} = props;\n    return (\n        <OverlayTrigger key={order._id} placement='auto' \n            overlay={\n                <Tooltip id={order._id}>\n                    {`Click here to ${order.orderFillAction}`}\n                </Tooltip>\n            }\n        >\n            <tr key={order._id} className=\"order-book-order\" onClick={(e) => fillOrder(dispatch, exchange, order, account)}>\n                <td>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td>{order.etherAmount}</td>\n            </tr>\n        </OverlayTrigger>\n    )\n}\n\nconst showOrderBook = (props) => {\n    //fetch key from props using ES6\n    const {orderBook, tokenName} = props;\n    return (\n        <tbody>\n            {orderBook.sellOrders.map((order) => renderOrder(order, props))}\n            <tr>\n                <th>{tokenName}</th>\n                <th>{tokenName}/ETH</th>\n                <th>ETH</th>\n            </tr>\n            {orderBook.buyOrders.map((order) => renderOrder(order, props))}\n        </tbody>\n    );\n}\n\nclass OrderBook extends Component {\n    render() {\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Order Book\n                    </div>\n                    <div className=\"card-body order-book\">\n                        <table className=\"table table-dark table-sm small\">\n                            {this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type=\"table\"/>}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    const orderBookLoaded = orderBookLoadedSelector(state);\n    const orderFilling = orderFillingSelector(state);\n    return {\n        orderBook: orderBookSelector(state),\n        showOrderBook: orderBookLoaded && !orderFilling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(OrderBook);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {myFilledOrdersSelector,\n    myFilledOrdersLoadedSelector,\n    myOpenOrdersLoadedSelector,\n    myOpenOrdersSelector,\n    orderCancellingSelector\n} from '../store/selectors/orders';\nimport {exchangeSelector, tokenNameSelector} from '../store/selectors/contracts';\nimport {accountSelector} from '../store/selectors/web3';\nimport {cancelOrder} from '../store/interactions/orders';\n\nconst showMyFilledOrders = (myFilledOrders) => {\n    return (\n        <tbody>\n            {myFilledOrders.map((order) => {\n                return (\n                    <tr key={`filled-${order._id}`}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nconst showMyOpenOrders = (props) => {\n    const {myOpenOrders, dispatch, exchange, account} = props\n    return (\n        <tbody>\n            {myOpenOrders.map((order) => {\n                return (\n                    <tr key={`open-${order._id}`}>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                        <td \n                            className=\"text-muted cancel-order\"\n                            onClick={(e) => {\n                                cancelOrder(dispatch, exchange, order, account);\n                            }}\n                        >x</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass MyTransactions extends Component {\n    render() {\n        const {tokenName} = this.props;\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    My Transactions\n                </div>\n                <div className=\"card-body\">\n                    <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n                        <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Time</th>\n                                        <th>{tokenName}</th>\n                                        <th>{tokenName}/ETH</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyFilledOrders ? showMyFilledOrders(this.props.myFilledOrders) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Amount</th>\n                                        <th>{tokenName}/ETH</th>\n                                        <th>Cancel</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const openOrdersLoaded = myOpenOrdersLoadedSelector(state);\n    const orderCancelling = orderCancellingSelector(state);\n\n    return {\n        myFilledOrders: myFilledOrdersSelector(state),\n        showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n        myOpenOrders: myOpenOrdersSelector(state),\n        showMyOpenOrders: openOrdersLoaded && !orderCancelling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(MyTransactions);","export const chartOptions = {\n    chart: {\n      animations: { enabled: false },\n      toolbar: { show: false },\n      width: '100px'\n    },\n    tooltip: {\n      enabled: true,\n      theme: false,\n      style: {\n        fontSize: '12px',\n        fontFamily: undefined\n      },\n      x: {\n          show: false,\n          format: 'dd MMM',\n          formatter: undefined,\n      },\n      y: {\n        show: true,\n        title: 'price'\n      },\n      marker: {\n        show: false,\n      },\n      items: {\n         display: 'flex',\n      },\n      fixed: {\n          enabled: false,\n          position: 'topRight',\n          offsetX: 0,\n          offsetY: 0,\n      },\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        show: true,\n        style: {\n            colors: '#fff',\n            fontSize: '8px',\n            cssClass: 'apexcharts-xaxis-label',\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        minWidth: 0,\n        maxWidth: 160,\n        style: {\n          color: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-yaxis-label',\n        },\n        offsetX: 0,\n        offsetY: 0,\n        rotate: 0,\n      }\n    }\n  }\n  \n  export const dummyData = [\n    {\n      data: [\n        {\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        },\n        {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        },\n        {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        },\n        {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        },\n        {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        },\n        {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        },\n        {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        },\n        {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        },\n        {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        },\n        {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        },\n        {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        },\n        {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        },\n        {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        },\n        {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        },\n        {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        },\n        {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        },\n        {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        },\n        {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        },\n        {\n          x: new Date(1538811000000),\n          y: [6623.48, 6627, 6618.38, 6620.35]\n        },\n        {\n          x: new Date(1538812800000),\n          y: [6619.43, 6620.35, 6610.05, 6615.53]\n        },\n        {\n          x: new Date(1538814600000),\n          y: [6615.53, 6617.93, 6610, 6615.19]\n        },\n        {\n          x: new Date(1538816400000),\n          y: [6615.19, 6621.6, 6608.2, 6620]\n        },\n        {\n          x: new Date(1538818200000),\n          y: [6619.54, 6625.17, 6614.15, 6620]\n        },\n        {\n          x: new Date(1538820000000),\n          y: [6620.33, 6634.15, 6617.24, 6624.61]\n        },\n        {\n          x: new Date(1538821800000),\n          y: [6625.95, 6626, 6611.66, 6617.58]\n        },\n        {\n          x: new Date(1538823600000),\n          y: [6619, 6625.97, 6595.27, 6598.86]\n        },\n        {\n          x: new Date(1538825400000),\n          y: [6598.86, 6598.88, 6570, 6587.16]\n        },\n        {\n          x: new Date(1538827200000),\n          y: [6588.86, 6600, 6580, 6593.4]\n        },\n        {\n          x: new Date(1538829000000),\n          y: [6593.99, 6598.89, 6585, 6587.81]\n        },\n        {\n          x: new Date(1538830800000),\n          y: [6587.81, 6592.73, 6567.14, 6578]\n        },\n        {\n          x: new Date(1538832600000),\n          y: [6578.35, 6581.72, 6567.39, 6579]\n        },\n        {\n          x: new Date(1538834400000),\n          y: [6579.38, 6580.92, 6566.77, 6575.96]\n        },\n        {\n          x: new Date(1538836200000),\n          y: [6575.96, 6589, 6571.77, 6588.92]\n        },\n        {\n          x: new Date(1538838000000),\n          y: [6588.92, 6594, 6577.55, 6589.22]\n        },\n        {\n          x: new Date(1538839800000),\n          y: [6589.3, 6598.89, 6589.1, 6596.08]\n        },\n        {\n          x: new Date(1538841600000),\n          y: [6597.5, 6600, 6588.39, 6596.25]\n        },\n        {\n          x: new Date(1538843400000),\n          y: [6598.03, 6600, 6588.73, 6595.97]\n        },\n        {\n          x: new Date(1538845200000),\n          y: [6595.97, 6602.01, 6588.17, 6602]\n        },\n        {\n          x: new Date(1538847000000),\n          y: [6602, 6607, 6596.51, 6599.95]\n        },\n        {\n          x: new Date(1538848800000),\n          y: [6600.63, 6601.21, 6590.39, 6591.02]\n        },\n        {\n          x: new Date(1538850600000),\n          y: [6591.02, 6603.08, 6591, 6591]\n        },\n        {\n          x: new Date(1538852400000),\n          y: [6591, 6601.32, 6585, 6592]\n        },\n        {\n          x: new Date(1538854200000),\n          y: [6593.13, 6596.01, 6590, 6593.34]\n        },\n        {\n          x: new Date(1538856000000),\n          y: [6593.34, 6604.76, 6582.63, 6593.86]\n        },\n        {\n          x: new Date(1538857800000),\n          y: [6593.86, 6604.28, 6586.57, 6600.01]\n        },\n        {\n          x: new Date(1538859600000),\n          y: [6601.81, 6603.21, 6592.78, 6596.25]\n        },\n        {\n          x: new Date(1538861400000),\n          y: [6596.25, 6604.2, 6590, 6602.99]\n        },\n        {\n          x: new Date(1538863200000),\n          y: [6602.99, 6606, 6584.99, 6587.81]\n        },\n        {\n          x: new Date(1538865000000),\n          y: [6587.81, 6595, 6583.27, 6591.96]\n        },\n        {\n          x: new Date(1538866800000),\n          y: [6591.97, 6596.07, 6585, 6588.39]\n        },\n        {\n          x: new Date(1538868600000),\n          y: [6587.6, 6598.21, 6587.6, 6594.27]\n        },\n        {\n          x: new Date(1538870400000),\n          y: [6596.44, 6601, 6590, 6596.55]\n        },\n        {\n          x: new Date(1538872200000),\n          y: [6598.91, 6605, 6596.61, 6600.02]\n        },\n        {\n          x: new Date(1538874000000),\n          y: [6600.55, 6605, 6589.14, 6593.01]\n        },\n        {\n          x: new Date(1538875800000),\n          y: [6593.15, 6605, 6592, 6603.06]\n        },\n        {\n          x: new Date(1538877600000),\n          y: [6603.07, 6604.5, 6599.09, 6603.89]\n        },\n        {\n          x: new Date(1538879400000),\n          y: [6604.44, 6604.44, 6600, 6603.5]\n        },\n        {\n          x: new Date(1538881200000),\n          y: [6603.5, 6603.99, 6597.5, 6603.86]\n        },\n        {\n          x: new Date(1538883000000),\n          y: [6603.85, 6605, 6600, 6604.07]\n        },\n        {\n          x: new Date(1538884800000),\n          y: [6604.98, 6606, 6604.07, 6606]\n        },\n      ]\n    }\n  ]\n  ","import moment from 'moment';\nimport {groupBy, maxBy, minBy} from 'lodash';\n\nexport const buildGraphData = (orders) => {\n    orders = groupBy(orders, (o) => moment.unix(o._timestamp).startOf('hour').format());\n    const hours = Object.keys(orders);\n    \n    const graphData = hours.map((hour) => {\n        // calculate open, low, high, close\n        const hourGroup = orders[hour];\n        const open = hourGroup[0];\n        const close = hourGroup[hourGroup.length-1];\n        const high = maxBy(hourGroup, 'tokenPrice');\n        const low = minBy(hourGroup, 'tokenPrice');\n        return ({\n            x: new Date(hour),\n            y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n        });\n    });\n    return graphData;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {decorateFilledOrders} from './decorators/orders';\nimport {buildGraphData} from './decorators/priceChart';\nimport {filledOrdersLoaded, filledOrders} from './orders';\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const priceChartSelector = createSelector(\n    filledOrders,\n    (orders) => {\n        //ascending date, earliest to latest\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        let lastOrder = orders[orders.length-1];\n        let secondLastOrder = orders[orders.length-2];\n        let lastPrice = get(lastOrder, 'tokenPrice', 0);\n        let secondLastPrice = get(secondLastOrder, 'tokenPrice', 0);\n\n        return ({\n            lastPrice,\n            lastPriceChange: (lastPrice >= secondLastPrice) ? '+' : '-',\n            series: [{\n                data: buildGraphData(orders)\n            }]\n        });\n    }\n)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport Chart from 'react-apexcharts';\nimport {chartOptions} from './PriceChart.config';\nimport {priceChartLoadedSelector, priceChartSelector} from '../store/selectors/priceChart';\nimport { tokenNameSelector } from '../store/selectors/contracts';\n\nconst priceSymbol = (lastPriceChange) => {\n    let output;\n    if(lastPriceChange === '+') {\n        output = <span className=\"text-success\">&#9650;</span> // Green up tiangle\n    } else {\n        output = <span className=\"text-danger\">&#9660;</span> // Red down triangle\n    }\n    return(output);\n}\n\nconst showPriceChart = (props) => {\n    const {chartData, tokenName} = props;\n    return (\n        <div className=\"price-chart\">\n            <h4>{tokenName}/ETH &nbsp; {priceSymbol(chartData.lastPriceChange)} &nbsp; {chartData.lastPrice}</h4>\n            <Chart options={chartOptions} series={chartData.series} type=\"candlestick\" width=\"100%\" height=\"100%\" />\n        </div>\n    );\n}\n\nclass PriceChart extends Component {\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Graph\n                </div>\n                <div className=\"card-body\">\n                    {(this.props.showChart) ? showPriceChart(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showChart: priceChartLoadedSelector(state),\n        chartData: priceChartSelector(state),\n        tokenName: tokenNameSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(PriceChart);","import {tokenLoaded, exchangeLoaded, tokenBalanceLoaded, exchangeEtherBalanceLoaded, exchangeTokenBalanceLoaded, balancesLoaded, balancesLoading} from '../actions';\nimport Token from '../../abis/Token.json';\nimport Exchange from '../../abis/Exchange.json';\nimport {ETHER_ADDRESS} from '../../helpers.js';\nimport {etherBalanceLoaded} from '../actions';\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n    try{\n        const token = web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n        const name = await token.methods.symbol().call();\n        dispatch(tokenLoaded(token, name));\n        return token;\n    }\n    catch (err){\n        window.alert(\"Contract not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n    try{\n        const exchange = web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n        dispatch(exchangeLoaded(exchange));\n        return exchange;\n    }\n    catch (err){\n        window.alert(\"Contract not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadBalances = async (web3, exchange, token, account, dispatch) => {\n    dispatch(balancesLoading());\n    \n    //ether balance\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    //token balance\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n    \n    //balance of account on the smart contract\n    const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    //token balance of account on the smart contract\n    const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    dispatch(balancesLoaded());\n}\n\nexport const depositEther = async (web3, exchange, account, etherDepositAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherDepositAmount, 'ether');\n    exchange.methods.depositEther.send({from: account, value: amount})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error depositing\");\n        });\n}\n\nexport const withdrawEther = async (web3, exchange, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n    exchange.methods.withdrawEther(amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}\n\nexport const depositToken = async (web3, exchange, token, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n\n    token.methods.approve(exchange.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            exchange.methods.depositToken(token.options.address, amount).send({from: account})\n                .on('transactionHash', (hash) => {\n                    dispatch(balancesLoading());\n                })\n                .on('error', (err) => {\n                    console.log(err);\n                    window.alert(\"error depositing token\");\n                });\n        });\n}\n\nexport const withdrawToken = async (web3, exchange, token, account, tokenWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(tokenWithdrawAmount, 'ether');\n    exchange.methods.withdrawToken(token.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass BalanceForm extends Component {\n    render(){\n        const {onSubmit, placeHolder, onChange, buttonText} = this.props;\n        return (\n            <form className=\"row\" onSubmit={onSubmit}>\n                <div className=\"col-12 col-sm pr-sm-2\">\n                    <input type=\"number\" \n                        step=\"any\"\n                        min=\"0\"\n                        placeholder={placeHolder} \n                        onChange={onChange}\n                        className=\"form-control form-control-sm bg-dark text-white\"\n                        required />\n                </div>\n                <div className=\"col-12 col-sm-auto pl-sm-0\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">{buttonText}</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nconst tableRow = (tokenName, walletAmount, exchangeAmount) => {\n    return (\n        <tr>\n            <th>{tokenName}</th>\n            <th>{walletAmount.toString()}</th>\n            <th>{exchangeAmount.toString()}</th>\n        </tr>\n    )\n}\n\nconst tableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Token</th>\n                <th>Wallet</th>\n                <th>Exchange</th>\n            </tr>\n        </thead>\n    );\n}\n\nclass BalanceTable extends Component {\n    render() {\n        const {hasHead, tokenName, walletAmount, exchangeAmount} = this.props;\n        return (\n            <table className=\"table table-dark table-sm small\">\n                {(hasHead) ? tableHead() : null}\n                <tbody>\n                    {tableRow(tokenName, walletAmount, exchangeAmount)}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceTable);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { exchangeSelector, \n    tokenSelector, \n    tokenBalanceSelector, \n    exchangeEtherBalanceSelector, \n    exchangeTokenBalanceSelector, \n    balancesLoadingSelector, \n    etherDepositAmountSelector,\n    etherWithdrawAmountSelector,\n    tokenDepositAmountSelector,\n    tokenWithdrawAmountSelector,\n    tokenNameSelector\n} from '../store/selectors/contracts';\nimport { web3Selector, accountSelector, etherBalanceSelector } from '../store/selectors/web3';\nimport { loadBalances, depositEther, withdrawEther, depositToken, withdrawToken} from '../store/interactions/contracts';\nimport { etherDepositAmountChanged, etherWithdrawAmountChanged, tokenDepositAmountChanged, tokenWithdrawAmountChanged } from '../store/actions';\nimport BalanceForm from './BalanceForm';\nimport BalanceTable from './BalanceTable';\n\n\nconst showForm = (props) => {\n    const {dispatch, etherBalance, tokenBalance, exchangeEtherBalance, exchangeTokenBalance, \n        etherDepositAmount, etherWithdrawAmount, tokenDepositAmount, tokenWithdrawAmount,\n        web3, exchange, token, account\n    } = props;\n\n    const depositEtherSubmit = (e) => {\n        e.preventDefault();\n        depositEther(web3, exchange, account, etherDepositAmount, dispatch);\n    }\n    const depositEtherChange = (e) => dispatch(etherDepositAmountChanged(e.target.value));\n\n    const depositTokenSubmit = (e) => {\n        e.preventDefault();\n        depositToken(web3, exchange, token, account, tokenDepositAmount, dispatch);\n    }\n    const depositTokenChange = (e) => dispatch(tokenDepositAmountChanged(e.target.value));\n\n    const withdrawEtherSubmit = (e) => {\n        e.preventDefault();\n        withdrawEther(web3, exchange, account, etherWithdrawAmount, dispatch);\n    }\n    const withdrawEtherChange = (e) => dispatch(etherWithdrawAmountChanged(e.target.value));\n\n    const withdrawTokenSubmit = (e) => {\n        e.preventDefault();\n        withdrawToken(web3, exchange, token, account, tokenWithdrawAmount, dispatch);\n    }\n    const withdrawTokenChange = (e) => dispatch(tokenWithdrawAmountChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey={\"deposit\"} className={\"bg-dark text-white\"}>\n            <Tab eventKey={\"deposit\"} title={\"Deposit\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={depositEtherSubmit} \n                    placeHolder={\"ETH Amount\"}\n                    onChange={depositEtherChange}\n                    buttonText={\"Deposit\"}\n                />\n                <BalanceTable hasHead={false} tokenName={props.tokenName} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={depositTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={depositTokenChange}\n                    buttonText={\"Deposit\"}  \n                />\n            </Tab>\n            <Tab eventKey={\"withdraw\"} title={\"Withdraw\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={withdrawEtherSubmit} \n                    placeHolder={\"ETH Amount\"} \n                    onChange={withdrawEtherChange}\n                    buttonText={\"Withdraw\"}    \n                />\n                <BalanceTable hasHead={false} tokenName={props.tokenName} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={withdrawTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={withdrawTokenChange}\n                    buttonText={\"Withdraw\"}    \n                />\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass Balance extends Component {\n\n    componentWillMount() {\n        this.loadBlockchainData();\n    }\n\n    async loadBlockchainData() {\n        const {dispatch, exchange, token, account, web3} = this.props;\n        await loadBalances(web3, exchange, token, account, dispatch);\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Balance\n                </div>\n                <div className=\"card-body\">\n                    {this.props.showForm ? showForm(this.props) : <Spinner />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const balancesLoading = balancesLoadingSelector(state)\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        tokenName: tokenNameSelector(state),\n        etherBalance: etherBalanceSelector(state),\n        tokenBalance: tokenBalanceSelector(state),\n        exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n        exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n        balancesLoading,\n        showForm: !balancesLoading,\n        etherDepositAmount: etherDepositAmountSelector(state),\n        etherWithdrawAmount: etherWithdrawAmountSelector(state),\n        tokenDepositAmount: tokenDepositAmountSelector(state),\n        tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Balance);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {tokenNameSelector} from '../store/selectors/contracts';\n\nclass OrderForm extends Component {\n    render(){\n        const {onSubmit, \n            amountOnChange, \n            priceOnChange, \n            buttonText, \n            buyOrSell,\n            tokenName\n        } = this.props;\n        return (\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Amount (${tokenName})`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"number\"\n                            step=\"any\"\n                            min=\"0\"\n                            placeholder=\"amount\"\n                            onChange={amountOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Price`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            step=\"any\"\n                            min=\"0\"\n                            placeholder=\"price\"\n                            onChange={priceOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">{buttonText}</button>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(OrderForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {buyOrderSelector, sellOrderSelector} from '../store/selectors/orders';\nimport {web3Selector, accountSelector} from '../store/selectors/web3';\nimport {tokenSelector, exchangeSelector} from '../store/selectors/contracts';\nimport {makeBuyOrder, makeSellOrder} from '../store/interactions/orders';\nimport OrderForm from './OrderForm';\nimport {buyOrderAmountChanged, buyOrderPriceChanged, sellOrderAmountChanged, sellOrderPriceChanged} from '../store/actions';\nimport Spinner from './Spinner';\nimport {removeTrailingZeros} from '../helpers';\n\n\nconst showForm = (props) => {\n    const {dispatch, web3, exchange, token, account, buyOrder, sellOrder, showBuyTotal, showSellTotal} = props;\n    \n    const buyOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account);\n    }\n    const buyAmountChanged = (e) => dispatch(buyOrderAmountChanged(e.target.value));\n    const buyPriceChanged = (e) => dispatch(buyOrderPriceChanged(e.target.value));\n\n    const sellOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeSellOrder(dispatch, exchange, token, web3, sellOrder, account);\n    }\n    const sellAmountChanged = (e) => dispatch(sellOrderAmountChanged(e.target.value));\n    const sellPriceChanged = (e) => dispatch(sellOrderPriceChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n            <Tab className=\"bg-dark\" title=\"Buy\" eventKey=\"buy\">\n                <OrderForm\n                    onSubmit={buyOrderOnSubmit}\n                    amountOnChange={buyAmountChanged}\n                    priceOnChange={buyPriceChanged}\n                    buttonText={\"Create Buy Order\"}\n                    buyOrSell={\"Buy\"}\n                />\n                { showBuyTotal ? <small>Total: {removeTrailingZeros((buyOrder.amount * buyOrder.price).toFixed(18))} ETH</small> : null }\n            </Tab>\n            <Tab className=\"bg-dark\" title=\"Sell\" eventKey=\"sell\">\n                <OrderForm\n                    onSubmit={sellOrderOnSubmit}\n                    amountOnChange={sellAmountChanged}\n                    priceOnChange={sellPriceChanged}\n                    buttonText={\"Create Sell Order\"}\n                    buyOrSell={\"Sell\"}\n                />\n                { showSellTotal ? <small>Total: {removeTrailingZeros((sellOrder.amount * sellOrder.price).toFixed(18))} ETH</small> : null }\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass NewOrder extends Component {\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    New Order\n                </div>\n                <div className=\"card-body\">\n                    {showForm? showForm(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    const buyOrder = buyOrderSelector(state);\n    const sellOrder = sellOrderSelector(state);\n\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        buyOrder,\n        sellOrder,\n        showForm: !buyOrder.making && !sellOrder.making,\n        showBuyTotal: buyOrder.amount && buyOrder.price,\n        showSellTotal: sellOrder.amount && sellOrder.price\n    }\n}\n\nexport default connect(mapStateToProps)(NewOrder);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { exchangeSelector } from '../store/selectors/contracts';\nimport { subscribeToEvents } from '../store/interactions/subscriptions';\nimport { loadAllOrders } from '../store/interactions/orders';\nimport Trades from './Trades';\nimport OrderBook from './OrderBook';\nimport MyTransactions from './MyTransactions';\nimport PriceChart from './PriceChart';\nimport Balance from './Balance';\nimport NewOrder from './NewOrder';\n\nclass Content extends Component {\n\n\tcomponentWillMount() {\n\t\tthis.loadBlockchainData(this.props);\n\t}\n\n\tasync loadBlockchainData(props) {\n        const {exchange, dispatch} = props;\n        await loadAllOrders(dispatch, exchange);\n        await subscribeToEvents(dispatch, exchange);\n\t}\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"vertical-split\">\n                    <Balance />\n                    <NewOrder />\n                </div>\n                <OrderBook />\n                <div className=\"vertical-split\">\n                    <PriceChart />\n                    <MyTransactions />\n                </div>\n                <Trades />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        exchange: exchangeSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Content);","import { web3Loaded, web3AccountLoaded } from '../actions';\nimport Web3 from 'web3';\n\nconst ethereum = Web3.givenProvider\n\nexport const loadWeb3 = (dispatch) => {\n    const web3 = new Web3(ethereum || 'http://localhost:7545');\n    dispatch(web3Loaded(web3));\n    return web3;\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n    await ethereum.enable()\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    dispatch(web3AccountLoaded(account));\n    return account;\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport {connect} from 'react-redux';\nimport {loadWeb3, loadAccount} from '../store/interactions/web3';\nimport {loadToken, loadExchange} from '../store/interactions/contracts';\nimport { contractsLoadedSelector } from '../store/selectors/contracts';\n\n\nclass App extends Component {\n\n\tcomponentWillMount() {\n\t\t//dispatch auto-included in props with redux in react\n\t\tthis.loadBlockchainData(this.props.dispatch);\n\t}\n\n\tasync loadBlockchainData(dispatch) {\n\t\tconst web3 = loadWeb3(dispatch);\n\t\tif (!web3) {\n\t\t\talert('Web3 unable to load');\n\t\t\treturn;\n\t\t}\n\t\tconst networkId = await web3.eth.net.getId();\n\t\tconst accountLoaded = await loadAccount(web3, dispatch);\n\t\tif(!accountLoaded) {\n\t\t\talert(\"Could not load account\");\n\t\t\treturn;\n\t\t}\n\t\tconst token = await loadToken(web3, networkId, dispatch);\n\t\tif (!token) {\n\t\t\talert('Token not loaded, please load a network with token');\n\t\t}\n\t\tconst exchange = await loadExchange(web3, networkId, dispatch);\n\t\tif (!exchange) {\n\t\t\talert('Exchange not loaded, please load a network with exchange');\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Makes state vars accessible in props\nfunction mapStateToProps(state){\n\treturn {\n\t\tcontractsLoaded: contractsLoadedSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\n\nfunction web3(state = {}, action) {\n    switch (action.type) {\n        case 'WEB3_LOADED':\n            return { ...state, connection: action.connection };\n        case 'WEB3_ACCOUNT_LOADED':\n            return { ...state, account: action.account };\n        case 'ETHER_BALANCE_LOADED':\n                return { ...state, balance: action.balance };\n        default:\n            return state;\n    }\n}\n\nfunction token(state = {}, action) {\n    switch (action.type) {\n        case 'TOKEN_LOADED':\n            return { ...state, loaded: true, contract: action.token, name: action.name };\n        case 'TOKEN_BALANCE_LOADED':\n                return { ...state, balance: action.balance };\n        default:\n            return state;\n    }\n}\n\nfunction exchange(state = {}, action) {\n    let index, data;\n    switch (action.type) {\n        case 'EXCHANGE_LOADED':\n            return { ...state, loaded: true, contract: action.exchange} ;\n        case 'CANCELLED_ORDERS_LOADED':\n            return { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }};  \n        case 'ORDERS_LOADED':\n            return { ...state, orders: {loaded: true, data: action.orders }};      \n        case 'TRADES_LOADED':\n            return { ...state, trades: {loaded: true, data: action.trades }};\n        case 'ORDER_CANCELLING':\n            return { ...state, orderCancelling: true };\n        case 'ORDER_CANCELLED':\n            return { \n                ...state, \n                orderCancelling: false,\n                cancelledOrders: {\n                    ...state.cancelledOrders,\n                    data: [\n                        ...state.cancelledOrders.data,\n                        action.order\n                    ]\n                }\n            };\n        case 'ORDER_FILLING':\n            return { ...state, orderFilling: true };\n        case 'ORDER_FILLED':\n            //prevent duplicates in the redux store\n            index = state.trades.data.findIndex(order => order._id === action.order._id);\n            data = state.trades.data;\n            //if it doesn't already exist, add to the store\n            if (index === -1){\n                data = [...state.trades.data, action.order];\n            }\n            return {\n                ...state,\n                orderFilling:false,\n                trades: {\n                    ...state.trades,\n                    data\n                }\n            }\n        case 'EXCHANGE_ETHER_BALANCE_LOADED':\n            return { ...state, etherBalance: action.balance }\n        case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n            return { ...state, tokenBalance: action.balance }\n        case 'BALANCES_LOADING':\n            return { ...state, balancesLoading: true }\n        case 'BALANCES_LOADED':\n            return { ...state, balancesLoading: false }\n        case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n            return { ...state, etherDepositAmount: action.amount}\n        case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, etherWithdrawAmount: action.amount}\n        case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n                return { ...state, tokenDepositAmount: action.amount}\n        case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, tokenWithdrawAmount: action.amount}\n        case 'BUY_ORDER_AMOUNT_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n        case 'BUY_ORDER_PRICE_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n        case 'BUY_ORDER_MAKING':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true} }\n        case 'SELL_ORDER_AMOUNT_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n        case 'SELL_ORDER_PRICE_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n        case 'SELL_ORDER_MAKING':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true} }\n        case 'ORDER_MADE':\n            //prevent duplicates in the redux store\n            index = state.orders.data.findIndex(order => order._id === action.order._id);\n            data = state.orders.data;\n            if (index === -1){\n                data = [...state.orders.data, action.order];\n            }\n            return {\n                ...state,\n                orders: {\n                    ...state.orders,\n                    data\n                },\n                buyOrder: {\n                    ...state.buyOrder,\n                    making:false\n                },\n                sellOrder: {\n                    ...state.sellOrder,\n                    making:false\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst rootReducer = new combineReducers({\n    web3,\n    token,\n    exchange\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger }  from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n//connects redux browser to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preLoadedState){\n    return createStore(\n        rootReducer, \n        preLoadedState,\n        composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}