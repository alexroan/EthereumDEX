{"version":3,"sources":["helpers.js","store/selectors/web3.js","store/selectors/contracts.js","components/Navbar.js","store/actions.js","store/interactions/subscriptions.js","store/interactions/contracts.js","store/interactions/orders.js","store/selectors/decorators/orders.js","store/selectors/orders.js","components/Spinner.js","components/Trades.js","components/OrderBook.js","components/MyTransactions.js","components/PriceChart.config.js","store/selectors/decorators/priceChart.js","store/selectors/priceChart.js","components/PriceChart.js","components/BalanceForm.js","components/BalanceTable.js","components/Balance.js","components/OrderForm.js","components/NewOrder.js","components/Content.js","store/interactions/web3.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["ETHER_ADDRESS","RED","DECIMALS","Math","pow","tokens","wei","ether","formatBalance","balance","round","removeTrailingZeros","number","replace","web3Selector","createSelector","state","get","w","account","accountSelector","a","etherBalanceSelector","tokenLoaded","tokenSelector","tl","t","tokenNameSelector","tn","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","balancesLoadingSelector","bl","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","eda","etherWithdrawAmountSelector","ewa","tokenDepositAmountSelector","tda","tokenWithdrawAmountSelector","twa","Navbar","react_default","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dropdown","Toggle","size","id","this","props","tokenName","Menu","target","rel","Component","connect","web3AccountLoaded","token","name","exchange","cancelledOrdersLoaded","cancelledOrders","ordersLoaded","orders","tradesLoaded","trades","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","subscribeToEvents","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","events","Cancel","error","event","order","returnValues","Trade","Deposit","Withdraw","Order","stop","_x","_x2","apply","arguments","loadToken","web3","networkId","eth","Contract","Token","abi","networks","address","methods","symbol","call","sent","abrupt","t0","window","alert","_x3","loadExchange","_ref2","_callee2","_context2","Exchange","_x4","_x5","_x6","loadEtherBalances","_ref3","_callee3","etherBalance","exchangeEtherBalance","_context3","getBalance","balanceOf","_x7","_x8","_x9","_x10","loadTokenBalances","_ref4","_callee4","tokenBalance","exchangeTokenBalance","_context4","options","_x11","_x12","_x13","_x14","_x15","loadBalances","_ref5","_callee5","_context5","_x16","_x17","_x18","_x19","_x20","depositEther","_ref6","_callee6","etherDepositAmount","amount","_context6","utils","toWei","send","from","value","on","hash","console","log","err","_x21","_x22","_x23","_x24","_x25","withdrawEther","_ref7","_callee7","etherWithdrawAmount","_context7","_x26","_x27","_x28","_x29","_x30","depositToken","_ref8","_callee8","_context8","approve","_x31","_x32","_x33","_x34","_x35","_x36","withdrawToken","_ref9","_callee9","tokenWithdrawAmount","_context9","_x37","_x38","_x39","_x40","_x41","_x42","loadAllOrders","cancelStream","tradeStream","orderStream","getPastEvents","fromBlock","toBlock","map","decorateMyFilledOrder","orderType","_user","_tokenGive","objectSpread","orderTypeClass","orderSign","decorateMyOpenOrder","decorateOrderBookOrder","orderFillAction","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","_amountGive","_amountGet","tokenPrice","formattedTimestamp","moment","unix","_timestamp","format","tokenPriceClass","price","col","co","ol","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","sort","b","openOrders","all","cancelled","filled","reject","orderFilled","some","_id","orderCancelled","orderBookLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","myFilledOrdersLoadedSelector","loaded","myFilledOrdersSelector","decorateMyFilledOrders","filter","_userFill","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","orderCancellingSelector","oc","orderFillingSelector","of","buyOrderSelector","bo","sellOrderSelector","Spinner","Trades","concat","key","renderOrder","OverlayTrigger","placement","overlay","Tooltip","onClick","fillOrder","OrderBook","showOrderBook","orderBook","orderFilling","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","myFilledOrders","Tabs","defaultActiveKey","Tab","eventKey","title","showMyFilledOrders","openOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","x","formatter","y","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","buildGraphData","Date","startOf","keys","hour","hourGroup","open","close","length","high","maxBy","low","minBy","priceChartLoadedSelector","priceChartSelector","lastOrder","secondLastOrder","lastPrice","lastPriceChange","series","data","showPriceChart","chartData","react_apexcharts_min_default","height","PriceChart","showChart","BalanceForm","_this$props","onSubmit","placeHolder","onChange","buttonText","step","min","placeholder","required","BalanceTable","hasHead","walletAmount","exchangeAmount","toString","tableRow","Balance","loadBlockchainData","showForm","tokenDepositAmount","components_BalanceTable","components_BalanceForm","preventDefault","balancesLoading","OrderForm","amountOnChange","priceOnChange","buyOrSell","buyOrder","sellOrder","showBuyTotal","showSellTotal","components_OrderForm","tokenGet","amountGet","amountGive","toFixed","makeOrder","makeBuyOrder","tokenGive","makeSellOrder","NewOrder","making","Content","components_Balance","components_NewOrder","components_OrderBook","components_PriceChart","components_MyTransactions","components_Trades","ethereum","Web3","givenProvider","loadWeb3","connection","loadAccount","accounts","enable","getAccounts","App","net","getId","components_Navbar","contractsLoaded","components_Content","rootReducer","combineReducers","action","contract","index","toConsumableArray","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preLoadedState","Boolean","location","hostname","match","ReactDOM","render","es","store","createStore","applyMiddleware","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0fd2c3d.chunk.js","sourcesContent":["export const ETHER_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const GREEN = \"success\";\nexport const RED = \"danger\";\nexport const DECIMALS = (10**18);\n\n//calculate without importing web3\nexport const tokens = (wei) => {\n    if(wei) {\n        return (wei / DECIMALS);\n    }\n}\n\nexport const ether = tokens;\n\nexport const formatBalance = (balance) => {\n    const precision = 100; //2 dm\n    balance = ether(balance);\n    balance = Math.round(balance * precision) / precision;\n    return balance;\n}\n\nexport const removeTrailingZeros = (number) => {\n    number = number.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/,'$1');\n    return number;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\nconst web3 = state => get(state, 'web3.connection');\nexport const web3Selector = createSelector(web3, w => w);\n\nexport const account = state => get(state, 'web3.account');\nexport const accountSelector = createSelector(account, a => a);\n\nconst etherBalance = state => get(state, 'web3.balance');\nexport const etherBalanceSelector = createSelector(etherBalance, (balance) => {\n    return formatBalance(balance);\n});","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\n\nexport const tokenLoaded = state => get(state, 'token.loaded', false);\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl);\n\nconst token = state => get(state, 'token.contract');\nexport const tokenSelector = createSelector(token, t => t);\n\nconst tokenName = state => get(state, 'token.name');\nexport const tokenNameSelector = createSelector(tokenName, tn => tn);\n\nexport const exchangeLoaded = state => get(state, 'exchange.loaded', false);\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el);\n\nexport const exchange = state => get(state, 'exchange.contract', false);\nexport const exchangeSelector = createSelector(exchange, e => e);\n\nexport const contractsLoadedSelector = createSelector(\n    tokenLoaded, \n    exchangeLoaded, \n    (tl, el) => (tl && el)\n);\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', false);\nexport const balancesLoadingSelector = createSelector(balancesLoading, bl => bl);\n\nconst tokenBalance = state => get(state, 'token.balance');\nexport const tokenBalanceSelector = createSelector(tokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance');\nexport const exchangeEtherBalanceSelector = createSelector(exchangeEtherBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance');\nexport const exchangeTokenBalanceSelector = createSelector(exchangeTokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', 0);\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, eda => eda);\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', 0);\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, ewa => ewa);\n\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', 0);\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, tda => tda);\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', 0);\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, twa => twa);","import React, {Component} from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {accountSelector} from '../store/selectors/web3';\nimport {tokenNameSelector} from '../store/selectors/contracts';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <a className=\"navbar-brand\" href=\"/#\">Ethereum Dex - (Kovan Network)</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                    <Dropdown>\n                        <Dropdown.Toggle size=\"sm\" id=\"dropdown-basic\">\n                            {this.props.tokenName}/ETH\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {/* <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item> */}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a \n                            className=\"nav-link small\"\n                            href={'https://etherscan.io/address/' + this.props.account}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.props.account}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    return {\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","export function web3Loaded(connection){\n    return {\n        type: 'WEB3_LOADED',\n        connection\n    }\n}\n\nexport function web3AccountLoaded(account){\n    return {\n        type: 'WEB3_ACCOUNT_LOADED',\n        account\n    }\n}\n\nexport function tokenLoaded(token, name){\n    return {\n        type: 'TOKEN_LOADED',\n        token,\n        name\n    }\n}\n\nexport function exchangeLoaded(exchange){\n    return {\n        type: 'EXCHANGE_LOADED',\n        exchange\n    }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders){\n    return {\n        type: 'CANCELLED_ORDERS_LOADED',\n        cancelledOrders\n    }\n}\n\nexport function ordersLoaded(orders){\n    return {\n        type: 'ORDERS_LOADED',\n        orders\n    }\n}\n\nexport function tradesLoaded(trades){\n    return {\n        type: 'TRADES_LOADED',\n        trades\n    }\n}\n\nexport function orderCancelling(){\n    return {\n        type: 'ORDER_CANCELLING',\n    }\n}\n\nexport function orderCancelled(order){\n    return {\n        type: 'ORDER_CANCELLED',\n        order\n    }\n}\n\nexport function orderFilling(){\n    return {\n        type: 'ORDER_FILLING'\n    }\n}\n\nexport function orderFilled(order){\n    return {\n        type: 'ORDER_FILLED',\n        order\n    }\n}\n\nexport function etherBalanceLoaded(balance){\n    return {\n        type: 'ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function tokenBalanceLoaded(balance){\n    return {\n        type: 'TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeEtherBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeTokenBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function balancesLoaded(){\n    return {\n        type: 'BALANCES_LOADED'\n    }\n}\n\nexport function balancesLoading(){\n    return {\n        type: 'BALANCES_LOADING'\n    }\n}\n\nexport function etherDepositAmountChanged(amount){\n    return {\n        type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function etherWithdrawAmountChanged(amount){\n    return {\n        type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenDepositAmountChanged(amount){\n    return {\n        type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenWithdrawAmountChanged(amount){\n    return {\n        type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderAmountChanged(amount) {\n    return {\n        type: 'BUY_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderPriceChanged(price) {\n    return {\n        type: 'BUY_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function buyOrderMaking(){\n    return {\n        type: 'BUY_ORDER_MAKING'\n    }\n}\n\nexport function sellOrderAmountChanged(amount) {\n    return {\n        type: 'SELL_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function sellOrderPriceChanged(price) {\n    return {\n        type: 'SELL_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function sellOrderMaking(){\n    return {\n        type: 'SELL_ORDER_MAKING'\n    }\n}\n\nexport function orderMade(order){\n    return {\n        type: 'ORDER_MADE',\n        order\n    }\n}","import {orderCancelled, orderFilled, balancesLoaded, orderMade} from \"../actions\";\n\n//Subscriptions\nexport const subscribeToEvents = async (dispatch, exchange) => {\n    exchange.events.Cancel({}, (error, event) => {\n        dispatch(orderCancelled(event.returnValues))\n    });\n\n    exchange.events.Trade({}, (error, event) => {\n        dispatch(orderFilled(event.returnValues));\n    });\n\n    exchange.events.Deposit({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Withdraw({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Order({}, (error, event) => {\n        dispatch(orderMade(event.returnValues));\n    })\n}","import {tokenLoaded, exchangeLoaded, tokenBalanceLoaded, exchangeEtherBalanceLoaded, exchangeTokenBalanceLoaded, balancesLoaded, balancesLoading} from '../actions';\nimport Token from '../../abis/Token.json';\nimport Exchange from '../../abis/Exchange.json';\nimport {ETHER_ADDRESS} from '../../helpers.js';\nimport {etherBalanceLoaded} from '../actions';\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n    try{\n        const token = web3.eth.Contract(Token.abi, Token.networks[networkId].address);\n        const name = await token.methods.symbol().call();\n        dispatch(tokenLoaded(token, name));\n        return token;\n    }\n    catch (err){\n        window.alert(\"Contract not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n    try{\n        const exchange = web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n        dispatch(exchangeLoaded(exchange));\n        return exchange;\n    }\n    catch (err){\n        window.alert(\"Contract not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadEtherBalances = async (web3, exchange, account, dispatch) => {\n    dispatch(balancesLoading());\n\n    //ether balance\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    //balance of account on the smart contract\n    const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    dispatch(balancesLoaded());\n}\n\nexport const loadTokenBalances = async (web3, exchange, token, account, dispatch) => {\n    dispatch(balancesLoading());\n\n    //token balance\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n\n    //token balance of account on the smart contract\n    const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    dispatch(balancesLoaded());\n}\n\nexport const loadBalances = async (web3, exchange, token, account, dispatch) => {\n    loadEtherBalances(web3, exchange, account, dispatch);\n    loadTokenBalances(web3, exchange, token, account, dispatch);\n}\n\nexport const depositEther = async (web3, exchange, account, etherDepositAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherDepositAmount, 'ether');\n    exchange.methods.depositEther.send({from: account, value: amount})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('receipt', (hash) => {\n            console.log('receipt');\n            loadEtherBalances(web3, exchange, account, dispatch);\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error depositing\");\n        });\n}\n\nexport const withdrawEther = async (web3, exchange, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n    exchange.methods.withdrawEther(amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('receipt', (hash) => {\n            console.log('receipt');\n            loadEtherBalances(web3, exchange, account, dispatch);\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}\n\nexport const depositToken = async (web3, exchange, token, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n    console.log('starting');\n    token.methods.approve(exchange.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            console.log('approved transaction');\n            exchange.methods.depositToken(token.options.address, amount).send({from: account})\n                .on('transactionHash', (hash) => {\n                    console.log('transaction hash');\n                    dispatch(balancesLoading());\n                })\n                .on('receipt', (hash) => {\n                    console.log('receipt');\n                    loadTokenBalances(web3, exchange, token, account, dispatch);\n                })\n                .on('error', (err) => {\n                    console.log('erroring deposit');\n                    console.log(err);\n                    window.alert(\"error depositing token\");\n                });\n        });\n}\n\nexport const withdrawToken = async (web3, exchange, token, account, tokenWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(tokenWithdrawAmount, 'ether');\n    exchange.methods.withdrawToken(token.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('receipt', (hash) => {\n            console.log('receipt');\n            loadTokenBalances(web3, exchange, token, account, dispatch);\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}","import {\n    cancelledOrdersLoaded,\n    ordersLoaded,\n    tradesLoaded,\n    orderCancelling,\n    orderFilling,\n    buyOrderMaking\n} from \"../actions\";\nimport {ETHER_ADDRESS} from '../../helpers';\nimport { loadBalances } from \"./contracts\";\n\nexport const loadAllOrders = async (dispatch, exchange) => {\n    try{\n        // Cancelled\n        const cancelStream = await exchange.getPastEvents(\"Cancel\", {fromBlock: 0, toBlock: 'latest'});\n        const cancelledOrders = cancelStream.map((event) => event.returnValues);\n        dispatch(cancelledOrdersLoaded(cancelledOrders));\n        // Trade events (filles)\n        const tradeStream = await exchange.getPastEvents(\"Trade\", {fromBlock: 0, toBlock: 'latest'});\n        const trades = tradeStream.map((event) => event.returnValues);\n        dispatch(tradesLoaded(trades));\n        // Open orders\n        const orderStream = await exchange.getPastEvents(\"Order\", {fromBlock: 0, toBlock: 'latest'});\n        const orders = orderStream.map((event) => event.returnValues);\n        dispatch(ordersLoaded(orders));\n\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.cancelOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderCancelling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account, web3, token) => {\n    exchange.methods.fillOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderFilling());\n        })\n        .on('receipt', (hash) => {\n            loadBalances(web3, exchange, token, account, dispatch);\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = token.options.address;\n    const amountGet = web3.utils.toWei(order.amount, 'ether');\n    const tokenGive = ETHER_ADDRESS;\n    const amountGive = web3.utils.toWei((order.amount * order.price).toFixed(18), 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = ETHER_ADDRESS;\n    const amountGet = web3.utils.toWei((order.amount * order.price).toFixed(18), 'ether');\n    const tokenGive = token.options.address;\n    const amountGive = web3.utils.toWei(order.amount, 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}","import {ether, tokens, GREEN, RED, ETHER_ADDRESS} from '../../../helpers';\nimport moment from 'moment';\n\n//My Transactions\nexport const decorateMyFilledOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyFilledOrder(order, account)\n        return(order)\n        })\n    )\n}\n//decorate orders depending on if they are buy or sell\nconst decorateMyFilledOrder = (order, account) => {\n    const myOrder = order._user === account\n\n    let orderType\n    if(myOrder) {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n    } else {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n    }\n\n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n        orderSign: (orderType === 'buy' ? '+' : '-')\n    })\n}\nexport const decorateMyOpenOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyOpenOrder(order, account)\n        return(order)\n        })\n    )\n}\nconst decorateMyOpenOrder = (order, account) => {\n    let orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  \n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n    })\n}\n\n//Order Book\nexport const decorateOrderBookOrders = (orders) => {\n    return(\n        orders.map((order) => {\n            order = decorateOrder(order);\n            order = decorateOrderBookOrder(order);\n            return order;\n        })\n    )\n}\nconst decorateOrderBookOrder = (order) => {\n    const orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy') ? GREEN : RED,\n        orderFillAction: (orderType === 'buy') ? 'sell' : 'buy'\n    })\n}\n\n\n//Filled Orders\nexport const decorateFilledOrders = (orders) => {\n    let previousOrder = orders[0];\n    return(orders.map((order) => {\n        order = decorateOrder(order);\n        order = decorateFilledOrder(order, previousOrder);\n        previousOrder = order;\n        return order;\n    }));\n}\n//decorate objects to be readable from events\nconst decorateOrder = (order) => {\n    let etherAmount, tokenAmount;\n    if(order._tokenGive === \"0x0000000000000000000000000000000000000000\") {\n        etherAmount = order._amountGive;\n        tokenAmount = order._amountGet;\n    }\n    else{\n        etherAmount = order._amountGet;\n        tokenAmount = order._amountGive;\n    }\n\n    const precision = 100000;\n    let tokenPrice = (etherAmount / tokenAmount);\n    tokenPrice = Math.round(tokenPrice * precision) / precision;\n\n    return({\n        ...order,\n        etherAmount: ether(etherAmount),\n        tokenAmount: tokens(tokenAmount),\n        tokenPrice,\n        formattedTimestamp: moment.unix(order._timestamp).format('h:mm:ss a M/D')\n    });\n}\n//Specific decorator for filled orders only\n//If higher than previous = green, lower than previous = red\nconst decorateFilledOrder = (order, previousOrder) => {\n    return ({\n        ...order,\n        tokenPriceClass: tokenPriceClass(order.tokenPrice, previousOrder)\n    });\n}\n\nconst tokenPriceClass = (price, previousOrder) => {\n    return (previousOrder.tokenPrice > price) ? RED : GREEN;\n}","import {get, reject, groupBy} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {account} from './web3';\nimport {decorateFilledOrders, \n    decorateOrderBookOrders, \n    decorateMyFilledOrders,\n    decorateMyOpenOrders\n} from './decorators/orders';\n\nexport const cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false);\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col);\n\nexport const cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', []);\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, co => co);\n\nexport const ordersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const ordersLoadedSelector = createSelector(ordersLoaded, ol => ol);\n\nexport const orders = state => get(state, 'exchange.orders.data', []);\nexport const ordersSelector = createSelector(orders, o => o);\n\nexport const filledOrdersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, ol => ol);\n\nexport const filledOrders = state => get(state, 'exchange.trades.data', []);    \nexport const filledOrdersSelector = createSelector(\n    filledOrders, \n    (orders) => {\n        //sort ascending for price comparison\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        //sort descending for display\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    } \n);\n\n//Return order that have not been traded (filled) or cancelled\nconst openOrders = state => {\n    const all = orders(state);\n    const cancelled = cancelledOrders(state);\n    const filled = filledOrders(state);\n\n    //reject the orders if they appear in filled or cancelled\n    const openOrders = reject(all, (order) => {\n        const orderFilled = filled.some((o) => o._id === order._id);\n        const orderCancelled = cancelled.some((o) => o._id === order._id);\n        return (orderFilled || orderCancelled);\n    });\n    return openOrders;\n}\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && ordersLoaded(state);\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl);\nexport const orderBookSelector = createSelector(\n    openOrders,\n    (orders) => {\n        //decorate\n        orders = decorateOrderBookOrders(orders);\n        //group by type\n        orders = groupBy(orders, 'orderType');\n        let buyOrders = get(orders, 'buy', []);\n        let sellOrders = get(orders, 'sell', []);\n        orders = {\n            ...orders,\n            buyOrders: buyOrders.sort((a, b) => b.tokenPrice - a.tokenPrice),\n            sellOrders: sellOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\n        }\n        return orders;\n    }\n)\n\n//If all trades loaded, the my trades are definitely loaded\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const myFilledOrdersSelector = createSelector(\n    account,\n    filledOrders,\n    (account, orders) => {\n        // Find our orders\n        orders = orders.filter((o) => o._user === account || o._userFill === account);\n        // Sort by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        // Decorate orders - add display attributes\n        orders = decorateMyFilledOrders(orders, account);\n        return orders;\n    }\n)\n\n//If the order book is loaded, my open orders are definitely loaded\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded);\nexport const myOpenOrdersSelector = createSelector(\n    account,\n    openOrders,\n    (account, orders) => {\n        // Filter orders created by current account\n        orders = orders.filter((o) => o._user === account);\n        // Decorate orders - add display attributes\n        orders = decorateMyOpenOrders(orders);\n        // Sort orders by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    }\n)\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false);\nexport const orderCancellingSelector = createSelector(orderCancelling, oc => oc);\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false);\nexport const orderFillingSelector = createSelector(orderFilling, of => of);\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {});\nexport const buyOrderSelector = createSelector(buyOrder, bo => bo);\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {});\nexport const sellOrderSelector = createSelector(sellOrder, bo => bo);","import React from 'react';\n\nexport default function({type}){\n    if(type === 'table') {\n        return (<tbody className=\"spinner-border text-light text-center\"></tbody>);\n    }\n    return (<div className=\"spinner-border text-light text-center\"></div>);\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {filledOrdersSelector, filledOrdersLoadedSelector} from '../store/selectors/orders';\nimport Spinner from './Spinner';\nimport { tokenNameSelector } from '../store/selectors/contracts';\n\nconst showFilledOrders = (filledOrders) => {\n    return (\n        <tbody>\n            {filledOrders.map((order) => {\n                return (\n                    <tr className={`trade-${order._id}`} key={order._id}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td>{order.tokenAmount}</td>\n                        <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass Trades extends Component {\n\n    render() {\n        const {tokenName} = this.props;\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Trades\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-dark table-sm small\">\n                            <thead>\n                                <tr>\n                                    <th>Time</th>\n                                    <th>{tokenName}</th>\n                                    <th>{tokenName}/Eth</th>\n                                </tr>\n                            </thead>\n                            { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" />}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        filledOrdersLoaded: filledOrdersLoadedSelector(state),\n        filledOrders: filledOrdersSelector(state),\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(Trades);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {orderBookLoadedSelector, orderBookSelector, orderFillingSelector} from '../store/selectors/orders';\nimport {exchangeSelector, tokenNameSelector, tokenSelector} from '../store/selectors/contracts';\nimport {accountSelector, web3Selector} from '../store/selectors/web3';\n\nimport Spinner from './Spinner';\nimport { fillOrder } from '../store/interactions/orders';\n\nconst renderOrder = (order, props) => {\n    const { dispatch, exchange, account, web3, token} = props;\n    return (\n        <OverlayTrigger key={order._id} placement='auto' \n            overlay={\n                <Tooltip id={order._id}>\n                    {`Click here to ${order.orderFillAction}`}\n                </Tooltip>\n            }\n        >\n            <tr key={order._id} className=\"order-book-order\" onClick={(e) => fillOrder(dispatch, exchange, order, account, web3, token)}>\n                <td>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td>{order.etherAmount}</td>\n            </tr>\n        </OverlayTrigger>\n    )\n}\n\nconst showOrderBook = (props) => {\n    //fetch key from props using ES6\n    const {orderBook, tokenName} = props;\n    return (\n        <tbody>\n            {orderBook.sellOrders.map((order) => renderOrder(order, props))}\n            <tr>\n                <th>{tokenName}</th>\n                <th>{tokenName}/ETH</th>\n                <th>ETH</th>\n            </tr>\n            {orderBook.buyOrders.map((order) => renderOrder(order, props))}\n        </tbody>\n    );\n}\n\nclass OrderBook extends Component {\n    render() {\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Order Book\n                    </div>\n                    <div className=\"card-body order-book\">\n                        <table className=\"table table-dark table-sm small\">\n                            {this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type=\"table\"/>}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    const orderBookLoaded = orderBookLoadedSelector(state);\n    const orderFilling = orderFillingSelector(state);\n    return {\n        orderBook: orderBookSelector(state),\n        showOrderBook: orderBookLoaded && !orderFilling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(OrderBook);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {myFilledOrdersSelector,\n    myFilledOrdersLoadedSelector,\n    myOpenOrdersLoadedSelector,\n    myOpenOrdersSelector,\n    orderCancellingSelector\n} from '../store/selectors/orders';\nimport {exchangeSelector, tokenNameSelector} from '../store/selectors/contracts';\nimport {accountSelector} from '../store/selectors/web3';\nimport {cancelOrder} from '../store/interactions/orders';\n\nconst showMyFilledOrders = (myFilledOrders) => {\n    return (\n        <tbody>\n            {myFilledOrders.map((order) => {\n                return (\n                    <tr key={`filled-${order._id}`}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nconst showMyOpenOrders = (props) => {\n    const {myOpenOrders, dispatch, exchange, account} = props\n    return (\n        <tbody>\n            {myOpenOrders.map((order) => {\n                return (\n                    <tr key={`open-${order._id}`}>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                        <td \n                            className=\"text-muted cancel-order\"\n                            onClick={(e) => {\n                                cancelOrder(dispatch, exchange, order, account);\n                            }}\n                        >x</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass MyTransactions extends Component {\n    render() {\n        const {tokenName} = this.props;\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    My Transactions\n                </div>\n                <div className=\"card-body\">\n                    <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n                        <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Time</th>\n                                        <th>{tokenName}</th>\n                                        <th>{tokenName}/ETH</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyFilledOrders ? showMyFilledOrders(this.props.myFilledOrders) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Amount</th>\n                                        <th>{tokenName}/ETH</th>\n                                        <th>Cancel</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const openOrdersLoaded = myOpenOrdersLoadedSelector(state);\n    const orderCancelling = orderCancellingSelector(state);\n\n    return {\n        myFilledOrders: myFilledOrdersSelector(state),\n        showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n        myOpenOrders: myOpenOrdersSelector(state),\n        showMyOpenOrders: openOrdersLoaded && !orderCancelling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(MyTransactions);","export const chartOptions = {\n    chart: {\n      animations: { enabled: false },\n      toolbar: { show: false },\n      width: '100px'\n    },\n    tooltip: {\n      enabled: true,\n      theme: false,\n      style: {\n        fontSize: '12px',\n        fontFamily: undefined\n      },\n      x: {\n          show: false,\n          format: 'dd MMM',\n          formatter: undefined,\n      },\n      y: {\n        show: true,\n        title: 'price'\n      },\n      marker: {\n        show: false,\n      },\n      items: {\n         display: 'flex',\n      },\n      fixed: {\n          enabled: false,\n          position: 'topRight',\n          offsetX: 0,\n          offsetY: 0,\n      },\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        show: true,\n        style: {\n            colors: '#fff',\n            fontSize: '8px',\n            cssClass: 'apexcharts-xaxis-label',\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        minWidth: 0,\n        maxWidth: 160,\n        style: {\n          color: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-yaxis-label',\n        },\n        offsetX: 0,\n        offsetY: 0,\n        rotate: 0,\n      }\n    }\n  }\n  \n  export const dummyData = [\n    {\n      data: [\n        {\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        },\n        {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        },\n        {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        },\n        {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        },\n        {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        },\n        {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        },\n        {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        },\n        {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        },\n        {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        },\n        {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        },\n        {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        },\n        {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        },\n        {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        },\n        {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        },\n        {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        },\n        {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        },\n        {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        },\n        {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        },\n        {\n          x: new Date(1538811000000),\n          y: [6623.48, 6627, 6618.38, 6620.35]\n        },\n        {\n          x: new Date(1538812800000),\n          y: [6619.43, 6620.35, 6610.05, 6615.53]\n        },\n        {\n          x: new Date(1538814600000),\n          y: [6615.53, 6617.93, 6610, 6615.19]\n        },\n        {\n          x: new Date(1538816400000),\n          y: [6615.19, 6621.6, 6608.2, 6620]\n        },\n        {\n          x: new Date(1538818200000),\n          y: [6619.54, 6625.17, 6614.15, 6620]\n        },\n        {\n          x: new Date(1538820000000),\n          y: [6620.33, 6634.15, 6617.24, 6624.61]\n        },\n        {\n          x: new Date(1538821800000),\n          y: [6625.95, 6626, 6611.66, 6617.58]\n        },\n        {\n          x: new Date(1538823600000),\n          y: [6619, 6625.97, 6595.27, 6598.86]\n        },\n        {\n          x: new Date(1538825400000),\n          y: [6598.86, 6598.88, 6570, 6587.16]\n        },\n        {\n          x: new Date(1538827200000),\n          y: [6588.86, 6600, 6580, 6593.4]\n        },\n        {\n          x: new Date(1538829000000),\n          y: [6593.99, 6598.89, 6585, 6587.81]\n        },\n        {\n          x: new Date(1538830800000),\n          y: [6587.81, 6592.73, 6567.14, 6578]\n        },\n        {\n          x: new Date(1538832600000),\n          y: [6578.35, 6581.72, 6567.39, 6579]\n        },\n        {\n          x: new Date(1538834400000),\n          y: [6579.38, 6580.92, 6566.77, 6575.96]\n        },\n        {\n          x: new Date(1538836200000),\n          y: [6575.96, 6589, 6571.77, 6588.92]\n        },\n        {\n          x: new Date(1538838000000),\n          y: [6588.92, 6594, 6577.55, 6589.22]\n        },\n        {\n          x: new Date(1538839800000),\n          y: [6589.3, 6598.89, 6589.1, 6596.08]\n        },\n        {\n          x: new Date(1538841600000),\n          y: [6597.5, 6600, 6588.39, 6596.25]\n        },\n        {\n          x: new Date(1538843400000),\n          y: [6598.03, 6600, 6588.73, 6595.97]\n        },\n        {\n          x: new Date(1538845200000),\n          y: [6595.97, 6602.01, 6588.17, 6602]\n        },\n        {\n          x: new Date(1538847000000),\n          y: [6602, 6607, 6596.51, 6599.95]\n        },\n        {\n          x: new Date(1538848800000),\n          y: [6600.63, 6601.21, 6590.39, 6591.02]\n        },\n        {\n          x: new Date(1538850600000),\n          y: [6591.02, 6603.08, 6591, 6591]\n        },\n        {\n          x: new Date(1538852400000),\n          y: [6591, 6601.32, 6585, 6592]\n        },\n        {\n          x: new Date(1538854200000),\n          y: [6593.13, 6596.01, 6590, 6593.34]\n        },\n        {\n          x: new Date(1538856000000),\n          y: [6593.34, 6604.76, 6582.63, 6593.86]\n        },\n        {\n          x: new Date(1538857800000),\n          y: [6593.86, 6604.28, 6586.57, 6600.01]\n        },\n        {\n          x: new Date(1538859600000),\n          y: [6601.81, 6603.21, 6592.78, 6596.25]\n        },\n        {\n          x: new Date(1538861400000),\n          y: [6596.25, 6604.2, 6590, 6602.99]\n        },\n        {\n          x: new Date(1538863200000),\n          y: [6602.99, 6606, 6584.99, 6587.81]\n        },\n        {\n          x: new Date(1538865000000),\n          y: [6587.81, 6595, 6583.27, 6591.96]\n        },\n        {\n          x: new Date(1538866800000),\n          y: [6591.97, 6596.07, 6585, 6588.39]\n        },\n        {\n          x: new Date(1538868600000),\n          y: [6587.6, 6598.21, 6587.6, 6594.27]\n        },\n        {\n          x: new Date(1538870400000),\n          y: [6596.44, 6601, 6590, 6596.55]\n        },\n        {\n          x: new Date(1538872200000),\n          y: [6598.91, 6605, 6596.61, 6600.02]\n        },\n        {\n          x: new Date(1538874000000),\n          y: [6600.55, 6605, 6589.14, 6593.01]\n        },\n        {\n          x: new Date(1538875800000),\n          y: [6593.15, 6605, 6592, 6603.06]\n        },\n        {\n          x: new Date(1538877600000),\n          y: [6603.07, 6604.5, 6599.09, 6603.89]\n        },\n        {\n          x: new Date(1538879400000),\n          y: [6604.44, 6604.44, 6600, 6603.5]\n        },\n        {\n          x: new Date(1538881200000),\n          y: [6603.5, 6603.99, 6597.5, 6603.86]\n        },\n        {\n          x: new Date(1538883000000),\n          y: [6603.85, 6605, 6600, 6604.07]\n        },\n        {\n          x: new Date(1538884800000),\n          y: [6604.98, 6606, 6604.07, 6606]\n        },\n      ]\n    }\n  ]\n  ","import moment from 'moment';\nimport {groupBy, maxBy, minBy} from 'lodash';\n\nexport const buildGraphData = (orders) => {\n    orders = groupBy(orders, (o) => moment.unix(o._timestamp).startOf('hour').format());\n    const hours = Object.keys(orders);\n    \n    const graphData = hours.map((hour) => {\n        // calculate open, low, high, close\n        const hourGroup = orders[hour];\n        const open = hourGroup[0];\n        const close = hourGroup[hourGroup.length-1];\n        const high = maxBy(hourGroup, 'tokenPrice');\n        const low = minBy(hourGroup, 'tokenPrice');\n        return ({\n            x: new Date(hour),\n            y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n        });\n    });\n    return graphData;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {decorateFilledOrders} from './decorators/orders';\nimport {buildGraphData} from './decorators/priceChart';\nimport {filledOrdersLoaded, filledOrders} from './orders';\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const priceChartSelector = createSelector(\n    filledOrders,\n    (orders) => {\n        //ascending date, earliest to latest\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        let lastOrder = orders[orders.length-1];\n        let secondLastOrder = orders[orders.length-2];\n        let lastPrice = get(lastOrder, 'tokenPrice', 0);\n        let secondLastPrice = get(secondLastOrder, 'tokenPrice', 0);\n\n        return ({\n            lastPrice,\n            lastPriceChange: (lastPrice >= secondLastPrice) ? '+' : '-',\n            series: [{\n                data: buildGraphData(orders)\n            }]\n        });\n    }\n)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport Chart from 'react-apexcharts';\nimport {chartOptions} from './PriceChart.config';\nimport {priceChartLoadedSelector, priceChartSelector} from '../store/selectors/priceChart';\nimport { tokenNameSelector } from '../store/selectors/contracts';\n\nconst priceSymbol = (lastPriceChange) => {\n    let output;\n    if(lastPriceChange === '+') {\n        output = <span className=\"text-success\">&#9650;</span> // Green up tiangle\n    } else {\n        output = <span className=\"text-danger\">&#9660;</span> // Red down triangle\n    }\n    return(output);\n}\n\nconst showPriceChart = (props) => {\n    const {chartData, tokenName} = props;\n    return (\n        <div className=\"price-chart\">\n            <h4>{tokenName}/ETH &nbsp; {priceSymbol(chartData.lastPriceChange)} &nbsp; {chartData.lastPrice}</h4>\n            <Chart options={chartOptions} series={chartData.series} type=\"candlestick\" width=\"100%\" height=\"100%\" />\n        </div>\n    );\n}\n\nclass PriceChart extends Component {\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Graph\n                </div>\n                <div className=\"card-body\">\n                    {(this.props.showChart) ? showPriceChart(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showChart: priceChartLoadedSelector(state),\n        chartData: priceChartSelector(state),\n        tokenName: tokenNameSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(PriceChart);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass BalanceForm extends Component {\n    render(){\n        const {onSubmit, placeHolder, onChange, buttonText} = this.props;\n        return (\n            <form className=\"row\" onSubmit={onSubmit}>\n                <div className=\"col-12 col-sm pr-sm-2\">\n                    <input type=\"number\" \n                        step=\"any\"\n                        min=\"0\"\n                        placeholder={placeHolder} \n                        onChange={onChange}\n                        className=\"form-control form-control-sm bg-dark text-white\"\n                        required />\n                </div>\n                <div className=\"col-12 col-sm-auto pl-sm-0\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">{buttonText}</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nconst tableRow = (tokenName, walletAmount, exchangeAmount) => {\n    return (\n        <tr>\n            <th>{tokenName}</th>\n            <th>{walletAmount.toString()}</th>\n            <th>{exchangeAmount.toString()}</th>\n        </tr>\n    )\n}\n\nconst tableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Token</th>\n                <th>Wallet</th>\n                <th>Exchange</th>\n            </tr>\n        </thead>\n    );\n}\n\nclass BalanceTable extends Component {\n    render() {\n        const {hasHead, tokenName, walletAmount, exchangeAmount} = this.props;\n        return (\n            <table className=\"table table-dark table-sm small\">\n                {(hasHead) ? tableHead() : null}\n                <tbody>\n                    {tableRow(tokenName, walletAmount, exchangeAmount)}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceTable);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { exchangeSelector, \n    tokenSelector, \n    tokenBalanceSelector, \n    exchangeEtherBalanceSelector, \n    exchangeTokenBalanceSelector, \n    balancesLoadingSelector, \n    etherDepositAmountSelector,\n    etherWithdrawAmountSelector,\n    tokenDepositAmountSelector,\n    tokenWithdrawAmountSelector,\n    tokenNameSelector\n} from '../store/selectors/contracts';\nimport { web3Selector, accountSelector, etherBalanceSelector } from '../store/selectors/web3';\nimport { loadBalances, depositEther, withdrawEther, depositToken, withdrawToken} from '../store/interactions/contracts';\nimport { etherDepositAmountChanged, etherWithdrawAmountChanged, tokenDepositAmountChanged, tokenWithdrawAmountChanged } from '../store/actions';\nimport BalanceForm from './BalanceForm';\nimport BalanceTable from './BalanceTable';\n\n\nconst showForm = (props) => {\n    const {dispatch, etherBalance, tokenBalance, exchangeEtherBalance, exchangeTokenBalance, \n        etherDepositAmount, etherWithdrawAmount, tokenDepositAmount, tokenWithdrawAmount,\n        web3, exchange, token, account\n    } = props;\n\n    const depositEtherSubmit = (e) => {\n        e.preventDefault();\n        depositEther(web3, exchange, account, etherDepositAmount, dispatch);\n    }\n    const depositEtherChange = (e) => dispatch(etherDepositAmountChanged(e.target.value));\n\n    const depositTokenSubmit = (e) => {\n        e.preventDefault();\n        depositToken(web3, exchange, token, account, tokenDepositAmount, dispatch);\n    }\n    const depositTokenChange = (e) => dispatch(tokenDepositAmountChanged(e.target.value));\n\n    const withdrawEtherSubmit = (e) => {\n        e.preventDefault();\n        withdrawEther(web3, exchange, account, etherWithdrawAmount, dispatch);\n    }\n    const withdrawEtherChange = (e) => dispatch(etherWithdrawAmountChanged(e.target.value));\n\n    const withdrawTokenSubmit = (e) => {\n        e.preventDefault();\n        withdrawToken(web3, exchange, token, account, tokenWithdrawAmount, dispatch);\n    }\n    const withdrawTokenChange = (e) => dispatch(tokenWithdrawAmountChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey={\"deposit\"} className={\"bg-dark text-white\"}>\n            <Tab eventKey={\"deposit\"} title={\"Deposit\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={depositEtherSubmit} \n                    placeHolder={\"ETH Amount\"}\n                    onChange={depositEtherChange}\n                    buttonText={\"Deposit\"}\n                />\n                <BalanceTable hasHead={false} tokenName={props.tokenName} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={depositTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={depositTokenChange}\n                    buttonText={\"Deposit\"}  \n                />\n            </Tab>\n            <Tab eventKey={\"withdraw\"} title={\"Withdraw\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={withdrawEtherSubmit} \n                    placeHolder={\"ETH Amount\"} \n                    onChange={withdrawEtherChange}\n                    buttonText={\"Withdraw\"}    \n                />\n                <BalanceTable hasHead={false} tokenName={props.tokenName} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={withdrawTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={withdrawTokenChange}\n                    buttonText={\"Withdraw\"}    \n                />\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass Balance extends Component {\n\n    componentWillMount() {\n        this.loadBlockchainData();\n    }\n\n    async loadBlockchainData() {\n        const {dispatch, exchange, token, account, web3} = this.props;\n        await loadBalances(web3, exchange, token, account, dispatch);\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Balance\n                </div>\n                <div className=\"card-body\">\n                    {this.props.showForm ? showForm(this.props) : <Spinner />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const balancesLoading = balancesLoadingSelector(state)\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        tokenName: tokenNameSelector(state),\n        etherBalance: etherBalanceSelector(state),\n        tokenBalance: tokenBalanceSelector(state),\n        exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n        exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n        balancesLoading,\n        showForm: !balancesLoading,\n        etherDepositAmount: etherDepositAmountSelector(state),\n        etherWithdrawAmount: etherWithdrawAmountSelector(state),\n        tokenDepositAmount: tokenDepositAmountSelector(state),\n        tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Balance);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {tokenNameSelector} from '../store/selectors/contracts';\n\nclass OrderForm extends Component {\n    render(){\n        const {onSubmit, \n            amountOnChange, \n            priceOnChange, \n            buttonText, \n            buyOrSell,\n            tokenName\n        } = this.props;\n        return (\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Amount (${tokenName})`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"number\"\n                            step=\"any\"\n                            min=\"0\"\n                            placeholder=\"amount\"\n                            onChange={amountOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Price`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            step=\"any\"\n                            min=\"0\"\n                            placeholder=\"price\"\n                            onChange={priceOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">{buttonText}</button>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(OrderForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {buyOrderSelector, sellOrderSelector} from '../store/selectors/orders';\nimport {web3Selector, accountSelector} from '../store/selectors/web3';\nimport {tokenSelector, exchangeSelector} from '../store/selectors/contracts';\nimport {makeBuyOrder, makeSellOrder} from '../store/interactions/orders';\nimport OrderForm from './OrderForm';\nimport {buyOrderAmountChanged, buyOrderPriceChanged, sellOrderAmountChanged, sellOrderPriceChanged} from '../store/actions';\nimport Spinner from './Spinner';\nimport {removeTrailingZeros} from '../helpers';\n\n\nconst showForm = (props) => {\n    const {dispatch, web3, exchange, token, account, buyOrder, sellOrder, showBuyTotal, showSellTotal} = props;\n    \n    const buyOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account);\n    }\n    const buyAmountChanged = (e) => dispatch(buyOrderAmountChanged(e.target.value));\n    const buyPriceChanged = (e) => dispatch(buyOrderPriceChanged(e.target.value));\n\n    const sellOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeSellOrder(dispatch, exchange, token, web3, sellOrder, account);\n    }\n    const sellAmountChanged = (e) => dispatch(sellOrderAmountChanged(e.target.value));\n    const sellPriceChanged = (e) => dispatch(sellOrderPriceChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n            <Tab className=\"bg-dark\" title=\"Buy\" eventKey=\"buy\">\n                <OrderForm\n                    onSubmit={buyOrderOnSubmit}\n                    amountOnChange={buyAmountChanged}\n                    priceOnChange={buyPriceChanged}\n                    buttonText={\"Create Buy Order\"}\n                    buyOrSell={\"Buy\"}\n                />\n                { showBuyTotal ? <small>Total: {removeTrailingZeros((buyOrder.amount * buyOrder.price).toFixed(18))} ETH</small> : null }\n            </Tab>\n            <Tab className=\"bg-dark\" title=\"Sell\" eventKey=\"sell\">\n                <OrderForm\n                    onSubmit={sellOrderOnSubmit}\n                    amountOnChange={sellAmountChanged}\n                    priceOnChange={sellPriceChanged}\n                    buttonText={\"Create Sell Order\"}\n                    buyOrSell={\"Sell\"}\n                />\n                { showSellTotal ? <small>Total: {removeTrailingZeros((sellOrder.amount * sellOrder.price).toFixed(18))} ETH</small> : null }\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass NewOrder extends Component {\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    New Order\n                </div>\n                <div className=\"card-body\">\n                    {showForm? showForm(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    const buyOrder = buyOrderSelector(state);\n    const sellOrder = sellOrderSelector(state);\n\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        buyOrder,\n        sellOrder,\n        showForm: !buyOrder.making && !sellOrder.making,\n        showBuyTotal: buyOrder.amount && buyOrder.price,\n        showSellTotal: sellOrder.amount && sellOrder.price\n    }\n}\n\nexport default connect(mapStateToProps)(NewOrder);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { exchangeSelector } from '../store/selectors/contracts';\nimport { subscribeToEvents } from '../store/interactions/subscriptions';\nimport { loadAllOrders } from '../store/interactions/orders';\nimport Trades from './Trades';\nimport OrderBook from './OrderBook';\nimport MyTransactions from './MyTransactions';\nimport PriceChart from './PriceChart';\nimport Balance from './Balance';\nimport NewOrder from './NewOrder';\n\nclass Content extends Component {\n\n\tcomponentWillMount() {\n\t\tthis.loadBlockchainData(this.props);\n\t}\n\n\tasync loadBlockchainData(props) {\n        const {exchange, dispatch} = props;\n        await loadAllOrders(dispatch, exchange);\n        await subscribeToEvents(dispatch, exchange);\n\t}\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"vertical-split\">\n                    <Balance />\n                    <NewOrder />\n                </div>\n                <OrderBook />\n                <div className=\"vertical-split\">\n                    <PriceChart />\n                    <MyTransactions />\n                </div>\n                <Trades />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        exchange: exchangeSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Content);","import { web3Loaded, web3AccountLoaded } from '../actions';\nimport Web3 from 'web3';\n\nconst ethereum = Web3.givenProvider\n\nexport const loadWeb3 = (dispatch) => {\n    const web3 = new Web3(ethereum || 'http://localhost:7545');\n    dispatch(web3Loaded(web3));\n    return web3;\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n    await ethereum.enable()\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    dispatch(web3AccountLoaded(account));\n    return account;\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport {connect} from 'react-redux';\nimport {loadWeb3, loadAccount} from '../store/interactions/web3';\nimport {loadToken, loadExchange} from '../store/interactions/contracts';\nimport { contractsLoadedSelector } from '../store/selectors/contracts';\n\n\nclass App extends Component {\n\n\tcomponentWillMount() {\n\t\t//dispatch auto-included in props with redux in react\n\t\tthis.loadBlockchainData(this.props.dispatch);\n\t}\n\n\tasync loadBlockchainData(dispatch) {\n\t\tconst web3 = loadWeb3(dispatch);\n\t\tif (!web3) {\n\t\t\talert('Web3 unable to load');\n\t\t\treturn;\n\t\t}\n\t\tconst networkId = await web3.eth.net.getId();\n\t\tconst accountLoaded = await loadAccount(web3, dispatch);\n\t\tif(!accountLoaded) {\n\t\t\talert(\"Could not load account\");\n\t\t\treturn;\n\t\t}\n\t\tconst token = await loadToken(web3, networkId, dispatch);\n\t\tif (!token) {\n\t\t\talert('Token not loaded, please load a network with token');\n\t\t}\n\t\tconst exchange = await loadExchange(web3, networkId, dispatch);\n\t\tif (!exchange) {\n\t\t\talert('Exchange not loaded, please load a network with exchange');\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Makes state vars accessible in props\nfunction mapStateToProps(state){\n\treturn {\n\t\tcontractsLoaded: contractsLoadedSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\n\nfunction web3(state = {}, action) {\n    switch (action.type) {\n        case 'WEB3_LOADED':\n            return { ...state, connection: action.connection };\n        case 'WEB3_ACCOUNT_LOADED':\n            return { ...state, account: action.account };\n        case 'ETHER_BALANCE_LOADED':\n                return { ...state, balance: action.balance };\n        default:\n            return state;\n    }\n}\n\nfunction token(state = {}, action) {\n    switch (action.type) {\n        case 'TOKEN_LOADED':\n            return { ...state, loaded: true, contract: action.token, name: action.name };\n        case 'TOKEN_BALANCE_LOADED':\n                return { ...state, balance: action.balance };\n        default:\n            return state;\n    }\n}\n\nfunction exchange(state = {}, action) {\n    let index, data;\n    switch (action.type) {\n        case 'EXCHANGE_LOADED':\n            return { ...state, loaded: true, contract: action.exchange} ;\n        case 'CANCELLED_ORDERS_LOADED':\n            return { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }};  \n        case 'ORDERS_LOADED':\n            return { ...state, orders: {loaded: true, data: action.orders }};      \n        case 'TRADES_LOADED':\n            return { ...state, trades: {loaded: true, data: action.trades }};\n        case 'ORDER_CANCELLING':\n            return { ...state, orderCancelling: true };\n        case 'ORDER_CANCELLED':\n            return { \n                ...state, \n                orderCancelling: false,\n                cancelledOrders: {\n                    ...state.cancelledOrders,\n                    data: [\n                        ...state.cancelledOrders.data,\n                        action.order\n                    ]\n                }\n            };\n        case 'ORDER_FILLING':\n            return { ...state, orderFilling: true };\n        case 'ORDER_FILLED':\n            //prevent duplicates in the redux store\n            index = state.trades.data.findIndex(order => order._id === action.order._id);\n            data = state.trades.data;\n            //if it doesn't already exist, add to the store\n            if (index === -1){\n                data = [...state.trades.data, action.order];\n            }\n            return {\n                ...state,\n                orderFilling:false,\n                trades: {\n                    ...state.trades,\n                    data\n                }\n            }\n        case 'EXCHANGE_ETHER_BALANCE_LOADED':\n            return { ...state, etherBalance: action.balance }\n        case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n            return { ...state, tokenBalance: action.balance }\n        case 'BALANCES_LOADING':\n            return { ...state, balancesLoading: true }\n        case 'BALANCES_LOADED':\n            return { ...state, balancesLoading: false }\n        case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n            return { ...state, etherDepositAmount: action.amount}\n        case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, etherWithdrawAmount: action.amount}\n        case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n                return { ...state, tokenDepositAmount: action.amount}\n        case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, tokenWithdrawAmount: action.amount}\n        case 'BUY_ORDER_AMOUNT_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n        case 'BUY_ORDER_PRICE_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n        case 'BUY_ORDER_MAKING':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true} }\n        case 'SELL_ORDER_AMOUNT_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n        case 'SELL_ORDER_PRICE_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n        case 'SELL_ORDER_MAKING':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true} }\n        case 'ORDER_MADE':\n            //prevent duplicates in the redux store\n            index = state.orders.data.findIndex(order => order._id === action.order._id);\n            data = state.orders.data;\n            if (index === -1){\n                data = [...state.orders.data, action.order];\n            }\n            return {\n                ...state,\n                orders: {\n                    ...state.orders,\n                    data\n                },\n                buyOrder: {\n                    ...state.buyOrder,\n                    making:false\n                },\n                sellOrder: {\n                    ...state.sellOrder,\n                    making:false\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst rootReducer = new combineReducers({\n    web3,\n    token,\n    exchange\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger }  from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n//connects redux browser to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preLoadedState){\n    return createStore(\n        rootReducer, \n        preLoadedState,\n        composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}