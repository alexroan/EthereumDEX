{"version":3,"sources":["helpers.js","store/selectors/web3.js","store/selectors/contracts.js","store/actions.js","store/interactions/contracts.js","store/interactions/orders.js","store/interactions/subscriptions.js","components/Navbar.js","store/selectors/decorators/orders.js","store/selectors/orders.js","components/Spinner.js","components/Trades.js","components/OrderBook.js","components/MyTransactions.js","components/PriceChart.config.js","store/selectors/decorators/priceChart.js","store/selectors/priceChart.js","components/PriceChart.js","components/BalanceForm.js","components/BalanceTable.js","components/Balance.js","components/OrderForm.js","components/NewOrder.js","components/Content.js","store/interactions/web3.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["ETHER_ADDRESS","RED","DECIMALS","Math","pow","tokens","wei","ether","formatBalance","balance","round","removeTrailingZeros","number","replace","web3Selector","createSelector","state","get","w","account","accountSelector","a","etherBalanceSelector","tokenLoaded","tokenSelector","tl","t","tokenNameSelector","tn","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","balancesLoadingSelector","bl","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","eda","etherWithdrawAmountSelector","ewa","tokenDepositAmountSelector","tda","tokenWithdrawAmountSelector","twa","pairsTokensSelector","pl","pls","web3AccountLoaded","type","pairsLoaded","pairs","numberOfTokensLoaded","numberOfTokens","tokenPairsLoaded","token","name","exchange","cancelledOrdersLoaded","cancelledOrders","ordersLoaded","orders","tradesLoaded","trades","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","loadPairs","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","web3","networkId","dispatch","wrap","_context","prev","next","eth","Contract","Pairs","abi","networks","address","abrupt","t0","window","alert","stop","_x","_x2","_x3","apply","this","arguments","loadToken","_ref2","_callee2","tokenAddress","_context2","ERC20Detailed","methods","symbol","call","sent","_x4","_x5","_x6","loadExchange","_ref3","_callee3","_context3","Exchange","_x7","_x8","_x9","loadAvailableTokens","_ref4","_callee4","tokenPairs","i","_context4","size","addresses","push","_x10","_x11","_x12","loadEtherBalances","_ref5","_callee5","etherBalance","exchangeEtherBalance","_context5","getBalance","balanceOf","_x13","_x14","_x15","_x16","loadTokenBalances","_ref6","_callee6","tokenBalance","exchangeTokenBalance","_context6","options","_x17","_x18","_x19","_x20","_x21","loadBalances","_ref7","_callee7","_context7","_x22","_x23","_x24","_x25","_x26","depositEther","_ref8","_callee8","etherDepositAmount","amount","_context8","utils","toWei","send","from","value","on","hash","console","log","err","_x27","_x28","_x29","_x30","_x31","withdrawEther","_ref9","_callee9","etherWithdrawAmount","_context9","_x32","_x33","_x34","_x35","_x36","depositToken","_ref10","_callee10","_context10","approve","_x37","_x38","_x39","_x40","_x41","_x42","withdrawToken","_ref11","_callee11","tokenWithdrawAmount","_context11","_x43","_x44","_x45","_x46","_x47","_x48","loadAllOrders","cancelStream","tradeStream","orderStream","getPastEvents","fromBlock","toBlock","map","event","returnValues","filter","order","_tokenGive","_tokenGet","subscribeToEvents","events","Cancel","error","Trade","Deposit","Withdraw","Order","selectPairToken","Navbar","_this","react_default","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dropdown","Toggle","id","props","tokenName","Menu","pairsTokens","Item","key","onClick","renderMenuItem","target","rel","Component","connect","decorateMyFilledOrder","orderType","_user","objectSpread","orderTypeClass","orderSign","decorateMyOpenOrder","decorateOrderBookOrder","orderFillAction","decorateFilledOrders","previousOrder","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","_amountGive","_amountGet","tokenPrice","formattedTimestamp","moment","unix","_timestamp","format","tokenPriceClass","price","col","co","ol","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","sort","b","openOrders","all","cancelled","filled","reject","orderFilled","some","_id","orderCancelled","orderBookLoaded","orderBookLoadedSelector","obl","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","myFilledOrdersLoadedSelector","loaded","myFilledOrdersSelector","decorateMyFilledOrders","_userFill","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","orderCancellingSelector","oc","orderFillingSelector","of","buyOrderSelector","bo","sellOrderSelector","Spinner","Trades","concat","renderOrder","OverlayTrigger","placement","overlay","Tooltip","fillOrder","OrderBook","showOrderBook","orderBook","orderFilling","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","myFilledOrders","Tabs","defaultActiveKey","Tab","eventKey","title","showMyFilledOrders","openOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","x","formatter","y","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","buildGraphData","Date","startOf","keys","hour","hourGroup","open","close","length","high","maxBy","low","minBy","priceChartLoadedSelector","priceChartSelector","lastOrder","secondLastOrder","lastPrice","lastPriceChange","series","data","showPriceChart","chartData","react_apexcharts_min_default","height","PriceChart","showChart","BalanceForm","_this$props","onSubmit","placeHolder","onChange","buttonText","step","min","placeholder","required","BalanceTable","hasHead","walletAmount","exchangeAmount","toString","tableRow","Balance","loadBlockchainData","showForm","tokenDepositAmount","components_BalanceTable","components_BalanceForm","preventDefault","balancesLoading","OrderForm","amountOnChange","priceOnChange","buyOrSell","buyOrder","sellOrder","showBuyTotal","showSellTotal","components_OrderForm","tokenGet","amountGet","amountGive","toFixed","makeOrder","makeBuyOrder","tokenGive","makeSellOrder","NewOrder","making","Content","components_Balance","components_NewOrder","components_OrderBook","components_PriceChart","components_MyTransactions","components_Trades","ethereum","Web3","givenProvider","loadWeb3","connection","loadAccount","accounts","enable","getAccounts","App","net","getId","components_Navbar","contractsLoaded","components_Content","rootReducer","combineReducers","action","contract","index","toConsumableArray","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preLoadedState","Boolean","location","hostname","match","ReactDOM","render","es","store","createStore","applyMiddleware","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ouwZAAaA,EAAgB,6CAEhBC,EAAM,SACNC,EAAQC,KAAAC,IAAI,GAAI,IAGhBC,EAAS,SAACC,GACnB,GAAGA,EACC,OAAQA,EAAMJ,GAITK,EAAQF,EAERG,EAAgB,SAACC,GAI1B,OAFAA,EAAUF,EAAME,GAChBA,EAAUN,KAAKO,MAFG,IAEGD,GAFH,KAMTE,EAAsB,SAACC,GAEhC,OADAA,EAASA,EAAOC,QAAQ,mCAAmC,OCjBlDC,EAAeC,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,oBACgB,SAAAE,GAAC,OAAIA,IAEzCC,EAAU,SAAAH,GAAK,OAAIC,cAAID,EAAO,iBAC9BI,EAAkBL,YAAeI,EAAS,SAAAE,GAAC,OAAIA,IAG/CC,EAAuBP,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,iBACwB,SAACP,GAC9D,OAAOD,EAAcC,KCPZc,EAAc,SAAAP,GAAK,OAAIC,cAAID,EAAO,gBAAgB,IAIlDQ,GAHsBT,YAAeQ,EAAa,SAAAE,GAAE,OAAIA,IAGxCV,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,mBACiB,SAAAU,GAAC,OAAIA,KAG3CC,EAAoBZ,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,eACqB,SAAAY,GAAE,OAAIA,IAEpDC,EAAiB,SAAAb,GAAK,OAAIC,cAAID,EAAO,mBAAmB,IAIxDc,GAHyBf,YAAec,EAAgB,SAAAE,GAAE,OAAIA,IAG3ChB,YADR,SAAAC,GAAK,OAAIC,cAAID,EAAO,qBAAqB,IACR,SAAAgB,GAAC,OAAIA,KAEjDC,EAA0BlB,YACnCQ,EACAM,EACA,SAACJ,EAAIM,GAAL,OAAaN,GAAMM,IAIVG,EAA0BnB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,4BAA4B,IACD,SAAAmB,GAAE,OAAIA,IAGhEC,EAAuBrB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,kBACwB,SAACP,GAC9D,OAAOD,EAAcC,KAIZ4B,EAA+BtB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,0BACgC,SAACP,GAC9E,OAAOD,EAAcC,KAIZ6B,EAA+BvB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,0BACgC,SAACP,GAC9E,OAAOD,EAAcC,KAIZ8B,EAA6BxB,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,8BAA+B,IACD,SAAAwB,GAAG,OAAIA,IAGvEC,EAA8B1B,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,+BAAgC,IACD,SAAA0B,GAAG,OAAIA,IAGzEC,EAA6B5B,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,8BAA+B,IACD,SAAA4B,GAAG,OAAIA,IAGvEC,EAA8B9B,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,+BAAgC,IACD,SAAA8B,GAAG,OAAIA,IAMzEC,GAHsBhC,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,gBAAgB,IACO,SAAAgC,GAAE,OAAIA,IAGlCjC,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,eAAgB,KACO,SAAAiC,GAAG,OAAIA,KCrD/D,SAASC,EAAkB/B,GAC9B,MAAO,CACHgC,KAAM,sBACNhC,WAID,SAASiC,EAAYC,GACxB,MAAO,CACHF,KAAM,eACNE,SAgBD,SAASC,EAAqBC,GACjC,MAAO,CACHJ,KAAM,0BACNI,kBAID,SAASC,EAAiBH,GAC7B,MAAO,CACHF,KAAM,qBACNE,SAID,SAAS9B,EAAYkC,EAAOC,GAC/B,MAAO,CACHP,KAAM,eACNM,QACAC,QAID,SAAS7B,EAAe8B,GAC3B,MAAO,CACHR,KAAM,kBACNQ,YAID,SAASC,EAAsBC,GAClC,MAAO,CACHV,KAAM,0BACNU,mBAID,SAASC,EAAaC,GACzB,MAAO,CACHZ,KAAM,gBACNY,UAID,SAASC,EAAaC,GACzB,MAAO,CACHd,KAAM,gBACNc,UA4CD,SAASC,GAA2BzD,GACvC,MAAO,CACH0C,KAAM,gCACN1C,WAID,SAAS0D,GAA2B1D,GACvC,MAAO,CACH0C,KAAM,gCACN1C,6CClHK2D,GAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAC,EAAOC,EAAMC,EAAWC,GAAxB,IAAAxB,EAAA,OAAAmB,EAAAnD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEX3B,EAAQsB,EAAKO,IAAIC,SAASC,GAAMC,IAAKD,GAAME,SAASV,GAAWW,SACrEV,EAASzB,EAAYC,IAHJ0B,EAAAS,OAAA,SAIVnC,GAJU,OAAA0B,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAOjBW,OAAOC,MAAM,6CAPI,cAAAZ,EAAAS,OAAA,SASd,MATc,yBAAAT,EAAAa,SAAAlB,EAAA,iBAAH,gBAAAmB,EAAAC,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,GAYTC,GAAS,eAAAC,EAAA9B,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAA4B,EAAO1B,EAAM2B,EAAczB,GAA3B,IAAApB,EAAAC,EAAA,OAAAc,EAAAnD,EAAAyD,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAEXvB,EAAQkB,EAAKO,IAAIC,SAASqB,GAAcnB,IAAKiB,GAFlCC,EAAAtB,KAAA,EAGExB,EAAMgD,QAAQC,SAASC,OAHzB,cAGXjD,EAHW6C,EAAAK,KAIjB/B,EAAStD,EAAYkC,EAAOC,IAJX6C,EAAAf,OAAA,SAKV/B,GALU,OAAA8C,EAAAvB,KAAA,EAAAuB,EAAAd,GAAAc,EAAA,SAQjBb,OAAOC,MAAM,yCARI,eAAAY,EAAAf,OAAA,SAUd,MAVc,yBAAAe,EAAAX,SAAAS,EAAA,iBAAH,gBAAAQ,EAAAC,EAAAC,GAAA,OAAAX,EAAAJ,MAAAC,KAAAC,YAAA,GAaTc,GAAY,eAAAC,EAAA3C,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAyC,EAAOvC,EAAMC,EAAWC,GAAxB,IAAAlB,EAAA,OAAAa,EAAAnD,EAAAyD,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAnC,KAAA,EAEdrB,EAAWgB,EAAKO,IAAIC,SAASiC,GAAS/B,IAAK+B,GAAS9B,SAASV,GAAWW,SAC9EV,EAAShD,EAAe8B,IAHJwD,EAAA3B,OAAA,SAIb7B,GAJa,OAAAwD,EAAAnC,KAAA,EAAAmC,EAAA1B,GAAA0B,EAAA,SAOpBzB,OAAOC,MAAM,4CAPO,cAAAwB,EAAA3B,OAAA,SASjB,MATiB,yBAAA2B,EAAAvB,SAAAsB,EAAA,iBAAH,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAjB,MAAAC,KAAAC,YAAA,GAYZsB,GAAmB,eAAAC,EAAAnD,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAiD,EAAO/C,EAAMtB,EAAOwB,GAApB,IAAAtB,EAAAoE,EAAAC,EAAAtB,EAAA7C,EAAAC,EAAA,OAAAc,EAAAnD,EAAAyD,KAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAC/BJ,EDnCO,CACH1B,KAAM,6BCiCqB0E,EAAA5C,KAAA,EAGF5B,EAAMoD,QAAQqB,OAAOnB,OAHnB,OAGzBpD,EAHyBsE,EAAAjB,KAI/B/B,EAASvB,EAAqBC,IAE1BoE,EAAa,GACRC,EAAI,EAPkB,YAOfA,EAAIrE,GAPW,CAAAsE,EAAA5C,KAAA,gBAAA4C,EAAA5C,KAAA,GAQF5B,EAAMoD,QAAQsB,UAAUH,GAAGjB,OARzB,eAQvBL,EARuBuB,EAAAjB,KASvBnD,EAAQkB,EAAKO,IAAIC,SAASqB,GAAcnB,IAAKiB,GATtBuB,EAAA5C,KAAA,GAUVxB,EAAMgD,QAAQC,SAASC,OAVb,QAUvBjD,EAVuBmE,EAAAjB,KAY3Be,EAAWK,KAAK,CAAC1B,EAAc5C,IAZJ,QAOKkE,IAPLC,EAAA5C,KAAA,gBAc/BJ,EAASrB,EAAiBmE,IAE1B9C,ED5CO,CACH1B,KAAM,4BC2BqB,yBAAA0E,EAAAjC,SAAA8B,MAAH,gBAAAO,EAAAC,EAAAC,GAAA,OAAAV,EAAAzB,MAAAC,KAAAC,YAAA,GAmBnBkC,GAAiB,eAAAC,EAAA/D,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAA6D,EAAO3D,EAAMhB,EAAUxC,EAAS0D,GAAhC,IAAA0D,EAAAC,EAAA,OAAAhE,EAAAnD,EAAAyD,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAC7BJ,EDoEO,CACH1B,KAAM,qBCtEmBsF,EAAAxD,KAAA,EAIFN,EAAKO,IAAIwD,WAAWvH,GAJlB,cAIvBoH,EAJuBE,EAAA7B,KAK7B/B,ED8BO,CACH1B,KAAM,uBACN1C,QChCwB8H,IALCE,EAAAxD,KAAA,EAQMtB,EAAS8C,QAAQkC,UAAU3I,EAAemB,GAASwF,OARzD,OAQvB6B,EARuBC,EAAA7B,KAS7B/B,EAASX,GAA2BsE,IAEpC3D,EDoDO,CACH1B,KAAM,oBChEmB,yBAAAsF,EAAA7C,SAAA0C,MAAH,gBAAAM,EAAAC,EAAAC,EAAAC,GAAA,OAAAV,EAAArC,MAAAC,KAAAC,YAAA,GAcjB8C,GAAiB,eAAAC,EAAA3E,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAyE,EAAOvE,EAAMhB,EAAUF,EAAOtC,EAAS0D,GAAvC,IAAAsE,EAAAC,EAAA,OAAA5E,EAAAnD,EAAAyD,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAC7BJ,EDsDO,CACH1B,KAAM,qBCxDmBkG,EAAApE,KAAA,EAIFxB,EAAMgD,QAAQkC,UAAUxH,GAASwF,OAJ/B,cAIvBwC,EAJuBE,EAAAzC,KAK7B/B,EDuBO,CACH1B,KAAM,uBACN1C,QCzBwB0I,IALCE,EAAApE,KAAA,EAQMtB,EAAS8C,QAAQkC,UAAUlF,EAAM6F,QAAQ/D,QAASpE,GAASwF,OARjE,OAQvByC,EARuBC,EAAAzC,KAS7B/B,EAASV,GAA2BiF,IAEpCvE,EDsCO,CACH1B,KAAM,oBClDmB,yBAAAkG,EAAAzD,SAAAsD,MAAH,gBAAAK,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAV,EAAAjD,MAAAC,KAAAC,YAAA,GAcjB0D,GAAY,eAAAC,EAAAvF,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAqF,EAAOnF,EAAMhB,EAAUF,EAAOtC,EAAS0D,GAAvC,OAAAL,EAAAnD,EAAAyD,KAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,OACxBmD,GAAkBzD,EAAMhB,EAAUxC,EAAS0D,GAC3CmE,GAAkBrE,EAAMhB,EAAUF,EAAOtC,EAAS0D,GAF1B,wBAAAkF,EAAAnE,SAAAkE,MAAH,gBAAAE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAP,EAAA7D,MAAAC,KAAAC,YAAA,GAKZmE,GAAY,eAAAC,EAAAhG,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAA8F,EAAO5F,EAAMhB,EAAUxC,EAASqJ,EAAoB3F,GAApD,IAAA4F,EAAA,OAAAjG,EAAAnD,EAAAyD,KAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAzF,MAAA,OAClBwF,EAAS9F,EAAKgG,MAAMC,MAAMJ,EAAoB,SACpD7G,EAAS8C,QAAQ4D,aAAaQ,KAAK,CAACC,KAAM3J,EAAS4J,MAAON,IACrDO,GAAG,kBAAmB,SAACC,GACpBpG,EDgCD,CACH1B,KAAM,uBC/BL6H,GAAG,UAAW,SAACC,GACZC,QAAQC,IAAI,WACZ/C,GAAkBzD,EAAMhB,EAAUxC,EAAS0D,KAE9CmG,GAAG,QAAS,SAACI,GACVF,QAAQC,IAAIC,GACZ1F,OAAOC,MAAM,sBAZG,wBAAA+E,EAAA9E,SAAA2E,MAAH,gBAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAnB,EAAAtE,MAAAC,KAAAC,YAAA,GAgBZwF,GAAa,eAAAC,EAAArH,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAmH,EAAOjH,EAAMhB,EAAUxC,EAAS0K,EAAqBhH,GAArD,IAAA4F,EAAA,OAAAjG,EAAAnD,EAAAyD,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,OACnBwF,EAAS9F,EAAKgG,MAAMC,MAAMiB,EAAqB,SACrDlI,EAAS8C,QAAQiF,cAAcjB,GAAQI,KAAK,CAACC,KAAM3J,IAC9C6J,GAAG,kBAAmB,SAACC,GACpBpG,EDgBD,CACH1B,KAAM,uBCfL6H,GAAG,UAAW,SAACC,GACZC,QAAQC,IAAI,WACZ/C,GAAkBzD,EAAMhB,EAAUxC,EAAS0D,KAE9CmG,GAAG,QAAS,SAACI,GACVF,QAAQC,IAAIC,GACZ1F,OAAOC,MAAM,uBAZI,wBAAAmG,EAAAlG,SAAAgG,MAAH,gBAAAG,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAA3F,MAAAC,KAAAC,YAAA,GAgBbkG,GAAY,eAAAC,EAAA/H,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAA6H,EAAO3H,EAAMhB,EAAUF,EAAOtC,EAAS0K,EAAqBhH,GAA5D,IAAA4F,EAAA,OAAAjG,EAAAnD,EAAAyD,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,OAClBwF,EAAS9F,EAAKgG,MAAMC,MAAMiB,EAAqB,SACrDX,QAAQC,IAAI,YACZ1H,EAAMgD,QAAQ+F,QAAQ7I,EAAS2F,QAAQ/D,QAASkF,GAAQI,KAAK,CAACC,KAAM3J,IAC/D6J,GAAG,kBAAmB,SAACC,GACpBC,QAAQC,IAAI,wBACZxH,EAAS8C,QAAQ2F,aAAa3I,EAAM6F,QAAQ/D,QAASkF,GAAQI,KAAK,CAACC,KAAM3J,IACpE6J,GAAG,kBAAmB,SAACC,GACpBC,QAAQC,IAAI,oBACZtG,EDLT,CACH1B,KAAM,uBCMG6H,GAAG,UAAW,SAACC,GACZC,QAAQC,IAAI,WACZnC,GAAkBrE,EAAMhB,EAAUF,EAAOtC,EAAS0D,KAErDmG,GAAG,QAAS,SAACI,GACVF,QAAQC,IAAI,oBACZD,QAAQC,IAAIC,GACZ1F,OAAOC,MAAM,8BAlBL,wBAAA4G,EAAA3G,SAAA0G,MAAH,gBAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAArG,MAAAC,KAAAC,YAAA,GAuBZ6G,GAAa,eAAAC,EAAA1I,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAwI,EAAOtI,EAAMhB,EAAUF,EAAOtC,EAAS+L,EAAqBrI,GAA5D,IAAA4F,EAAA,OAAAjG,EAAAnD,EAAAyD,KAAA,SAAAqI,GAAA,cAAAA,EAAAnI,KAAAmI,EAAAlI,MAAA,OACnBwF,EAAS9F,EAAKgG,MAAMC,MAAMsC,EAAqB,SACrDvJ,EAAS8C,QAAQsG,cAActJ,EAAM6F,QAAQ/D,QAASkF,GAAQI,KAAK,CAACC,KAAM3J,IACrE6J,GAAG,kBAAmB,SAACC,GACpBpG,EDvBD,CACH1B,KAAM,uBCwBL6H,GAAG,UAAW,SAACC,GACZC,QAAQC,IAAI,WACZnC,GAAkBrE,EAAMhB,EAAUF,EAAOtC,EAAS0D,KAErDmG,GAAG,QAAS,SAACI,GACVF,QAAQC,IAAIC,GACZ1F,OAAOC,MAAM,uBAZI,wBAAAwH,EAAAvH,SAAAqH,MAAH,gBAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAhH,MAAAC,KAAAC,YAAA,GCxJbwH,GAAa,eAAArJ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAC,EAAOG,EAAUlB,EAAUF,GAA3B,IAAAkK,EAAA9J,EAAA+J,EAAA3J,EAAA4J,EAAA9J,EAAA,OAAAS,EAAAnD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGMtB,EAASmK,cAAc,SAAU,CAACC,UAAW,EAAGC,QAAS,WAH/D,cAGfL,EAHe5I,EAAA6B,KAKrB/C,GADIA,EAAkB8J,EAAaM,IAAI,SAACC,GAAD,OAAWA,EAAMC,gBACtBC,OAAO,SAASC,GAC9C,QAAKA,EAAMC,aAAetO,GAAiBqO,EAAMC,aAAe7K,EAAM8B,SAC9D8I,EAAME,YAAcvO,GAAiBqO,EAAME,YAAc9K,EAAM8B,WAK3EV,EAASjB,EAAsBC,IAZVkB,EAAAE,KAAA,EAcKtB,EAASmK,cAAc,QAAS,CAACC,UAAW,EAAGC,QAAS,WAd7D,cAcfJ,EAde7I,EAAA6B,KAgBrB3C,GADIA,EAAS2J,EAAYK,IAAI,SAACC,GAAD,OAAWA,EAAMC,gBAC9BC,OAAO,SAASC,GAC5B,QAAKA,EAAMC,aAAetO,GAAiBqO,EAAMC,aAAe7K,EAAM8B,SAC9D8I,EAAME,YAAcvO,GAAiBqO,EAAME,YAAc9K,EAAM8B,WAK3EV,EAASb,EAAaC,IAvBDc,EAAAE,KAAA,GAyBKtB,EAASmK,cAAc,QAAS,CAACC,UAAW,EAAGC,QAAS,WAzB7D,QAyBfH,EAzBe9I,EAAA6B,KA2BrB7C,GADIA,EAAS8J,EAAYI,IAAI,SAACC,GAAD,OAAWA,EAAMC,gBAC9BC,OAAO,SAASC,GAC5B,QAAKA,EAAMC,aAAetO,GAAiBqO,EAAMC,aAAe7K,EAAM8B,SAC9D8I,EAAME,YAAcvO,GAAiBqO,EAAME,YAAc9K,EAAM8B,WAK3EV,EAASf,EAAaC,IAlCDgB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAsCrBmG,QAAQC,IAARpG,EAAAU,IAtCqB,yBAAAV,EAAAa,SAAAlB,EAAA,kBAAH,gBAAAmB,EAAAC,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAC,KAAAC,YAAA,GCRbsI,GAAiB,eAAAnK,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAC,EAAOG,EAAUlB,GAAjB,OAAAa,EAAAnD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7BtB,EAAS8K,OAAOC,OAAO,GAAI,SAACC,EAAOT,GAC/BrJ,EHqFG,CACH1B,KAAM,kBACNkL,MGvFwBH,EAAMC,iBAGlCxK,EAAS8K,OAAOG,MAAM,GAAI,SAACD,EAAOT,GAC9BrJ,EH8FG,CACH1B,KAAM,eACNkL,MGhGqBH,EAAMC,iBAG/BxK,EAAS8K,OAAOI,QAAQ,GAAI,SAACF,EAAOT,GAChCrJ,EH6HG,CACH1B,KAAM,sBG3HVQ,EAAS8K,OAAOK,SAAS,GAAI,SAACH,EAAOT,GACjCrJ,EHyHG,CACH1B,KAAM,sBGvHVQ,EAAS8K,OAAOM,MAAM,GAAI,SAACJ,EAAOT,GAC9BrJ,EHqMG,CACH1B,KAAM,aACNkL,MGvMmBH,EAAMC,iBAlBA,wBAAApJ,EAAAa,SAAAlB,MAAH,gBAAAmB,EAAAC,GAAA,OAAAzB,EAAA2B,MAAAC,KAAAC,YAAA,GCMxB8I,GAAe,eAAA3K,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAC,EAAO4B,EAAc3B,EAAMhB,EAAUxC,EAAS0D,GAA9C,IAAApB,EAAA,OAAAe,EAAAnD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACAkB,GAAUxB,EAAM2B,EAAczB,GAD9B,cACdpB,EADcsB,EAAA6B,OAGhBjB,MAAM,sDAHUZ,EAAAE,KAAA,EAKdyI,GAAc7I,EAAUlB,EAAUF,GALpB,cAAAsB,EAAAE,KAAA,EAMduJ,GAAkB3J,EAAUlB,GANd,cAAAoB,EAAAE,KAAA,GAOd2E,GAAajF,EAAMhB,EAAUF,EAAOtC,EAAS0D,GAP/B,yBAAAE,EAAAa,SAAAlB,MAAH,gBAAAmB,EAAAC,EAAAC,EAAAc,EAAAC,GAAA,OAAAzC,EAAA2B,MAAAC,KAAAC,YAAA,GAiBf+I,oLACO,IAAAC,EAAAjJ,KACL,OACIkJ,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,kDACXF,EAAA9N,EAAA+N,cAAA,KAAGC,UAAU,eAAeC,KAAK,MAAjC,kCACAH,EAAA9N,EAAA+N,cAAA,UAAQC,UAAU,iBAAiBlM,KAAK,SAASoM,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,oBAAoBC,gBAAc,QAAQC,aAAW,qBACxKR,EAAA9N,EAAA+N,cAAA,QAAMC,UAAU,yBAEpBF,EAAA9N,EAAA+N,cAAA,MAAIC,UAAU,sBACVF,EAAA9N,EAAA+N,cAAA,MAAIC,UAAU,YACdF,EAAA9N,EAAA+N,cAACQ,EAAA,EAAD,KACIT,EAAA9N,EAAA+N,cAACQ,EAAA,EAASC,OAAV,CAAiB/H,KAAK,KAAKgI,GAAG,kBACzB7J,KAAK8J,MAAMC,UADhB,QAIAb,EAAA9N,EAAA+N,cAACQ,EAAA,EAASK,KAAV,KACKhK,KAAK8J,MAAMG,YAAYjC,IAAI,SAACxK,GAAD,OAvBjC,SAACA,EAAOsM,GAAU,IAC9BpL,EAAqCoL,EAArCpL,KAAMhB,EAA+BoM,EAA/BpM,SAAUxC,EAAqB4O,EAArB5O,QAAS0D,EAAYkL,EAAZlL,SAChC,OACIsK,EAAA9N,EAAA+N,cAACQ,EAAA,EAASO,KAAV,CAAeC,IAAK3M,EAAM,GAAI4M,QAAS,SAACrO,GAAD,OAAOgN,GAAgBvL,EAAM,GAAIkB,EAAMhB,EAAUxC,EAAS0D,KAAapB,EAAM,GAApH,QAoB2D6M,CAAe7M,EAAOyL,EAAKa,YAI1EZ,EAAA9N,EAAA+N,cAAA,MAAIC,UAAU,YACVF,EAAA9N,EAAA+N,cAAA,KACIC,UAAU,iBACVC,KAAM,gCAAkCrJ,KAAK8J,MAAM5O,QACnDoP,OAAO,SACPC,IAAI,uBAEHvK,KAAK8J,MAAM5O,mBA3BnBsP,aA8CNC,mBAVf,SAAyB1P,GACrB,MAAO,CACHG,QAASC,EAAgBJ,GACzBgP,UAAWrO,EAAkBX,GAC7BkP,YAAanN,EAAoB/B,GACjC2C,SAAU7B,EAAiBd,GAC3B2D,KAAM7D,EAAaE,KAIZ0P,CAAyBzB,iCC1DlC0B,GAAwB,SAACtC,EAAOlN,GAClC,IAEIyP,EAOJ,OALIA,EAJYvC,EAAMwC,QAAU1P,EAIhBkN,EAAMC,aAAetO,EAAgB,MAAQ,OAE7CqO,EAAMC,aAAetO,EAAgB,OAAS,MAG9DsE,OAAAwM,GAAA,EAAAxM,CAAA,GACO+J,EADP,CAEIuC,YACAG,eAA+B,QAAdH,ER1BJ,UQ0BkC3Q,EAC/C+Q,UAA0B,QAAdJ,EAAsB,IAAM,OAY1CK,GAAsB,SAAC5C,EAAOlN,GAChC,IAAIyP,EAAYvC,EAAMC,aAAetO,EAAgB,MAAQ,OAE7D,OAAAsE,OAAAwM,GAAA,EAAAxM,CAAA,GACO+J,EADP,CAEIuC,YACAG,eAA+B,QAAdH,ER7CJ,UQ6CkC3Q,KAcjDiR,GAAyB,SAAC7C,GAC5B,IAAMuC,EAAYvC,EAAMC,aAAetO,EAAgB,MAAQ,OAC/D,OAAOsE,OAAAwM,GAAA,EAAAxM,CAAA,GACA+J,EADP,CAEIuC,YACAG,eAA+B,QAAdH,ERhEJ,UQgEmC3Q,EAChDkR,gBAAgC,QAAdP,EAAuB,OAAS,SAM7CQ,GAAuB,SAACrN,GACjC,IAAIsN,EAAgBtN,EAAO,GAC3B,OAAOA,EAAOkK,IAAI,SAACI,GAIf,OAHAA,EAAQiD,GAAcjD,GACtBA,EAAQkD,GAAoBlD,EAAOgD,GACnCA,EAAgBhD,EACTA,KAITiD,GAAgB,SAACjD,GACnB,IAAImD,EAAaC,EACO,+CAArBpD,EAAMC,YACLkD,EAAcnD,EAAMqD,YACpBD,EAAcpD,EAAMsD,aAGpBH,EAAcnD,EAAMsD,WACpBF,EAAcpD,EAAMqD,aAGxB,IACIE,EAAcJ,EAAcC,EAGhC,OAFAG,EAAazR,KAAKO,MAFA,IAEMkR,GAFN,IAIlBtN,OAAAwM,GAAA,EAAAxM,CAAA,GACO+J,EADP,CAEImD,YAAajR,EAAMiR,GACnBC,YAAapR,EAAOoR,GACpBG,aACAC,mBAAoBC,KAAOC,KAAK1D,EAAM2D,YAAYC,OAAO,oBAK3DV,GAAsB,SAAClD,EAAOgD,GAChC,OAAO/M,OAAAwM,GAAA,EAAAxM,CAAA,GACA+J,EADP,CAEI6D,gBAAiBA,GAAgB7D,EAAMuD,WAAYP,MAIrDa,GAAkB,SAACC,EAAOd,GAC5B,OAAQA,EAAcO,WAAaO,EAASlS,ERlH3B,WSQR2D,GAAwB,SAAA5C,GAAK,OAAIC,cAAID,EAAO,mCAAmC,IAG/E6C,IAFgC9C,YAAe6C,GAAuB,SAAAwO,GAAG,OAAIA,IAE3D,SAAApR,GAAK,OAAIC,cAAID,EAAO,gCAAiC,MAGvE8C,IAF0B/C,YAAe8C,GAAiB,SAAAwO,GAAE,OAAIA,IAEjD,SAAArR,GAAK,OAAIC,cAAID,EAAO,0BAA0B,KAG7D+C,IAFuBhD,YAAe+C,GAAc,SAAAwO,GAAE,OAAIA,IAEjD,SAAAtR,GAAK,OAAIC,cAAID,EAAO,uBAAwB,MAGrDuR,IAFiBxR,YAAegD,GAAQ,SAAAyO,GAAC,OAAIA,IAExB,SAAAxR,GAAK,OAAIC,cAAID,EAAO,0BAA0B,KACnEyR,GAA6B1R,YAAewR,GAAoB,SAAAD,GAAE,OAAIA,IAEtEI,GAAe,SAAA1R,GAAK,OAAIC,cAAID,EAAO,uBAAwB,KAC3D2R,GAAuB5R,YAChC2R,GACA,SAAC3O,GAOG,OALAA,EAASA,EAAO6O,KAAK,SAACvR,EAAEwR,GAAH,OAASxR,EAAE2Q,WAAaa,EAAEb,aAI/CjO,GAFAA,EAASqN,GAAqBrN,IAEd6O,KAAK,SAACvR,EAAEwR,GAAH,OAASA,EAAEb,WAAa3Q,EAAE2Q,eAMjDc,GAAa,SAAA9R,GACf,IAAM+R,EAAMhP,GAAO/C,GACbgS,EAAYnP,GAAgB7C,GAC5BiS,EAASP,GAAa1R,GAGtB8R,EAAaI,iBAAOH,EAAK,SAAC1E,GAC5B,IAAM8E,EAAcF,EAAOG,KAAK,SAACZ,GAAD,OAAOA,EAAEa,MAAQhF,EAAMgF,MACjDC,EAAiBN,EAAUI,KAAK,SAACZ,GAAD,OAAOA,EAAEa,MAAQhF,EAAMgF,MAC7D,OAAQF,GAAeG,IAE3B,OAAOR,GAELS,GAAkB,SAAAvS,GAAK,OAAI4C,GAAsB5C,IAAUuR,GAAmBvR,IAAU8C,GAAa9C,IAC9FwS,GAA0BzS,YAAewS,GAAiB,SAAAE,GAAG,OAAIA,IACjEC,GAAoB3S,YAC7B+R,GACA,SAAC/O,GAEGA,EDP+B,SAACA,GACpC,OACIA,EAAOkK,IAAI,SAACI,GAGR,OAFAA,EAAQiD,GAAcjD,GACtBA,EAAQ6C,GAAuB7C,KCG1BsF,CAAwB5P,GAEjCA,EAAS6P,kBAAQ7P,EAAQ,aACzB,IAAI8P,EAAY5S,cAAI8C,EAAQ,MAAO,IAC/B+P,EAAa7S,cAAI8C,EAAQ,OAAQ,IAMrC,OALAA,EAAMO,OAAAwM,GAAA,EAAAxM,CAAA,GACCP,EADD,CAEF8P,UAAWA,EAAUjB,KAAK,SAACvR,EAAGwR,GAAJ,OAAUA,EAAEjB,WAAavQ,EAAEuQ,aACrDkC,WAAYA,EAAWlB,KAAK,SAACvR,EAAGwR,GAAJ,OAAUA,EAAEjB,WAAavQ,EAAEuQ,iBAOtDmC,GAA+BhT,YAAewR,GAAoB,SAAAyB,GAAM,OAAIA,IAC5EC,GAAyBlT,YAClCI,EACAuR,GACA,SAACvR,EAAS4C,GAON,OADAA,ED/E8B,SAACA,EAAQ5C,GAC3C,OACI4C,EAAOkK,IAAI,SAACI,GAGZ,OAFAA,EAAQiD,GAAcjD,GACtBA,EAAQsC,GAAsBtC,EAAOlN,KC2E5B+S,CAFTnQ,GAFAA,EAASA,EAAOqK,OAAO,SAACoE,GAAD,OAAOA,EAAE3B,QAAU1P,GAAWqR,EAAE2B,YAAchT,KAErDyR,KAAK,SAACvR,EAAEwR,GAAH,OAASA,EAAEb,WAAa3Q,EAAE2Q,aAEP7Q,KAMnCiT,GAA6BrT,YAAewS,GAAiB,SAAAS,GAAM,OAAIA,IACvEK,GAAuBtT,YAChCI,EACA2R,GACA,SAAC3R,EAAS4C,GAON,OADAA,GAFAA,EDlE4B,SAACA,EAAQ5C,GACzC,OACI4C,EAAOkK,IAAI,SAACI,GAGZ,OAFAA,EAAQiD,GAAcjD,GACtBA,EAAQ4C,GAAoB5C,EAAOlN,KC8D1BmT,CAFTvQ,EAASA,EAAOqK,OAAO,SAACoE,GAAD,OAAOA,EAAE3B,QAAU1P,MAI1ByR,KAAK,SAACvR,EAAEwR,GAAH,OAASA,EAAEb,WAAa3Q,EAAE2Q,eAM1CuC,GAA0BxT,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,4BAA4B,IACD,SAAAwT,GAAE,OAAIA,IAGhEC,GAAuB1T,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,yBAAyB,IACD,SAAA0T,GAAE,OAAIA,IAG1DC,GAAmB5T,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,oBAAqB,KACD,SAAA4T,GAAE,OAAIA,IAGlDC,GAAoB9T,YADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,qBAAsB,KACD,SAAA4T,GAAE,OAAIA,IChHlDE,GAAA,SAAAzQ,GACX,MAAY,UADeA,EAANlB,KAETgM,EAAA9N,EAAA+N,cAAA,SAAOC,UAAU,0CAErBF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2CCgBrB0F,oLAEO,IAlBarC,EAmBX1C,EAAa/J,KAAK8J,MAAlBC,UACP,OACIb,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,YACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2BACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eAAf,UAGAF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,aACXF,EAAA9N,EAAA+N,cAAA,SAAOC,UAAU,mCACbF,EAAA9N,EAAA+N,cAAA,aACID,EAAA9N,EAAA+N,cAAA,UACID,EAAA9N,EAAA+N,cAAA,kBACAD,EAAA9N,EAAA+N,cAAA,UAAKY,GACLb,EAAA9N,EAAA+N,cAAA,UAAKY,EAAL,UAGN/J,KAAK8J,MAAMwC,oBAnCfG,EAmCqDzM,KAAK8J,MAAM2C,aAjClFvD,EAAA9N,EAAA+N,cAAA,aACKsD,EAAazE,IAAI,SAACI,GACf,OACIc,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,SAAA2F,OAAW3G,EAAMgF,KAAOjD,IAAK/B,EAAMgF,KAC5ClE,EAAA9N,EAAA+N,cAAA,MAAIC,UAAU,cAAchB,EAAMwD,oBAClC1C,EAAA9N,EAAA+N,cAAA,UAAKf,EAAMoD,aACXtC,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,QAAA2F,OAAU3G,EAAM6D,kBAAoB7D,EAAMuD,iBA2B2BzC,EAAA9N,EAAA+N,cAAC0F,GAAD,CAAS3R,KAAK,qBAnBnGsN,aAoCNC,mBARf,SAAyB1P,GACrB,MAAO,CACHuR,mBAAoBE,GAA2BzR,GAC/C0R,aAAcC,GAAqB3R,GACnCgP,UAAWrO,EAAkBX,KAItB0P,CAAyBqE,wBChDlCE,GAAc,SAAC5G,EAAO0B,GAAU,IAC1BlL,EAA4CkL,EAA5ClL,SAAUlB,EAAkCoM,EAAlCpM,SAAUxC,EAAwB4O,EAAxB5O,QAASwD,EAAeoL,EAAfpL,KAAMlB,EAASsM,EAATtM,MAC3C,OACI0L,EAAA9N,EAAA+N,cAAC8F,GAAA,EAAD,CAAgB9E,IAAK/B,EAAMgF,IAAK8B,UAAU,OACtCC,QACIjG,EAAA9N,EAAA+N,cAACiG,GAAA,EAAD,CAASvF,GAAIzB,EAAMgF,KAAnB,iBAAA2B,OACsB3G,EAAM8C,mBAIhChC,EAAA9N,EAAA+N,cAAA,MAAIgB,IAAK/B,EAAMgF,IAAKhE,UAAU,mBAAmBgB,QAAS,SAACrO,GAAD,OP6C7C,SAAC6C,EAAUlB,EAAU0K,EAAOlN,EAASwD,EAAMlB,GAChEE,EAAS8C,QAAQ6O,UAAUjH,EAAMgF,KAAKxI,KAAK,CAACC,KAAM3J,IAE7C6J,GAAG,kBAAmB,SAACC,GACpBpG,EF4BD,CACH1B,KAAM,oBE3BL6H,GAAG,UAAW,SAACC,GACZrB,GAAajF,EAAMhB,EAAUF,EAAOtC,EAAS0D,KAEhDmG,GAAG,QAAS,SAAC2D,GACVzD,QAAQC,IAAIwD,GACZjJ,OAAOC,MAAM,wBOxDoD2P,CAAUzQ,EAAUlB,EAAU0K,EAAOlN,EAASwD,EAAMlB,KACjH0L,EAAA9N,EAAA+N,cAAA,UAAKf,EAAMoD,aACXtC,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,QAAA2F,OAAU3G,EAAM0C,iBAAmB1C,EAAMuD,YACtDzC,EAAA9N,EAAA+N,cAAA,UAAKf,EAAMmD,gBAsBrB+D,oLAEE,OACIpG,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,YACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2BACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eAAf,cAGAF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,wBACXF,EAAA9N,EAAA+N,cAAA,SAAOC,UAAU,mCACZpJ,KAAK8J,MAAMyF,cA1BlB,SAACzF,GAAU,IAEtB0F,EAAwB1F,EAAxB0F,UAAWzF,EAAaD,EAAbC,UAClB,OACIb,EAAA9N,EAAA+N,cAAA,aACKqG,EAAU3B,WAAW7F,IAAI,SAACI,GAAD,OAAW4G,GAAY5G,EAAO0B,KACxDZ,EAAA9N,EAAA+N,cAAA,UACID,EAAA9N,EAAA+N,cAAA,UAAKY,GACLb,EAAA9N,EAAA+N,cAAA,UAAKY,EAAL,QACAb,EAAA9N,EAAA+N,cAAA,kBAEHqG,EAAU5B,UAAU5F,IAAI,SAACI,GAAD,OAAW4G,GAAY5G,EAAO0B,MAeXyF,CAAcvP,KAAK8J,OAASZ,EAAA9N,EAAA+N,cAAC0F,GAAD,CAAS3R,KAAK,qBAV1EsN,aAiCTC,mBAdf,SAAyB1P,GACrB,IAAMuS,EAAkBC,GAAwBxS,GAC1C0U,EAAejB,GAAqBzT,GAC1C,MAAO,CACHyU,UAAW/B,GAAkB1S,GAC7BwU,cAAejC,IAAoBmC,EACnC/R,SAAU7B,EAAiBd,GAC3BG,QAASC,EAAgBJ,GACzBgP,UAAWrO,EAAkBX,GAC7B2D,KAAM7D,EAAaE,GACnByC,MAAOjC,EAAcR,KAId0P,CAAyB6E,wBChDlCI,GAAmB,SAAC5F,GAAU,IACzB6F,EAA6C7F,EAA7C6F,aAAc/Q,EAA+BkL,EAA/BlL,SAAUlB,EAAqBoM,EAArBpM,SAAUxC,EAAW4O,EAAX5O,QACzC,OACIgO,EAAA9N,EAAA+N,cAAA,aACKwG,EAAa3H,IAAI,SAACI,GACf,OACIc,EAAA9N,EAAA+N,cAAA,MAAIgB,IAAG,QAAA4E,OAAU3G,EAAMgF,MACnBlE,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,QAAA2F,OAAU3G,EAAM0C,iBAAmB1C,EAAMoD,aACtDtC,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,QAAA2F,OAAU3G,EAAM0C,iBAAmB1C,EAAMuD,YACtDzC,EAAA9N,EAAA+N,cAAA,MACIC,UAAU,0BACVgB,QAAS,SAACrO,IRYX,SAAC6C,EAAUlB,EAAU0K,EAAOlN,GACnDwC,EAAS8C,QAAQoP,YAAYxH,EAAMgF,KAAKxI,KAAK,CAACC,KAAM3J,IAE/C6J,GAAG,kBAAmB,SAACC,GACpBpG,EF2BD,CACH1B,KAAM,uBE1BL6H,GAAG,QAAS,SAAC2D,GACVzD,QAAQC,IAAIwD,GACZjJ,OAAOC,MAAM,wBQnBOkQ,CAAYhR,EAAUlB,EAAU0K,EAAOlN,KAH/C,UAalB2U,oLACO,IAvCeC,EAwCb/F,EAAa/J,KAAK8J,MAAlBC,UACP,OACIb,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2BACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eAAf,mBAGAF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,aACXF,EAAA9N,EAAA+N,cAAC4G,GAAA,EAAD,CAAMC,iBAAiB,SAAS5G,UAAU,sBACtCF,EAAA9N,EAAA+N,cAAC8G,GAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAAS/G,UAAU,WAC5CF,EAAA9N,EAAA+N,cAAA,SAAOC,UAAU,mCACbF,EAAA9N,EAAA+N,cAAA,aACID,EAAA9N,EAAA+N,cAAA,UACID,EAAA9N,EAAA+N,cAAA,kBACAD,EAAA9N,EAAA+N,cAAA,UAAKY,GACLb,EAAA9N,EAAA+N,cAAA,UAAKY,EAAL,UAGP/J,KAAK8J,MAAMsG,oBAzDhBN,EAyDwD9P,KAAK8J,MAAMgG,eAvDvF5G,EAAA9N,EAAA+N,cAAA,aACK2G,EAAe9H,IAAI,SAACI,GACjB,OACIc,EAAA9N,EAAA+N,cAAA,MAAIgB,IAAG,UAAA4E,OAAY3G,EAAMgF,MACrBlE,EAAA9N,EAAA+N,cAAA,MAAIC,UAAU,cAAchB,EAAMwD,oBAClC1C,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,QAAA2F,OAAU3G,EAAM0C,iBAAmB1C,EAAM2C,UAAW3C,EAAMoD,aACvEtC,EAAA9N,EAAA+N,cAAA,MAAIC,UAAS,QAAA2F,OAAU3G,EAAM0C,iBAAmB1C,EAAMuD,iBAiDmCzC,EAAA9N,EAAA+N,cAAC0F,GAAD,CAAS3R,KAAK,YAGvGgM,EAAA9N,EAAA+N,cAAC8G,GAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAAS/G,UAAU,WAC5CF,EAAA9N,EAAA+N,cAAA,SAAOC,UAAU,mCACbF,EAAA9N,EAAA+N,cAAA,aACID,EAAA9N,EAAA+N,cAAA,UACID,EAAA9N,EAAA+N,cAAA,oBACAD,EAAA9N,EAAA+N,cAAA,UAAKY,EAAL,QACAb,EAAA9N,EAAA+N,cAAA,sBAGPnJ,KAAK8J,MAAM4F,iBAAmBA,GAAiB1P,KAAK8J,OAASZ,EAAA9N,EAAA+N,cAAC0F,GAAD,CAAS3R,KAAK,sBA/B/EsN,aAwDdC,mBAff,SAAyB1P,GACrB,IAAMsV,EAAmBlC,GAA2BpT,GAC9CuV,EAAkBhC,GAAwBvT,GAEhD,MAAO,CACH+U,eAAgB9B,GAAuBjT,GACvCqV,mBAAoBtC,GAA6B/S,GACjD4U,aAAcvB,GAAqBrT,GACnC2U,iBAAkBW,IAAqBC,EACvC5S,SAAU7B,EAAiBd,GAC3BG,QAASC,EAAgBJ,GACzBgP,UAAWrO,EAAkBX,KAItB0P,CAAyBoF,yBC5G3BU,GAAe,CACxBC,MAAO,CACLC,WAAY,CAAEC,SAAS,GACvBC,QAAS,CAAEC,MAAM,GACjBC,MAAO,SAETC,QAAS,CACPJ,SAAS,EACTK,OAAO,EACPC,MAAO,CACLC,SAAU,OACVC,gBAAYC,GAEdC,EAAG,CACCR,MAAM,EACN5E,OAAQ,SACRqF,eAAWF,GAEfG,EAAG,CACDV,MAAM,EACNT,MAAO,SAEToB,OAAQ,CACNX,MAAM,GAERY,MAAO,CACJC,QAAS,QAEZC,MAAO,CACHhB,SAAS,EACTiB,SAAU,WACVC,QAAS,EACTC,QAAS,IAGfC,MAAO,CACL5U,KAAM,WACN6U,OAAQ,CACNnB,MAAM,EACNI,MAAO,CACHgB,OAAQ,OACRf,SAAU,MACVgB,SAAU,4BAIlBC,MAAO,CACLH,OAAQ,CACNnB,MAAM,EACNuB,SAAU,EACVC,SAAU,IACVpB,MAAO,CACLqB,MAAO,OACPpB,SAAU,MACVgB,SAAU,0BAEZL,QAAS,EACTC,QAAS,EACTS,OAAQ,KCvDHC,IDgEA,IAAIC,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,UAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,YAIT,IAAIA,KAAK,WAIT,IAAIA,KAAK,YC5SQ,SAAC1U,GAgB3B,OAfAA,EAAS6P,kBAAQ7P,EAAQ,SAACyO,GAAD,OAAOV,KAAOC,KAAKS,EAAER,YAAY0G,QAAQ,QAAQzG,WAC5D3N,OAAOqU,KAAK5U,GAEFkK,IAAI,SAAC2K,GAEzB,IAAMC,EAAY9U,EAAO6U,GACnBE,EAAOD,EAAU,GACjBE,EAAQF,EAAUA,EAAUG,OAAO,GACnCC,EAAOC,gBAAML,EAAW,cACxBM,EAAMC,gBAAMP,EAAW,cAC7B,MAAQ,CACJxB,EAAG,IAAIoB,KAAKG,GACZrB,EAAG,CAACuB,EAAKlH,WAAYqH,EAAKrH,WAAYuH,EAAIvH,WAAYmH,EAAMnH,iBCV3DyH,GAA2BtY,YAAewR,GAAoB,SAAAyB,GAAM,OAAIA,IACxEsF,GAAqBvY,YAC9B2R,GACA,SAAC3O,GAEGA,EAASA,EAAO6O,KAAK,SAACvR,EAAEwR,GAAH,OAASxR,EAAE2Q,WAAaa,EAAEb,aAG/C,IAAIuH,GADJxV,EAASqN,GAAqBrN,IACPA,EAAOiV,OAAO,GACjCQ,EAAkBzV,EAAOA,EAAOiV,OAAO,GACvCS,EAAYxY,cAAIsY,EAAW,aAAc,GAG7C,MAAQ,CACJE,YACAC,gBAAkBD,GAJAxY,cAAIuY,EAAiB,aAAc,GAIH,IAAM,IACxDG,OAAQ,CAAC,CACLC,KAAMpB,GAAezU,QCL/B8V,GAAiB,SAAC9J,GAAU,IACvB+J,EAAwB/J,EAAxB+J,UAAW9J,EAAaD,EAAbC,UAClB,OACIb,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eACXF,EAAA9N,EAAA+N,cAAA,UAAKY,EAAL,aAZe,MAYyB8J,EAAUJ,gBAX7CvK,EAAA9N,EAAA+N,cAAA,QAAMC,UAAU,gBAAhB,UAEAF,EAAA9N,EAAA+N,cAAA,QAAMC,UAAU,eAAhB,UASL,SAA4EyK,EAAUL,WACtFtK,EAAA9N,EAAA+N,cAAC2K,GAAA1Y,EAAD,CAAOiI,QAASkN,GAAcmD,OAAQG,EAAUH,OAAQxW,KAAK,cAAc2T,MAAM,OAAOkD,OAAO,WAKrGC,oLAEE,OACI9K,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2BACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eAAf,SAGAF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,aACTpJ,KAAK8J,MAAMmK,UAAaL,GAAe5T,KAAK8J,OAASZ,EAAA9N,EAAA+N,cAAC0F,GAAD,CAAS3R,KAAK,iBARhEsN,aAuBVC,mBARf,SAAyB1P,GACrB,MAAO,CACHkZ,UAAWb,GAAyBrY,GACpC8Y,UAAWR,GAAmBtY,GAC9BgP,UAAWrO,EAAkBX,KAItB0P,CAAyBuJ,IChDlCE,oLACM,IAAAC,EACkDnU,KAAK8J,MAApDsK,EADHD,EACGC,SAAUC,EADbF,EACaE,YAAaC,EAD1BH,EAC0BG,SAAUC,EADpCJ,EACoCI,WACxC,OACIrL,EAAA9N,EAAA+N,cAAA,QAAMC,UAAU,MAAMgL,SAAUA,GAC5BlL,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,yBACXF,EAAA9N,EAAA+N,cAAA,SAAOjM,KAAK,SACRsX,KAAK,MACLC,IAAI,IACJC,YAAaL,EACbC,SAAUA,EACVlL,UAAU,kDACVuL,UAAQ,KAEhBzL,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,8BACXF,EAAA9N,EAAA+N,cAAA,UAAQjM,KAAK,SAASkM,UAAU,oCAAoCmL,YAf9D/J,aA0BXC,mBAJf,SAAyB1P,GACrB,MAAO,IAGI0P,CAAyByJ,ICJlCU,oLACO,IAAAT,EACsDnU,KAAK8J,MAAzD+K,EADFV,EACEU,QAAS9K,EADXoK,EACWpK,UAAW+K,EADtBX,EACsBW,aAAcC,EADpCZ,EACoCY,eACzC,OACI7L,EAAA9N,EAAA+N,cAAA,SAAOC,UAAU,mCACXyL,EAfV3L,EAAA9N,EAAA+N,cAAA,aACID,EAAA9N,EAAA+N,cAAA,UACID,EAAA9N,EAAA+N,cAAA,mBACAD,EAAA9N,EAAA+N,cAAA,oBACAD,EAAA9N,EAAA+N,cAAA,wBAW2B,KAC3BD,EAAA9N,EAAA+N,cAAA,aA5BC,SAACY,EAAW+K,EAAcC,GACvC,OACI7L,EAAA9N,EAAA+N,cAAA,UACID,EAAA9N,EAAA+N,cAAA,UAAKY,GACLb,EAAA9N,EAAA+N,cAAA,UAAK2L,EAAaE,YAClB9L,EAAA9N,EAAA+N,cAAA,UAAK4L,EAAeC,aAwBXC,CAASlL,EAAW+K,EAAcC,YAP5BvK,aAkBZC,mBAJf,SAAyB1P,GACrB,MAAO,IAGI0P,CAAyBmK,ICgDlCM,gMAGElV,KAAKmV,mMAI8CnV,KAAK8J,MAAjDlL,aAAUlB,aAAUF,UAAOtC,YAASwD,kBACrCiF,GAAajF,EAAMhB,EAAUF,EAAOtC,EAAS0D,sIAInD,OACIsK,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2BACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eAAf,WAGAF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,aACVpJ,KAAK8J,MAAMsL,SAtFf,SAACtL,GAAU,IACjBlL,EAGHkL,EAHGlL,SAAU0D,EAGbwH,EAHaxH,aAAcY,EAG3B4G,EAH2B5G,aAAcX,EAGzCuH,EAHyCvH,qBAAsBY,EAG/D2G,EAH+D3G,qBAC/DoB,EAEAuF,EAFAvF,mBAAoBqB,EAEpBkE,EAFoBlE,oBAAqByP,EAEzCvL,EAFyCuL,mBAAoBpO,EAE7D6C,EAF6D7C,oBAC7DvI,EACAoL,EADApL,KAAMhB,EACNoM,EADMpM,SAAUF,EAChBsM,EADgBtM,MAAOtC,EACvB4O,EADuB5O,QA2B3B,OACIgO,EAAA9N,EAAA+N,cAAC4G,GAAA,EAAD,CAAMC,iBAAkB,UAAW5G,UAAW,sBAC1CF,EAAA9N,EAAA+N,cAAC8G,GAAA,EAAD,CAAKC,SAAU,UAAWC,MAAO,UAAW/G,UAAW,WACnDF,EAAA9N,EAAA+N,cAACmM,GAAD,CAAcT,SAAS,EAAM9K,UAAW,MAAO+K,aAAcxS,EAAcyS,eAAgBxS,IAC3F2G,EAAA9N,EAAA+N,cAACoM,GAAD,CACInB,SA7BW,SAACrY,GACxBA,EAAEyZ,iBACFpR,GAAa1F,EAAMhB,EAAUxC,EAASqJ,EAAoB3F,IA4B9CyV,YAAa,aACbC,SA3BW,SAACvY,GAAD,OAAO6C,EjBqH3B,CACH1B,KAAM,+BACNsH,OiBvHiEzI,EAAEuO,OAAOxF,SA4B9DyP,WAAY,YAEhBrL,EAAA9N,EAAA+N,cAACmM,GAAD,CAAcT,SAAS,EAAO9K,UAAWD,EAAMC,UAAW+K,aAAc5R,EAAc6R,eAAgB5R,IACtG+F,EAAA9N,EAAA+N,cAACoM,GAAD,CACInB,SA9BW,SAACrY,GACxBA,EAAEyZ,iBACFrP,GAAazH,EAAMhB,EAAUF,EAAOtC,EAASma,EAAoBzW,IA6BrDyV,YAAa,eACbC,SA5BW,SAACvY,GAAD,OAAO6C,EjB6H3B,CACH1B,KAAM,+BACNsH,OiB/HiEzI,EAAEuO,OAAOxF,SA6B9DyP,WAAY,aAGpBrL,EAAA9N,EAAA+N,cAAC8G,GAAA,EAAD,CAAKC,SAAU,WAAYC,MAAO,WAAY/G,UAAW,WACrDF,EAAA9N,EAAA+N,cAACmM,GAAD,CAAcT,SAAS,EAAM9K,UAAW,MAAO+K,aAAcxS,EAAcyS,eAAgBxS,IAC3F2G,EAAA9N,EAAA+N,cAACoM,GAAD,CACInB,SAjCY,SAACrY,GACzBA,EAAEyZ,iBACF/P,GAAc/G,EAAMhB,EAAUxC,EAAS0K,EAAqBhH,IAgChDyV,YAAa,aACbC,SA/BY,SAACvY,GAAD,OAAO6C,EjBgH5B,CACH1B,KAAM,gCACNsH,OiBlHmEzI,EAAEuO,OAAOxF,SAgChEyP,WAAY,aAEhBrL,EAAA9N,EAAA+N,cAACmM,GAAD,CAAcT,SAAS,EAAO9K,UAAWD,EAAMC,UAAW+K,aAAc5R,EAAc6R,eAAgB5R,IACtG+F,EAAA9N,EAAA+N,cAACoM,GAAD,CACInB,SAlCY,SAACrY,GACzBA,EAAEyZ,iBACF1O,GAAcpI,EAAMhB,EAAUF,EAAOtC,EAAS+L,EAAqBrI,IAiCvDyV,YAAa,eACbC,SAhCY,SAACvY,GAAD,OAAO6C,EjBwH5B,CACH1B,KAAM,gCACNsH,OiB1HmEzI,EAAEuO,OAAOxF,SAiChEyP,WAAY,eAyBWa,CAASpV,KAAK8J,OAASZ,EAAA9N,EAAA+N,cAAC0F,GAAD,eAlB5CrE,aA8CPC,mBArBf,SAAyB1P,GACrB,IAAM0a,EAAkBxZ,EAAwBlB,GAChD,MAAO,CACHG,QAASC,EAAgBJ,GACzB2C,SAAU7B,EAAiBd,GAC3B2D,KAAM7D,EAAaE,GACnByC,MAAOjC,EAAcR,GACrBgP,UAAWrO,EAAkBX,GAC7BuH,aAAcjH,EAAqBN,GACnCmI,aAAc/G,EAAqBpB,GACnCwH,qBAAsBnG,EAA6BrB,GACnDoI,qBAAsB9G,EAA6BtB,GACnD0a,kBACAL,UAAWK,EACXlR,mBAAoBjI,EAA2BvB,GAC/C6K,oBAAqBpJ,EAA4BzB,GACjDsa,mBAAoB3Y,EAA2B3B,GAC/CkM,oBAAqBrK,EAA4B7B,KAI1C0P,CAAyByK,ICrIlCQ,oLACM,IAAAvB,EAOAnU,KAAK8J,MANFsK,EADHD,EACGC,SACHuB,EAFAxB,EAEAwB,eACAC,EAHAzB,EAGAyB,cACArB,EAJAJ,EAIAI,WACAsB,EALA1B,EAKA0B,UACA9L,EANAoK,EAMApK,UAEJ,OACIb,EAAA9N,EAAA+N,cAAA,QAAMiL,SAAUA,GACZlL,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,oBACXF,EAAA9N,EAAA+N,cAAA,gBAAA4F,OAAW8G,EAAX,aAAA9G,OAAgChF,EAAhC,MACAb,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eACXF,EAAA9N,EAAA+N,cAAA,SAAOjM,KAAK,SACRsX,KAAK,MACLC,IAAI,IACJC,YAAY,SACZJ,SAAUqB,EACVvM,UAAU,kDACVuL,UAAQ,MAGpBzL,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,oBACXF,EAAA9N,EAAA+N,cAAA,gBAAA4F,OAAW8G,EAAX,WACA3M,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eACXF,EAAA9N,EAAA+N,cAAA,SAAOjM,KAAK,OACRsX,KAAK,MACLC,IAAI,IACJC,YAAY,QACZJ,SAAUsB,EACVxM,UAAU,kDACVuL,UAAQ,MAGpBzL,EAAA9N,EAAA+N,cAAA,UAAQjM,KAAK,SAASkM,UAAU,oCAAoCmL,WAnC5D/J,aA+CTC,mBANf,SAAyB1P,GACrB,MAAO,CACHgP,UAAWrO,EAAkBX,KAItB0P,CAAyBiL,ICtClCN,GAAW,SAACtL,GAAU,IACjBlL,EAA8FkL,EAA9FlL,SAAUF,EAAoFoL,EAApFpL,KAAMhB,EAA8EoM,EAA9EpM,SAAUF,EAAoEsM,EAApEtM,MAAOtC,EAA6D4O,EAA7D5O,QAAS4a,EAAoDhM,EAApDgM,SAAUC,EAA0CjM,EAA1CiM,UAAWC,EAA+BlM,EAA/BkM,aAAcC,EAAiBnM,EAAjBmM,cAgBpF,OACI/M,EAAA9N,EAAA+N,cAAC4G,GAAA,EAAD,CAAMC,iBAAiB,MAAM5G,UAAU,sBACnCF,EAAA9N,EAAA+N,cAAC8G,GAAA,EAAD,CAAK7G,UAAU,UAAU+G,MAAM,MAAMD,SAAS,OAC1ChH,EAAA9N,EAAA+N,cAAC+M,GAAD,CACI9B,SAlBS,SAACrY,GACtBA,EAAEyZ,iBjB+DkB,SAAC5W,EAAUlB,EAAUF,EAAOkB,EAAM0J,EAAOlN,GACjE,IAAMib,EAAW3Y,EAAM6F,QAAQ/D,QACzB8W,EAAY1X,EAAKgG,MAAMC,MAAMyD,EAAM5D,OAAQ,SAE3C6R,EAAa3X,EAAKgG,MAAMC,OAAOyD,EAAM5D,OAAS4D,EAAM8D,OAAOoK,QAAQ,IAAK,SAE9E5Y,EAAS8C,QAAQ+V,UAAUJ,EAAUC,EAHnBrc,6CAGyCsc,GAAYzR,KAAK,CAACC,KAAM3J,IAC9E6J,GAAG,kBAAmB,SAACC,GACpBpG,EFwGD,CACH1B,KAAM,uBEvGL6H,GAAG,QAAS,SAAC2D,GACVzD,QAAQC,IAAIwD,GACZjJ,OAAOC,MAAM,6BiB1EjB8W,CAAa5X,EAAUlB,EAAUF,EAAOkB,EAAMoX,EAAU5a,IAiB5Cya,eAfS,SAAC5Z,GAAD,OAAO6C,EnB8JzB,CACH1B,KAAM,2BACNsH,OmBhK2DzI,EAAEuO,OAAOxF,SAgBxD8Q,cAfQ,SAAC7Z,GAAD,OAAO6C,EnBoKxB,CACH1B,KAAM,0BACNgP,MmBtKyDnQ,EAAEuO,OAAOxF,SAgBtDyP,WAAY,mBACZsB,UAAW,QAEbG,EAAe9M,EAAA9N,EAAA+N,cAAA,uBAAezO,GAAqBob,EAAStR,OAASsR,EAAS5J,OAAOoK,QAAQ,KAA9E,QAAkG,MAEvHpN,EAAA9N,EAAA+N,cAAC8G,GAAA,EAAD,CAAK7G,UAAU,UAAU+G,MAAM,OAAOD,SAAS,QAC3ChH,EAAA9N,EAAA+N,cAAC+M,GAAD,CACI9B,SArBU,SAACrY,GACvBA,EAAEyZ,iBjBwEmB,SAAC5W,EAAUlB,EAAUF,EAAOkB,EAAM0J,EAAOlN,GAClE,IACMkb,EAAY1X,EAAKgG,MAAMC,OAAOyD,EAAM5D,OAAS4D,EAAM8D,OAAOoK,QAAQ,IAAK,SACvEG,EAAYjZ,EAAM6F,QAAQ/D,QAC1B+W,EAAa3X,EAAKgG,MAAMC,MAAMyD,EAAM5D,OAAQ,SAElD9G,EAAS8C,QAAQ+V,UALAxc,6CAKoBqc,EAAWK,EAAWJ,GAAYzR,KAAK,CAACC,KAAM3J,IAC9E6J,GAAG,kBAAmB,SAACC,GACpBpG,EFwFD,CACH1B,KAAM,uBEvFL6H,GAAG,QAAS,SAAC2D,GACVzD,QAAQC,IAAIwD,GACZjJ,OAAOC,MAAM,6BiBnFjBgX,CAAc9X,EAAUlB,EAAUF,EAAOkB,EAAMqX,EAAW7a,IAoB9Cya,eAlBU,SAAC5Z,GAAD,OAAO6C,EnB2K1B,CACH1B,KAAM,4BACNsH,OmB7K6DzI,EAAEuO,OAAOxF,SAmB1D8Q,cAlBS,SAAC7Z,GAAD,OAAO6C,EnBiLzB,CACH1B,KAAM,2BACNgP,MmBnL2DnQ,EAAEuO,OAAOxF,SAmBxDyP,WAAY,oBACZsB,UAAW,SAEbI,EAAgB/M,EAAA9N,EAAA+N,cAAA,uBAAezO,GAAqBqb,EAAUvR,OAASuR,EAAU7J,OAAOoK,QAAQ,KAAhF,QAAoG,QAMhIK,oLAGE,OACIzN,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,2BACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,eAAf,aAGAF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,aACVgM,GAAUA,GAASpV,KAAK8J,OAASZ,EAAA9N,EAAA+N,cAAC0F,GAAD,CAAS3R,KAAK,iBAT7CsN,aAkCRC,mBAjBf,SAAyB1P,GACrB,IAAM+a,EAAWpH,GAAiB3T,GAC5Bgb,EAAYnH,GAAkB7T,GAEpC,MAAO,CACHG,QAASC,EAAgBJ,GACzB2C,SAAU7B,EAAiBd,GAC3B2D,KAAM7D,EAAaE,GACnByC,MAAOjC,EAAcR,GACrB+a,WACAC,YACAX,UAAWU,EAASc,SAAWb,EAAUa,OACzCZ,aAAcF,EAAStR,QAAUsR,EAAS5J,MAC1C+J,cAAeF,EAAUvR,QAAUuR,EAAU7J,QAItCzB,CAAyBkM,IC9ElCE,gMAGJ7W,KAAKmV,mBAAmBnV,KAAK8J,0FAGLA,oFACXpM,EAA6BoM,EAA7BpM,SAAUkB,EAAmBkL,EAAnBlL,SAAUpB,EAASsM,EAATtM,eACrBiK,GAAc7I,EAAUlB,EAAUF,0BAClC+K,GAAkB3J,EAAUlB,kIAIlC,OACIwL,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,WACXF,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,kBACXF,EAAA9N,EAAA+N,cAAC2N,GAAD,MACA5N,EAAA9N,EAAA+N,cAAC4N,GAAD,OAEJ7N,EAAA9N,EAAA+N,cAAC6N,GAAD,MACA9N,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,kBACXF,EAAA9N,EAAA+N,cAAC8N,GAAD,MACA/N,EAAA9N,EAAA+N,cAAC+N,GAAD,OAEJhO,EAAA9N,EAAA+N,cAACgO,GAAD,cAxBM3M,aAqCPC,mBAPf,SAAyB1P,GACrB,MAAO,CACH2C,SAAU7B,EAAiBd,GAC3ByC,MAAOjC,EAAcR,KAId0P,CAAyBoM,yBC9ClCO,GAAWC,KAAKC,cAETC,GAAW,SAAC3Y,GACrB,IAAMF,EAAO,IAAI2Y,KAAKD,IAAY,yBAElC,OADAxY,ErBNO,CACH1B,KAAM,cACNsa,WqBIgB9Y,IACbA,GAGE+Y,GAAW,eAAArZ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAnD,EAAAoD,KAAG,SAAAC,EAAOC,EAAME,GAAb,IAAA8Y,EAAAxc,EAAA,OAAAqD,EAAAnD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBoY,GAASO,SADQ,cAAA7Y,EAAAE,KAAA,EAEAN,EAAKO,IAAI2Y,cAFT,cAEjBF,EAFiB5Y,EAAA6B,KAGjBzF,EAAUwc,EAAS,GACzB9Y,EAAS3B,EAAkB/B,IAJJ4D,EAAAS,OAAA,SAKhBrE,GALgB,wBAAA4D,EAAAa,SAAAlB,MAAH,gBAAAmB,EAAAC,GAAA,OAAAzB,EAAA2B,MAAAC,KAAAC,YAAA,GCDlB4X,gMAIJ7X,KAAKmV,mBAAmBnV,KAAK8J,MAAMlL,6FAGXA,kFAClBF,EAAO6Y,GAAS3Y,0BAErBc,MAAM,iEAGiBhB,EAAKO,IAAI6Y,IAAIC,sBAA/BpZ,kBACsB8Y,GAAY/Y,EAAME,4CAE7Cc,MAAM,sEAGavB,GAAUO,EAAMC,EAAWC,kBAAzCxB,WAELsC,MAAM,gEAEoBtC,EAAMoD,QAAQsB,UAAU,GAAGpB,sBAAhDL,mBACcH,GAAUxB,EAAM2B,EAAczB,0BAEjDc,MAAM,gEAEgBqB,GAAarC,EAAMC,EAAWC,0BAEpDc,MAAM,sEAED6B,GAAoB7C,EAAMtB,EAAOwB,mIAIvC,OACCsK,EAAA9N,EAAA+N,cAAA,WACCD,EAAA9N,EAAA+N,cAAC6O,GAAD,MACChY,KAAK8J,MAAMmO,gBAAkB/O,EAAA9N,EAAA+N,cAAC+O,GAAD,MAAchP,EAAA9N,EAAA+N,cAAA,OAAKC,UAAU,oBAvC7CoB,aAoDHC,mBANf,SAAyB1P,GACxB,MAAO,CACNkd,gBAAiBjc,EAAwBjB,KAI5B0P,CAAyBoN,iCCgFxC,IAOeM,GAPK,IAAIC,KAAgB,CACpC1Z,KA7IJ,WAAkC,IAApB3D,EAAoBkF,UAAA8S,OAAA,QAAA5B,IAAAlR,UAAA,GAAAA,UAAA,GAAZ,GAAIoY,EAAQpY,UAAA8S,OAAA,EAAA9S,UAAA,QAAAkR,EAC9B,OAAQkH,EAAOnb,MACX,IAAK,cACD,OAAOmB,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmByc,WAAYa,EAAOb,aAC1C,IAAK,sBACD,OAAOnZ,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBG,QAASmd,EAAOnd,UACvC,IAAK,uBACG,OAAOmD,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBP,QAAS6d,EAAO7d,UAC3C,QACI,OAAOO,IAqIfyC,MAhHJ,WAAmC,IAApBzC,EAAoBkF,UAAA8S,OAAA,QAAA5B,IAAAlR,UAAA,GAAAA,UAAA,GAAZ,GAAIoY,EAAQpY,UAAA8S,OAAA,EAAA9S,UAAA,QAAAkR,EAC/B,OAAQkH,EAAOnb,MACX,IAAK,eACD,OAAOmB,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgT,QAAQ,EAAMuK,SAAUD,EAAO7a,MAAOC,KAAM4a,EAAO5a,OAC1E,IAAK,uBACG,OAAOY,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBP,QAAS6d,EAAO7d,UAC3C,QACI,OAAOO,IA0Gf2C,SAtGJ,WAAsC,IAC9B6a,EAAO5E,EADG5Y,EAAoBkF,UAAA8S,OAAA,QAAA5B,IAAAlR,UAAA,GAAAA,UAAA,GAAZ,GAAIoY,EAAQpY,UAAA8S,OAAA,EAAA9S,UAAA,QAAAkR,EAElC,OAAQkH,EAAOnb,MACX,IAAK,kBACD,OAAOmB,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgT,QAAQ,EAAMuK,SAAUD,EAAO3a,WACtD,IAAK,0BACD,OAAOW,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB6C,gBAAiB,CAACmQ,QAAQ,EAAM4F,KAAM0E,EAAOza,mBACpE,IAAK,gBACD,OAAOS,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB+C,OAAQ,CAACiQ,QAAQ,EAAM4F,KAAM0E,EAAOva,UAC3D,IAAK,gBACD,OAAOO,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBiD,OAAQ,CAAC+P,QAAQ,EAAM4F,KAAM0E,EAAOra,UAC3D,IAAK,mBACD,OAAOK,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBuV,iBAAiB,IACxC,IAAK,kBACD,OAAOjS,OAAAwM,GAAA,EAAAxM,CAAA,GACAtD,EADP,CAEIuV,iBAAiB,EACjB1S,gBAAgBS,OAAAwM,GAAA,EAAAxM,CAAA,GACTtD,EAAM6C,gBADE,CAEX+V,KAAI,GAAA5E,OAAA1Q,OAAAma,GAAA,EAAAna,CACGtD,EAAM6C,gBAAgB+V,MADzB,CAEA0E,EAAOjQ,YAIvB,IAAK,gBACD,OAAO/J,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB0U,cAAc,IACrC,IAAK,eAQD,OANA8I,EAAQxd,EAAMiD,OAAO2V,KAAK8E,UAAU,SAAArQ,GAAK,OAAIA,EAAMgF,MAAQiL,EAAOjQ,MAAMgF,MACxEuG,EAAO5Y,EAAMiD,OAAO2V,MAEL,IAAX4E,IACA5E,EAAI,GAAA5E,OAAA1Q,OAAAma,GAAA,EAAAna,CAAOtD,EAAMiD,OAAO2V,MAApB,CAA0B0E,EAAOjQ,SAElC/J,OAAAwM,GAAA,EAAAxM,CAAA,GACAtD,EADP,CAEI0U,cAAa,EACbzR,OAAOK,OAAAwM,GAAA,EAAAxM,CAAA,GACAtD,EAAMiD,OADP,CAEF2V,WAGZ,IAAK,gCACD,OAAOtV,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBuH,aAAc+V,EAAO7d,UAC5C,IAAK,gCACD,OAAO6D,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBmI,aAAcmV,EAAO7d,UAC5C,IAAK,mBACD,OAAO6D,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB0a,iBAAiB,IACxC,IAAK,kBACD,OAAOpX,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB0a,iBAAiB,IACxC,IAAK,+BACD,OAAOpX,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBwJ,mBAAoB8T,EAAO7T,SAClD,IAAK,gCACD,OAAOnG,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB6K,oBAAqByS,EAAO7T,SACnD,IAAK,+BACG,OAAOnG,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBsa,mBAAoBgD,EAAO7T,SACtD,IAAK,gCACD,OAAOnG,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBkM,oBAAqBoR,EAAO7T,SACnD,IAAK,2BACD,OAAOnG,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB+a,SAASzX,OAAAwM,GAAA,EAAAxM,CAAA,GAAMtD,EAAM+a,SAAb,CAAuBtR,OAAQ6T,EAAO7T,WACrE,IAAK,0BACD,OAAOnG,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB+a,SAASzX,OAAAwM,GAAA,EAAAxM,CAAA,GAAMtD,EAAM+a,SAAb,CAAuB5J,MAAOmM,EAAOnM,UACpE,IAAK,mBACD,OAAO7N,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmB+a,SAASzX,OAAAwM,GAAA,EAAAxM,CAAA,GAAMtD,EAAM+a,SAAb,CAAuBtR,OAAQ,KAAM0H,MAAO,KAAM0K,QAAQ,MACzF,IAAK,4BACD,OAAOvY,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgb,UAAU1X,OAAAwM,GAAA,EAAAxM,CAAA,GAAMtD,EAAMgb,UAAb,CAAwBvR,OAAQ6T,EAAO7T,WACvE,IAAK,2BACD,OAAOnG,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgb,UAAU1X,OAAAwM,GAAA,EAAAxM,CAAA,GAAMtD,EAAMgb,UAAb,CAAwB7J,MAAOmM,EAAOnM,UACtE,IAAK,oBACD,OAAO7N,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgb,UAAU1X,OAAAwM,GAAA,EAAAxM,CAAA,GAAMtD,EAAMgb,UAAb,CAAwBvR,OAAQ,KAAM0H,MAAO,KAAM0K,QAAQ,MAC3F,IAAK,aAOD,OALA2B,EAAQxd,EAAM+C,OAAO6V,KAAK8E,UAAU,SAAArQ,GAAK,OAAIA,EAAMgF,MAAQiL,EAAOjQ,MAAMgF,MACxEuG,EAAO5Y,EAAM+C,OAAO6V,MACL,IAAX4E,IACA5E,EAAI,GAAA5E,OAAA1Q,OAAAma,GAAA,EAAAna,CAAOtD,EAAM+C,OAAO6V,MAApB,CAA0B0E,EAAOjQ,SAElC/J,OAAAwM,GAAA,EAAAxM,CAAA,GACAtD,EADP,CAEI+C,OAAOO,OAAAwM,GAAA,EAAAxM,CAAA,GACAtD,EAAM+C,OADP,CAEF6V,SAEJmC,SAASzX,OAAAwM,GAAA,EAAAxM,CAAA,GACFtD,EAAM+a,SADL,CAEJc,QAAO,IAEXb,UAAU1X,OAAAwM,GAAA,EAAAxM,CAAA,GACHtD,EAAMgb,UADJ,CAELa,QAAO,MAGnB,QACI,OAAO7b,IASfqC,MAnIJ,WAAmC,IAApBrC,EAAoBkF,UAAA8S,OAAA,QAAA5B,IAAAlR,UAAA,GAAAA,UAAA,GAAZ,GAAIoY,EAAQpY,UAAA8S,OAAA,EAAA9S,UAAA,QAAAkR,EAC/B,OAAOkH,EAAOnb,MACV,IAAK,eACD,OAAOmB,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBud,SAAUD,EAAOjb,QACxC,IAAK,2BACD,OAAOiB,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgT,QAAQ,IAC/B,IAAK,0BACD,OAAO1P,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBgT,QAAQ,IAC/B,IAAK,0BACD,OAAO1P,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBJ,OAAQ0d,EAAO/a,iBACtC,IAAK,qBACD,OAAOe,OAAAwM,GAAA,EAAAxM,CAAA,GAAKtD,EAAZ,CAAmBX,OAAQie,EAAOjb,QACtC,QACI,OAAOrC,MCxBb2d,GAAmBC,0BACnBC,GAAa,GAGbC,GAAmBpZ,OAAOqZ,sCAAwCC,KCIxE,IDFuCC,GCEnBC,QACW,cAA7BxZ,OAAOyZ,SAASC,UAEe,UAA7B1Z,OAAOyZ,SAASC,UAEhB1Z,OAAOyZ,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACLpQ,EAAA9N,EAAA+N,cAACoQ,EAAA,EAAD,CAAUC,MFEHC,aACHtB,GACAa,GACAH,GAAiBa,KAAe3Z,WAAf,EAAmB6Y,GAAnB7J,OAAA,CAA+B2J,SEJhDxP,EAAA9N,EAAA+N,cAACwQ,GAAD,OAEJC,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c061c3a1.chunk.js","sourcesContent":["export const ETHER_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const GREEN = \"success\";\nexport const RED = \"danger\";\nexport const DECIMALS = (10**18);\n\n//calculate without importing web3\nexport const tokens = (wei) => {\n    if(wei) {\n        return (wei / DECIMALS);\n    }\n}\n\nexport const ether = tokens;\n\nexport const formatBalance = (balance) => {\n    const precision = 100; //2 dm\n    balance = ether(balance);\n    balance = Math.round(balance * precision) / precision;\n    return balance;\n}\n\nexport const removeTrailingZeros = (number) => {\n    number = number.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/,'$1');\n    return number;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\nconst web3 = state => get(state, 'web3.connection');\nexport const web3Selector = createSelector(web3, w => w);\n\nexport const account = state => get(state, 'web3.account');\nexport const accountSelector = createSelector(account, a => a);\n\nconst etherBalance = state => get(state, 'web3.balance');\nexport const etherBalanceSelector = createSelector(etherBalance, (balance) => {\n    return formatBalance(balance);\n});","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {formatBalance} from '../../helpers';\n\n\nexport const tokenLoaded = state => get(state, 'token.loaded', false);\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl);\n\nconst token = state => get(state, 'token.contract');\nexport const tokenSelector = createSelector(token, t => t);\n\nconst tokenName = state => get(state, 'token.name');\nexport const tokenNameSelector = createSelector(tokenName, tn => tn);\n\nexport const exchangeLoaded = state => get(state, 'exchange.loaded', false);\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el);\n\nexport const exchange = state => get(state, 'exchange.contract', false);\nexport const exchangeSelector = createSelector(exchange, e => e);\n\nexport const contractsLoadedSelector = createSelector(\n    tokenLoaded, \n    exchangeLoaded, \n    (tl, el) => (tl && el)\n);\n\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', false);\nexport const balancesLoadingSelector = createSelector(balancesLoading, bl => bl);\n\nconst tokenBalance = state => get(state, 'token.balance');\nexport const tokenBalanceSelector = createSelector(tokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance');\nexport const exchangeEtherBalanceSelector = createSelector(exchangeEtherBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance');\nexport const exchangeTokenBalanceSelector = createSelector(exchangeTokenBalance, (balance) => {\n    return formatBalance(balance);\n});\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', 0);\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, eda => eda);\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', 0);\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, ewa => ewa);\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', 0);\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, tda => tda);\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', 0);\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, twa => twa);\n\nconst pairsLoaded = state => get(state, 'pairs.loaded', false);\nexport const pairsLoadedSelector = createSelector(pairsLoaded, pl => pl);\n\nconst pairsTokens = state => get(state, 'pairs.tokens', []);\nexport const pairsTokensSelector = createSelector(pairsTokens, pls => pls);","export function web3Loaded(connection){\n    return {\n        type: 'WEB3_LOADED',\n        connection\n    }\n}\n\nexport function web3AccountLoaded(account){\n    return {\n        type: 'WEB3_ACCOUNT_LOADED',\n        account\n    }\n}\n\nexport function pairsLoaded(pairs){\n    return {\n        type: 'PAIRS_LOADED',\n        pairs\n    }\n}\n\nexport function availableTokensLoading(){\n    return {\n        type: 'AVAILABLE_TOKENS_LOADING'\n    }\n}\n\nexport function availableTokensLoaded(){\n    return {\n        type: 'AVAILABLE_TOKENS_LOADED'\n    }\n}\n\nexport function numberOfTokensLoaded(numberOfTokens){\n    return {\n        type: 'NUMBER_OF_TOKENS_LOADED',\n        numberOfTokens\n    }\n}\n\nexport function tokenPairsLoaded(pairs){\n    return {\n        type: 'TOKEN_PAIRS_LOADED',\n        pairs\n    }\n}\n\nexport function tokenLoaded(token, name){\n    return {\n        type: 'TOKEN_LOADED',\n        token,\n        name\n    }\n}\n\nexport function exchangeLoaded(exchange){\n    return {\n        type: 'EXCHANGE_LOADED',\n        exchange\n    }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders){\n    return {\n        type: 'CANCELLED_ORDERS_LOADED',\n        cancelledOrders\n    }\n}\n\nexport function ordersLoaded(orders){\n    return {\n        type: 'ORDERS_LOADED',\n        orders\n    }\n}\n\nexport function tradesLoaded(trades){\n    return {\n        type: 'TRADES_LOADED',\n        trades\n    }\n}\n\nexport function orderCancelling(){\n    return {\n        type: 'ORDER_CANCELLING',\n    }\n}\n\nexport function orderCancelled(order){\n    return {\n        type: 'ORDER_CANCELLED',\n        order\n    }\n}\n\nexport function orderFilling(){\n    return {\n        type: 'ORDER_FILLING'\n    }\n}\n\nexport function orderFilled(order){\n    return {\n        type: 'ORDER_FILLED',\n        order\n    }\n}\n\nexport function etherBalanceLoaded(balance){\n    return {\n        type: 'ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function tokenBalanceLoaded(balance){\n    return {\n        type: 'TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeEtherBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function exchangeTokenBalanceLoaded(balance){\n    return {\n        type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function balancesLoaded(){\n    return {\n        type: 'BALANCES_LOADED'\n    }\n}\n\nexport function balancesLoading(){\n    return {\n        type: 'BALANCES_LOADING'\n    }\n}\n\nexport function etherDepositAmountChanged(amount){\n    return {\n        type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function etherWithdrawAmountChanged(amount){\n    return {\n        type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenDepositAmountChanged(amount){\n    return {\n        type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function tokenWithdrawAmountChanged(amount){\n    return {\n        type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderAmountChanged(amount) {\n    return {\n        type: 'BUY_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function buyOrderPriceChanged(price) {\n    return {\n        type: 'BUY_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function buyOrderMaking(){\n    return {\n        type: 'BUY_ORDER_MAKING'\n    }\n}\n\nexport function sellOrderAmountChanged(amount) {\n    return {\n        type: 'SELL_ORDER_AMOUNT_CHANGED',\n        amount\n    }\n}\n\nexport function sellOrderPriceChanged(price) {\n    return {\n        type: 'SELL_ORDER_PRICE_CHANGED',\n        price\n    }\n}\n\nexport function sellOrderMaking(){\n    return {\n        type: 'SELL_ORDER_MAKING'\n    }\n}\n\nexport function orderMade(order){\n    return {\n        type: 'ORDER_MADE',\n        order\n    }\n}","import {tokenLoaded, \n    exchangeLoaded, \n    tokenBalanceLoaded, \n    exchangeEtherBalanceLoaded, \n    exchangeTokenBalanceLoaded, \n    balancesLoaded, \n    balancesLoading,\n    pairsLoaded,\n    availableTokensLoading,\n    availableTokensLoaded,\n    numberOfTokensLoaded,\n    tokenPairsLoaded\n} from '../actions';\nimport ERC20Detailed from '../../abis/ERC20Detailed.json';\nimport Exchange from '../../abis/Exchange.json';\nimport Pairs from '../../abis/Pairs.json';\nimport {ETHER_ADDRESS} from '../../helpers.js';\nimport {etherBalanceLoaded} from '../actions';\n\nexport const loadPairs = async (web3, networkId, dispatch) => {\n    try{\n        const pairs = web3.eth.Contract(Pairs.abi, Pairs.networks[networkId].address);\n        dispatch(pairsLoaded(pairs));\n        return pairs;\n    }\n    catch (err){\n        window.alert(\"Pairs not deployed to the current network\");\n    }\n    return null;\n}\n\nexport const loadToken = async (web3, tokenAddress, dispatch) => {\n    try{\n        const token = web3.eth.Contract(ERC20Detailed.abi, tokenAddress);\n        const name = await token.methods.symbol().call();\n        dispatch(tokenLoaded(token, name));\n        return token;\n    }\n    catch (err){\n        window.alert(\"Token not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n    try{\n        const exchange = web3.eth.Contract(Exchange.abi, Exchange.networks[networkId].address);\n        dispatch(exchangeLoaded(exchange));\n        return exchange;\n    }\n    catch (err){\n        window.alert(\"Exchange not deployed to current network\");\n    }\n    return null;\n}\n\nexport const loadAvailableTokens = async (web3, pairs, dispatch) => {\n    dispatch(availableTokensLoading());\n\n    const numberOfTokens = await pairs.methods.size().call();\n    dispatch(numberOfTokensLoaded(numberOfTokens));\n\n    let tokenPairs = [];\n    for (let i = 0; i < numberOfTokens; i++) {\n        let tokenAddress = await pairs.methods.addresses(i).call();\n        let token = web3.eth.Contract(ERC20Detailed.abi, tokenAddress);\n        let name = await token.methods.symbol().call();\n\n        tokenPairs.push([tokenAddress, name]);\n    }\n    dispatch(tokenPairsLoaded(tokenPairs));\n\n    dispatch(availableTokensLoaded());\n}\n\nexport const loadEtherBalances = async (web3, exchange, account, dispatch) => {\n    dispatch(balancesLoading());\n\n    //ether balance\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    //balance of account on the smart contract\n    const exchangeEtherBalance = await exchange.methods.balanceOf(ETHER_ADDRESS, account).call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    dispatch(balancesLoaded());\n}\n\nexport const loadTokenBalances = async (web3, exchange, token, account, dispatch) => {\n    dispatch(balancesLoading());\n\n    //token balance\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n\n    //token balance of account on the smart contract\n    const exchangeTokenBalance = await exchange.methods.balanceOf(token.options.address, account).call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    dispatch(balancesLoaded());\n}\n\nexport const loadBalances = async (web3, exchange, token, account, dispatch) => {\n    loadEtherBalances(web3, exchange, account, dispatch);\n    loadTokenBalances(web3, exchange, token, account, dispatch);\n}\n\nexport const depositEther = async (web3, exchange, account, etherDepositAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherDepositAmount, 'ether');\n    exchange.methods.depositEther.send({from: account, value: amount})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('receipt', (hash) => {\n            console.log('receipt');\n            loadEtherBalances(web3, exchange, account, dispatch);\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error depositing\");\n        });\n}\n\nexport const withdrawEther = async (web3, exchange, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n    exchange.methods.withdrawEther(amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('receipt', (hash) => {\n            console.log('receipt');\n            loadEtherBalances(web3, exchange, account, dispatch);\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}\n\nexport const depositToken = async (web3, exchange, token, account, etherWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(etherWithdrawAmount, 'ether');\n    console.log('starting');\n    token.methods.approve(exchange.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            console.log('approved transaction');\n            exchange.methods.depositToken(token.options.address, amount).send({from: account})\n                .on('transactionHash', (hash) => {\n                    console.log('transaction hash');\n                    dispatch(balancesLoading());\n                })\n                .on('receipt', (hash) => {\n                    console.log('receipt');\n                    loadTokenBalances(web3, exchange, token, account, dispatch);\n                })\n                .on('error', (err) => {\n                    console.log('erroring deposit');\n                    console.log(err);\n                    window.alert(\"error depositing token\");\n                });\n        });\n}\n\nexport const withdrawToken = async (web3, exchange, token, account, tokenWithdrawAmount, dispatch) => {\n    const amount = web3.utils.toWei(tokenWithdrawAmount, 'ether');\n    exchange.methods.withdrawToken(token.options.address, amount).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(balancesLoading());\n        })\n        .on('receipt', (hash) => {\n            console.log('receipt');\n            loadTokenBalances(web3, exchange, token, account, dispatch);\n        })\n        .on('error', (err) => {\n            console.log(err);\n            window.alert(\"error withdrawing\");\n        });\n}","import {\n    cancelledOrdersLoaded,\n    ordersLoaded,\n    tradesLoaded,\n    orderCancelling,\n    orderFilling,\n    buyOrderMaking\n} from \"../actions\";\nimport {ETHER_ADDRESS} from '../../helpers';\nimport { loadBalances } from \"./contracts\";\n\nexport const loadAllOrders = async (dispatch, exchange, token) => {\n    try{\n        // Cancelled\n        const cancelStream = await exchange.getPastEvents(\"Cancel\", {fromBlock: 0, toBlock: 'latest'});\n        let cancelledOrders = cancelStream.map((event) => event.returnValues);\n        cancelledOrders = cancelledOrders.filter(function(order) {\n            if ((order._tokenGive === ETHER_ADDRESS || order._tokenGive === token.address)\n                && (order._tokenGet === ETHER_ADDRESS || order._tokenGet === token.address)){\n                return true\n            }\n            return false;\n        });\n        dispatch(cancelledOrdersLoaded(cancelledOrders));\n        // Trade events (filles)\n        const tradeStream = await exchange.getPastEvents(\"Trade\", {fromBlock: 0, toBlock: 'latest'});\n        let trades = tradeStream.map((event) => event.returnValues);\n        trades = trades.filter(function(order) {\n            if ((order._tokenGive === ETHER_ADDRESS || order._tokenGive === token.address)\n                && (order._tokenGet === ETHER_ADDRESS || order._tokenGet === token.address)){\n                return true\n            }\n            return false;\n        });\n        dispatch(tradesLoaded(trades));\n        // Open orders\n        const orderStream = await exchange.getPastEvents(\"Order\", {fromBlock: 0, toBlock: 'latest'});\n        let orders = orderStream.map((event) => event.returnValues);\n        orders = orders.filter(function(order) {\n            if ((order._tokenGive === ETHER_ADDRESS || order._tokenGive === token.address)\n                && (order._tokenGet === ETHER_ADDRESS || order._tokenGet === token.address)){\n                return true\n            }\n            return false;\n        });\n        dispatch(ordersLoaded(orders));\n\n    }\n    catch(err){\n        console.log(err);\n    }\n}\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n    exchange.methods.cancelOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderCancelling());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const fillOrder = (dispatch, exchange, order, account, web3, token) => {\n    exchange.methods.fillOrder(order._id).send({from: account})\n        //only dispatch the redux action once the hash has come back from the blockchain\n        .on('transactionHash', (hash) => {\n            dispatch(orderFilling());\n        })\n        .on('receipt', (hash) => {\n            loadBalances(web3, exchange, token, account, dispatch);\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert(\"There was an error\");\n        })\n}\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = token.options.address;\n    const amountGet = web3.utils.toWei(order.amount, 'ether');\n    const tokenGive = ETHER_ADDRESS;\n    const amountGive = web3.utils.toWei((order.amount * order.price).toFixed(18), 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n    const tokenGet = ETHER_ADDRESS;\n    const amountGet = web3.utils.toWei((order.amount * order.price).toFixed(18), 'ether');\n    const tokenGive = token.options.address;\n    const amountGive = web3.utils.toWei(order.amount, 'ether');\n\n    exchange.methods.makeOrder(tokenGet, amountGet, tokenGive, amountGive).send({from: account})\n        .on('transactionHash', (hash) => {\n            dispatch(buyOrderMaking());\n        })\n        .on('error', (error) => {\n            console.log(error);\n            window.alert('Error with making order');\n        });\n}","import {orderCancelled, orderFilled, balancesLoaded, orderMade} from \"../actions\";\n\n//Subscriptions\nexport const subscribeToEvents = async (dispatch, exchange) => {\n    exchange.events.Cancel({}, (error, event) => {\n        dispatch(orderCancelled(event.returnValues))\n    });\n\n    exchange.events.Trade({}, (error, event) => {\n        dispatch(orderFilled(event.returnValues));\n    });\n\n    exchange.events.Deposit({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Withdraw({}, (error, event) => {\n        dispatch(balancesLoaded());\n    });\n\n    exchange.events.Order({}, (error, event) => {\n        dispatch(orderMade(event.returnValues));\n    })\n}","import React, {Component} from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {accountSelector, web3Selector} from '../store/selectors/web3';\nimport {tokenNameSelector, pairsTokensSelector, exchangeSelector} from '../store/selectors/contracts';\nimport { loadToken, loadBalances } from '../store/interactions/contracts';\nimport { loadAllOrders } from '../store/interactions/orders';\nimport { subscribeToEvents } from '../store/interactions/subscriptions';\n\nconst selectPairToken = async (tokenAddress, web3, exchange, account, dispatch) => {\n    const token = await loadToken(web3, tokenAddress, dispatch);\n    if (!token) {\n        alert('Token not loaded, please load a network with token');\n    }\n    await loadAllOrders(dispatch, exchange, token);\n    await subscribeToEvents(dispatch, exchange);\n    await loadBalances(web3, exchange, token, account, dispatch);\n}\n\nconst renderMenuItem = (token, props) => {\n    const {web3, exchange, account, dispatch} = props;\n    return (\n        <Dropdown.Item key={token[0]} onClick={(e) => selectPairToken(token[0], web3, exchange, account, dispatch)} >{token[1]}/ETH</Dropdown.Item>\n    )\n}\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <a className=\"navbar-brand\" href=\"/#\">Ethereum Dex - (Kovan Network)</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                    <Dropdown>\n                        <Dropdown.Toggle size=\"sm\" id=\"dropdown-basic\">\n                            {this.props.tokenName}/ETH\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {this.props.pairsTokens.map((token) => renderMenuItem(token, this.props))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a \n                            className=\"nav-link small\"\n                            href={'https://etherscan.io/address/' + this.props.account}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.props.account}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state),\n        pairsTokens: pairsTokensSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import {ether, tokens, GREEN, RED, ETHER_ADDRESS} from '../../../helpers';\nimport moment from 'moment';\n\n//My Transactions\nexport const decorateMyFilledOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyFilledOrder(order, account)\n        return(order)\n        })\n    )\n}\n//decorate orders depending on if they are buy or sell\nconst decorateMyFilledOrder = (order, account) => {\n    const myOrder = order._user === account\n\n    let orderType\n    if(myOrder) {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n    } else {\n        orderType = order._tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n    }\n\n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n        orderSign: (orderType === 'buy' ? '+' : '-')\n    })\n}\nexport const decorateMyOpenOrders = (orders, account) => {\n    return(\n        orders.map((order) => {\n        order = decorateOrder(order)\n        order = decorateMyOpenOrder(order, account)\n        return(order)\n        })\n    )\n}\nconst decorateMyOpenOrder = (order, account) => {\n    let orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  \n    return({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n    })\n}\n\n//Order Book\nexport const decorateOrderBookOrders = (orders) => {\n    return(\n        orders.map((order) => {\n            order = decorateOrder(order);\n            order = decorateOrderBookOrder(order);\n            return order;\n        })\n    )\n}\nconst decorateOrderBookOrder = (order) => {\n    const orderType = order._tokenGive === ETHER_ADDRESS ? 'buy' : 'sell';\n    return ({\n        ...order,\n        orderType,\n        orderTypeClass: (orderType === 'buy') ? GREEN : RED,\n        orderFillAction: (orderType === 'buy') ? 'sell' : 'buy'\n    })\n}\n\n\n//Filled Orders\nexport const decorateFilledOrders = (orders) => {\n    let previousOrder = orders[0];\n    return(orders.map((order) => {\n        order = decorateOrder(order);\n        order = decorateFilledOrder(order, previousOrder);\n        previousOrder = order;\n        return order;\n    }));\n}\n//decorate objects to be readable from events\nconst decorateOrder = (order) => {\n    let etherAmount, tokenAmount;\n    if(order._tokenGive === \"0x0000000000000000000000000000000000000000\") {\n        etherAmount = order._amountGive;\n        tokenAmount = order._amountGet;\n    }\n    else{\n        etherAmount = order._amountGet;\n        tokenAmount = order._amountGive;\n    }\n\n    const precision = 100000;\n    let tokenPrice = (etherAmount / tokenAmount);\n    tokenPrice = Math.round(tokenPrice * precision) / precision;\n\n    return({\n        ...order,\n        etherAmount: ether(etherAmount),\n        tokenAmount: tokens(tokenAmount),\n        tokenPrice,\n        formattedTimestamp: moment.unix(order._timestamp).format('h:mm:ss a M/D')\n    });\n}\n//Specific decorator for filled orders only\n//If higher than previous = green, lower than previous = red\nconst decorateFilledOrder = (order, previousOrder) => {\n    return ({\n        ...order,\n        tokenPriceClass: tokenPriceClass(order.tokenPrice, previousOrder)\n    });\n}\n\nconst tokenPriceClass = (price, previousOrder) => {\n    return (previousOrder.tokenPrice > price) ? RED : GREEN;\n}","import {get, reject, groupBy} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {account} from './web3';\nimport {decorateFilledOrders, \n    decorateOrderBookOrders, \n    decorateMyFilledOrders,\n    decorateMyOpenOrders\n} from './decorators/orders';\n\nexport const cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false);\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, col => col);\n\nexport const cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', []);\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, co => co);\n\nexport const ordersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const ordersLoadedSelector = createSelector(ordersLoaded, ol => ol);\n\nexport const orders = state => get(state, 'exchange.orders.data', []);\nexport const ordersSelector = createSelector(orders, o => o);\n\nexport const filledOrdersLoaded = state => get(state, 'exchange.orders.loaded', false);\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, ol => ol);\n\nexport const filledOrders = state => get(state, 'exchange.trades.data', []);    \nexport const filledOrdersSelector = createSelector(\n    filledOrders, \n    (orders) => {\n        //sort ascending for price comparison\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        //sort descending for display\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    } \n);\n\n//Return order that have not been traded (filled) or cancelled\nconst openOrders = state => {\n    const all = orders(state);\n    const cancelled = cancelledOrders(state);\n    const filled = filledOrders(state);\n\n    //reject the orders if they appear in filled or cancelled\n    const openOrders = reject(all, (order) => {\n        const orderFilled = filled.some((o) => o._id === order._id);\n        const orderCancelled = cancelled.some((o) => o._id === order._id);\n        return (orderFilled || orderCancelled);\n    });\n    return openOrders;\n}\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && ordersLoaded(state);\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, obl => obl);\nexport const orderBookSelector = createSelector(\n    openOrders,\n    (orders) => {\n        //decorate\n        orders = decorateOrderBookOrders(orders);\n        //group by type\n        orders = groupBy(orders, 'orderType');\n        let buyOrders = get(orders, 'buy', []);\n        let sellOrders = get(orders, 'sell', []);\n        orders = {\n            ...orders,\n            buyOrders: buyOrders.sort((a, b) => b.tokenPrice - a.tokenPrice),\n            sellOrders: sellOrders.sort((a, b) => b.tokenPrice - a.tokenPrice)\n        }\n        return orders;\n    }\n)\n\n//If all trades loaded, the my trades are definitely loaded\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const myFilledOrdersSelector = createSelector(\n    account,\n    filledOrders,\n    (account, orders) => {\n        // Find our orders\n        orders = orders.filter((o) => o._user === account || o._userFill === account);\n        // Sort by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        // Decorate orders - add display attributes\n        orders = decorateMyFilledOrders(orders, account);\n        return orders;\n    }\n)\n\n//If the order book is loaded, my open orders are definitely loaded\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded);\nexport const myOpenOrdersSelector = createSelector(\n    account,\n    openOrders,\n    (account, orders) => {\n        // Filter orders created by current account\n        orders = orders.filter((o) => o._user === account);\n        // Decorate orders - add display attributes\n        orders = decorateMyOpenOrders(orders);\n        // Sort orders by date descending\n        orders = orders.sort((a,b) => b._timestamp - a._timestamp);\n        return orders;\n    }\n)\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false);\nexport const orderCancellingSelector = createSelector(orderCancelling, oc => oc);\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false);\nexport const orderFillingSelector = createSelector(orderFilling, of => of);\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {});\nexport const buyOrderSelector = createSelector(buyOrder, bo => bo);\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {});\nexport const sellOrderSelector = createSelector(sellOrder, bo => bo);","import React from 'react';\n\nexport default function({type}){\n    if(type === 'table') {\n        return (<tbody className=\"spinner-border text-light text-center\"></tbody>);\n    }\n    return (<div className=\"spinner-border text-light text-center\"></div>);\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {filledOrdersSelector, filledOrdersLoadedSelector} from '../store/selectors/orders';\nimport Spinner from './Spinner';\nimport { tokenNameSelector } from '../store/selectors/contracts';\n\nconst showFilledOrders = (filledOrders) => {\n    return (\n        <tbody>\n            {filledOrders.map((order) => {\n                return (\n                    <tr className={`trade-${order._id}`} key={order._id}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td>{order.tokenAmount}</td>\n                        <td className={`text-${order.tokenPriceClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass Trades extends Component {\n\n    render() {\n        const {tokenName} = this.props;\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Trades\n                    </div>\n                    <div className=\"card-body\">\n                        <table className=\"table table-dark table-sm small\">\n                            <thead>\n                                <tr>\n                                    <th>Time</th>\n                                    <th>{tokenName}</th>\n                                    <th>{tokenName}/Eth</th>\n                                </tr>\n                            </thead>\n                            { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders) : <Spinner type=\"table\" />}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        filledOrdersLoaded: filledOrdersLoadedSelector(state),\n        filledOrders: filledOrdersSelector(state),\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(Trades);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {orderBookLoadedSelector, orderBookSelector, orderFillingSelector} from '../store/selectors/orders';\nimport {exchangeSelector, tokenNameSelector, tokenSelector} from '../store/selectors/contracts';\nimport {accountSelector, web3Selector} from '../store/selectors/web3';\n\nimport Spinner from './Spinner';\nimport { fillOrder } from '../store/interactions/orders';\n\nconst renderOrder = (order, props) => {\n    const { dispatch, exchange, account, web3, token} = props;\n    return (\n        <OverlayTrigger key={order._id} placement='auto' \n            overlay={\n                <Tooltip id={order._id}>\n                    {`Click here to ${order.orderFillAction}`}\n                </Tooltip>\n            }\n        >\n            <tr key={order._id} className=\"order-book-order\" onClick={(e) => fillOrder(dispatch, exchange, order, account, web3, token)}>\n                <td>{order.tokenAmount}</td>\n                <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                <td>{order.etherAmount}</td>\n            </tr>\n        </OverlayTrigger>\n    )\n}\n\nconst showOrderBook = (props) => {\n    //fetch key from props using ES6\n    const {orderBook, tokenName} = props;\n    return (\n        <tbody>\n            {orderBook.sellOrders.map((order) => renderOrder(order, props))}\n            <tr>\n                <th>{tokenName}</th>\n                <th>{tokenName}/ETH</th>\n                <th>ETH</th>\n            </tr>\n            {orderBook.buyOrders.map((order) => renderOrder(order, props))}\n        </tbody>\n    );\n}\n\nclass OrderBook extends Component {\n    render() {\n        return (\n            <div className=\"vertical\">\n                <div className=\"card bg-dark text-white\">\n                    <div className=\"card-header\">\n                        Order Book\n                    </div>\n                    <div className=\"card-body order-book\">\n                        <table className=\"table table-dark table-sm small\">\n                            {this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type=\"table\"/>}\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    const orderBookLoaded = orderBookLoadedSelector(state);\n    const orderFilling = orderFillingSelector(state);\n    return {\n        orderBook: orderBookSelector(state),\n        showOrderBook: orderBookLoaded && !orderFilling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(OrderBook);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {myFilledOrdersSelector,\n    myFilledOrdersLoadedSelector,\n    myOpenOrdersLoadedSelector,\n    myOpenOrdersSelector,\n    orderCancellingSelector\n} from '../store/selectors/orders';\nimport {exchangeSelector, tokenNameSelector} from '../store/selectors/contracts';\nimport {accountSelector} from '../store/selectors/web3';\nimport {cancelOrder} from '../store/interactions/orders';\n\nconst showMyFilledOrders = (myFilledOrders) => {\n    return (\n        <tbody>\n            {myFilledOrders.map((order) => {\n                return (\n                    <tr key={`filled-${order._id}`}>\n                        <td className=\"text-muted\">{order.formattedTimestamp}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nconst showMyOpenOrders = (props) => {\n    const {myOpenOrders, dispatch, exchange, account} = props\n    return (\n        <tbody>\n            {myOpenOrders.map((order) => {\n                return (\n                    <tr key={`open-${order._id}`}>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n                        <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n                        <td \n                            className=\"text-muted cancel-order\"\n                            onClick={(e) => {\n                                cancelOrder(dispatch, exchange, order, account);\n                            }}\n                        >x</td>\n                    </tr>\n                )\n            })}\n        </tbody>\n    );\n}\n\nclass MyTransactions extends Component {\n    render() {\n        const {tokenName} = this.props;\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    My Transactions\n                </div>\n                <div className=\"card-body\">\n                    <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n                        <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Time</th>\n                                        <th>{tokenName}</th>\n                                        <th>{tokenName}/ETH</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyFilledOrders ? showMyFilledOrders(this.props.myFilledOrders) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"orders\" title=\"Orders\" className=\"bg-dark\">\n                            <table className=\"table table-dark table-sm small\">\n                                <thead>\n                                    <tr>\n                                        <th>Amount</th>\n                                        <th>{tokenName}/ETH</th>\n                                        <th>Cancel</th>\n                                    </tr>\n                                </thead>\n                                {this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n                            </table>\n                        </Tab>\n                    </Tabs>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const openOrdersLoaded = myOpenOrdersLoadedSelector(state);\n    const orderCancelling = orderCancellingSelector(state);\n\n    return {\n        myFilledOrders: myFilledOrdersSelector(state),\n        showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n        myOpenOrders: myOpenOrdersSelector(state),\n        showMyOpenOrders: openOrdersLoaded && !orderCancelling,\n        exchange: exchangeSelector(state),\n        account: accountSelector(state),\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(MyTransactions);","export const chartOptions = {\n    chart: {\n      animations: { enabled: false },\n      toolbar: { show: false },\n      width: '100px'\n    },\n    tooltip: {\n      enabled: true,\n      theme: false,\n      style: {\n        fontSize: '12px',\n        fontFamily: undefined\n      },\n      x: {\n          show: false,\n          format: 'dd MMM',\n          formatter: undefined,\n      },\n      y: {\n        show: true,\n        title: 'price'\n      },\n      marker: {\n        show: false,\n      },\n      items: {\n         display: 'flex',\n      },\n      fixed: {\n          enabled: false,\n          position: 'topRight',\n          offsetX: 0,\n          offsetY: 0,\n      },\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        show: true,\n        style: {\n            colors: '#fff',\n            fontSize: '8px',\n            cssClass: 'apexcharts-xaxis-label',\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        show: true,\n        minWidth: 0,\n        maxWidth: 160,\n        style: {\n          color: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-yaxis-label',\n        },\n        offsetX: 0,\n        offsetY: 0,\n        rotate: 0,\n      }\n    }\n  }\n  \n  export const dummyData = [\n    {\n      data: [\n        {\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        },\n        {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        },\n        {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        },\n        {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        },\n        {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        },\n        {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        },\n        {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        },\n        {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        },\n        {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        },\n        {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        },\n        {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        },\n        {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        },\n        {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        },\n        {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        },\n        {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        },\n        {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        },\n        {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        },\n        {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        },\n        {\n          x: new Date(1538811000000),\n          y: [6623.48, 6627, 6618.38, 6620.35]\n        },\n        {\n          x: new Date(1538812800000),\n          y: [6619.43, 6620.35, 6610.05, 6615.53]\n        },\n        {\n          x: new Date(1538814600000),\n          y: [6615.53, 6617.93, 6610, 6615.19]\n        },\n        {\n          x: new Date(1538816400000),\n          y: [6615.19, 6621.6, 6608.2, 6620]\n        },\n        {\n          x: new Date(1538818200000),\n          y: [6619.54, 6625.17, 6614.15, 6620]\n        },\n        {\n          x: new Date(1538820000000),\n          y: [6620.33, 6634.15, 6617.24, 6624.61]\n        },\n        {\n          x: new Date(1538821800000),\n          y: [6625.95, 6626, 6611.66, 6617.58]\n        },\n        {\n          x: new Date(1538823600000),\n          y: [6619, 6625.97, 6595.27, 6598.86]\n        },\n        {\n          x: new Date(1538825400000),\n          y: [6598.86, 6598.88, 6570, 6587.16]\n        },\n        {\n          x: new Date(1538827200000),\n          y: [6588.86, 6600, 6580, 6593.4]\n        },\n        {\n          x: new Date(1538829000000),\n          y: [6593.99, 6598.89, 6585, 6587.81]\n        },\n        {\n          x: new Date(1538830800000),\n          y: [6587.81, 6592.73, 6567.14, 6578]\n        },\n        {\n          x: new Date(1538832600000),\n          y: [6578.35, 6581.72, 6567.39, 6579]\n        },\n        {\n          x: new Date(1538834400000),\n          y: [6579.38, 6580.92, 6566.77, 6575.96]\n        },\n        {\n          x: new Date(1538836200000),\n          y: [6575.96, 6589, 6571.77, 6588.92]\n        },\n        {\n          x: new Date(1538838000000),\n          y: [6588.92, 6594, 6577.55, 6589.22]\n        },\n        {\n          x: new Date(1538839800000),\n          y: [6589.3, 6598.89, 6589.1, 6596.08]\n        },\n        {\n          x: new Date(1538841600000),\n          y: [6597.5, 6600, 6588.39, 6596.25]\n        },\n        {\n          x: new Date(1538843400000),\n          y: [6598.03, 6600, 6588.73, 6595.97]\n        },\n        {\n          x: new Date(1538845200000),\n          y: [6595.97, 6602.01, 6588.17, 6602]\n        },\n        {\n          x: new Date(1538847000000),\n          y: [6602, 6607, 6596.51, 6599.95]\n        },\n        {\n          x: new Date(1538848800000),\n          y: [6600.63, 6601.21, 6590.39, 6591.02]\n        },\n        {\n          x: new Date(1538850600000),\n          y: [6591.02, 6603.08, 6591, 6591]\n        },\n        {\n          x: new Date(1538852400000),\n          y: [6591, 6601.32, 6585, 6592]\n        },\n        {\n          x: new Date(1538854200000),\n          y: [6593.13, 6596.01, 6590, 6593.34]\n        },\n        {\n          x: new Date(1538856000000),\n          y: [6593.34, 6604.76, 6582.63, 6593.86]\n        },\n        {\n          x: new Date(1538857800000),\n          y: [6593.86, 6604.28, 6586.57, 6600.01]\n        },\n        {\n          x: new Date(1538859600000),\n          y: [6601.81, 6603.21, 6592.78, 6596.25]\n        },\n        {\n          x: new Date(1538861400000),\n          y: [6596.25, 6604.2, 6590, 6602.99]\n        },\n        {\n          x: new Date(1538863200000),\n          y: [6602.99, 6606, 6584.99, 6587.81]\n        },\n        {\n          x: new Date(1538865000000),\n          y: [6587.81, 6595, 6583.27, 6591.96]\n        },\n        {\n          x: new Date(1538866800000),\n          y: [6591.97, 6596.07, 6585, 6588.39]\n        },\n        {\n          x: new Date(1538868600000),\n          y: [6587.6, 6598.21, 6587.6, 6594.27]\n        },\n        {\n          x: new Date(1538870400000),\n          y: [6596.44, 6601, 6590, 6596.55]\n        },\n        {\n          x: new Date(1538872200000),\n          y: [6598.91, 6605, 6596.61, 6600.02]\n        },\n        {\n          x: new Date(1538874000000),\n          y: [6600.55, 6605, 6589.14, 6593.01]\n        },\n        {\n          x: new Date(1538875800000),\n          y: [6593.15, 6605, 6592, 6603.06]\n        },\n        {\n          x: new Date(1538877600000),\n          y: [6603.07, 6604.5, 6599.09, 6603.89]\n        },\n        {\n          x: new Date(1538879400000),\n          y: [6604.44, 6604.44, 6600, 6603.5]\n        },\n        {\n          x: new Date(1538881200000),\n          y: [6603.5, 6603.99, 6597.5, 6603.86]\n        },\n        {\n          x: new Date(1538883000000),\n          y: [6603.85, 6605, 6600, 6604.07]\n        },\n        {\n          x: new Date(1538884800000),\n          y: [6604.98, 6606, 6604.07, 6606]\n        },\n      ]\n    }\n  ]\n  ","import moment from 'moment';\nimport {groupBy, maxBy, minBy} from 'lodash';\n\nexport const buildGraphData = (orders) => {\n    orders = groupBy(orders, (o) => moment.unix(o._timestamp).startOf('hour').format());\n    const hours = Object.keys(orders);\n    \n    const graphData = hours.map((hour) => {\n        // calculate open, low, high, close\n        const hourGroup = orders[hour];\n        const open = hourGroup[0];\n        const close = hourGroup[hourGroup.length-1];\n        const high = maxBy(hourGroup, 'tokenPrice');\n        const low = minBy(hourGroup, 'tokenPrice');\n        return ({\n            x: new Date(hour),\n            y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n        });\n    });\n    return graphData;\n}","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\nimport {decorateFilledOrders} from './decorators/orders';\nimport {buildGraphData} from './decorators/priceChart';\nimport {filledOrdersLoaded, filledOrders} from './orders';\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded);\nexport const priceChartSelector = createSelector(\n    filledOrders,\n    (orders) => {\n        //ascending date, earliest to latest\n        orders = orders.sort((a,b) => a._timestamp - b._timestamp);\n        //decorate\n        orders = decorateFilledOrders(orders);\n        let lastOrder = orders[orders.length-1];\n        let secondLastOrder = orders[orders.length-2];\n        let lastPrice = get(lastOrder, 'tokenPrice', 0);\n        let secondLastPrice = get(secondLastOrder, 'tokenPrice', 0);\n\n        return ({\n            lastPrice,\n            lastPriceChange: (lastPrice >= secondLastPrice) ? '+' : '-',\n            series: [{\n                data: buildGraphData(orders)\n            }]\n        });\n    }\n)","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Spinner from './Spinner';\nimport Chart from 'react-apexcharts';\nimport {chartOptions} from './PriceChart.config';\nimport {priceChartLoadedSelector, priceChartSelector} from '../store/selectors/priceChart';\nimport { tokenNameSelector } from '../store/selectors/contracts';\n\nconst priceSymbol = (lastPriceChange) => {\n    let output;\n    if(lastPriceChange === '+') {\n        output = <span className=\"text-success\">&#9650;</span> // Green up tiangle\n    } else {\n        output = <span className=\"text-danger\">&#9660;</span> // Red down triangle\n    }\n    return(output);\n}\n\nconst showPriceChart = (props) => {\n    const {chartData, tokenName} = props;\n    return (\n        <div className=\"price-chart\">\n            <h4>{tokenName}/ETH &nbsp; {priceSymbol(chartData.lastPriceChange)} &nbsp; {chartData.lastPrice}</h4>\n            <Chart options={chartOptions} series={chartData.series} type=\"candlestick\" width=\"100%\" height=\"100%\" />\n        </div>\n    );\n}\n\nclass PriceChart extends Component {\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Graph\n                </div>\n                <div className=\"card-body\">\n                    {(this.props.showChart) ? showPriceChart(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        showChart: priceChartLoadedSelector(state),\n        chartData: priceChartSelector(state),\n        tokenName: tokenNameSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(PriceChart);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass BalanceForm extends Component {\n    render(){\n        const {onSubmit, placeHolder, onChange, buttonText} = this.props;\n        return (\n            <form className=\"row\" onSubmit={onSubmit}>\n                <div className=\"col-12 col-sm pr-sm-2\">\n                    <input type=\"number\" \n                        step=\"any\"\n                        min=\"0\"\n                        placeholder={placeHolder} \n                        onChange={onChange}\n                        className=\"form-control form-control-sm bg-dark text-white\"\n                        required />\n                </div>\n                <div className=\"col-12 col-sm-auto pl-sm-0\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block btn-sm\">{buttonText}</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nconst tableRow = (tokenName, walletAmount, exchangeAmount) => {\n    return (\n        <tr>\n            <th>{tokenName}</th>\n            <th>{walletAmount.toString()}</th>\n            <th>{exchangeAmount.toString()}</th>\n        </tr>\n    )\n}\n\nconst tableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Token</th>\n                <th>Wallet</th>\n                <th>Exchange</th>\n            </tr>\n        </thead>\n    );\n}\n\nclass BalanceTable extends Component {\n    render() {\n        const {hasHead, tokenName, walletAmount, exchangeAmount} = this.props;\n        return (\n            <table className=\"table table-dark table-sm small\">\n                {(hasHead) ? tableHead() : null}\n                <tbody>\n                    {tableRow(tokenName, walletAmount, exchangeAmount)}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {}\n}\n\nexport default connect(mapStateToProps)(BalanceTable);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { exchangeSelector, \n    tokenSelector, \n    tokenBalanceSelector, \n    exchangeEtherBalanceSelector, \n    exchangeTokenBalanceSelector, \n    balancesLoadingSelector, \n    etherDepositAmountSelector,\n    etherWithdrawAmountSelector,\n    tokenDepositAmountSelector,\n    tokenWithdrawAmountSelector,\n    tokenNameSelector\n} from '../store/selectors/contracts';\nimport { web3Selector, accountSelector, etherBalanceSelector } from '../store/selectors/web3';\nimport { loadBalances, depositEther, withdrawEther, depositToken, withdrawToken} from '../store/interactions/contracts';\nimport { etherDepositAmountChanged, etherWithdrawAmountChanged, tokenDepositAmountChanged, tokenWithdrawAmountChanged } from '../store/actions';\nimport BalanceForm from './BalanceForm';\nimport BalanceTable from './BalanceTable';\n\n\nconst showForm = (props) => {\n    const {dispatch, etherBalance, tokenBalance, exchangeEtherBalance, exchangeTokenBalance, \n        etherDepositAmount, etherWithdrawAmount, tokenDepositAmount, tokenWithdrawAmount,\n        web3, exchange, token, account\n    } = props;\n\n    const depositEtherSubmit = (e) => {\n        e.preventDefault();\n        depositEther(web3, exchange, account, etherDepositAmount, dispatch);\n    }\n    const depositEtherChange = (e) => dispatch(etherDepositAmountChanged(e.target.value));\n\n    const depositTokenSubmit = (e) => {\n        e.preventDefault();\n        depositToken(web3, exchange, token, account, tokenDepositAmount, dispatch);\n    }\n    const depositTokenChange = (e) => dispatch(tokenDepositAmountChanged(e.target.value));\n\n    const withdrawEtherSubmit = (e) => {\n        e.preventDefault();\n        withdrawEther(web3, exchange, account, etherWithdrawAmount, dispatch);\n    }\n    const withdrawEtherChange = (e) => dispatch(etherWithdrawAmountChanged(e.target.value));\n\n    const withdrawTokenSubmit = (e) => {\n        e.preventDefault();\n        withdrawToken(web3, exchange, token, account, tokenWithdrawAmount, dispatch);\n    }\n    const withdrawTokenChange = (e) => dispatch(tokenWithdrawAmountChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey={\"deposit\"} className={\"bg-dark text-white\"}>\n            <Tab eventKey={\"deposit\"} title={\"Deposit\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={depositEtherSubmit} \n                    placeHolder={\"ETH Amount\"}\n                    onChange={depositEtherChange}\n                    buttonText={\"Deposit\"}\n                />\n                <BalanceTable hasHead={false} tokenName={props.tokenName} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={depositTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={depositTokenChange}\n                    buttonText={\"Deposit\"}  \n                />\n            </Tab>\n            <Tab eventKey={\"withdraw\"} title={\"Withdraw\"} className={\"bg-dark\"}>\n                <BalanceTable hasHead={true} tokenName={\"ETH\"} walletAmount={etherBalance} exchangeAmount={exchangeEtherBalance} />\n                <BalanceForm \n                    onSubmit={withdrawEtherSubmit} \n                    placeHolder={\"ETH Amount\"} \n                    onChange={withdrawEtherChange}\n                    buttonText={\"Withdraw\"}    \n                />\n                <BalanceTable hasHead={false} tokenName={props.tokenName} walletAmount={tokenBalance} exchangeAmount={exchangeTokenBalance} />\n                <BalanceForm \n                    onSubmit={withdrawTokenSubmit} \n                    placeHolder={\"Token Amount\"} \n                    onChange={withdrawTokenChange}\n                    buttonText={\"Withdraw\"}    \n                />\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass Balance extends Component {\n\n    componentWillMount() {\n        this.loadBlockchainData();\n    }\n\n    async loadBlockchainData() {\n        const {dispatch, exchange, token, account, web3} = this.props;\n        await loadBalances(web3, exchange, token, account, dispatch);\n    }\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    Balance\n                </div>\n                <div className=\"card-body\">\n                    {this.props.showForm ? showForm(this.props) : <Spinner />}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const balancesLoading = balancesLoadingSelector(state)\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        tokenName: tokenNameSelector(state),\n        etherBalance: etherBalanceSelector(state),\n        tokenBalance: tokenBalanceSelector(state),\n        exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n        exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n        balancesLoading,\n        showForm: !balancesLoading,\n        etherDepositAmount: etherDepositAmountSelector(state),\n        etherWithdrawAmount: etherWithdrawAmountSelector(state),\n        tokenDepositAmount: tokenDepositAmountSelector(state),\n        tokenWithdrawAmount: tokenWithdrawAmountSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Balance);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {tokenNameSelector} from '../store/selectors/contracts';\n\nclass OrderForm extends Component {\n    render(){\n        const {onSubmit, \n            amountOnChange, \n            priceOnChange, \n            buttonText, \n            buyOrSell,\n            tokenName\n        } = this.props;\n        return (\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Amount (${tokenName})`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"number\"\n                            step=\"any\"\n                            min=\"0\"\n                            placeholder=\"amount\"\n                            onChange={amountOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <div className=\"form-group small\">\n                    <label>{`${buyOrSell} Price`}</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            step=\"any\"\n                            min=\"0\"\n                            placeholder=\"price\"\n                            onChange={priceOnChange}\n                            className=\"form-control form-control-sm bg-dark text-white\"\n                            required />\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-sm btn-block\">{buttonText}</button>\n            </form>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        tokenName: tokenNameSelector(state)\n    };\n}\n\nexport default connect(mapStateToProps)(OrderForm);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Tabs, Tab} from 'react-bootstrap';\nimport {buyOrderSelector, sellOrderSelector} from '../store/selectors/orders';\nimport {web3Selector, accountSelector} from '../store/selectors/web3';\nimport {tokenSelector, exchangeSelector} from '../store/selectors/contracts';\nimport {makeBuyOrder, makeSellOrder} from '../store/interactions/orders';\nimport OrderForm from './OrderForm';\nimport {buyOrderAmountChanged, buyOrderPriceChanged, sellOrderAmountChanged, sellOrderPriceChanged} from '../store/actions';\nimport Spinner from './Spinner';\nimport {removeTrailingZeros} from '../helpers';\n\n\nconst showForm = (props) => {\n    const {dispatch, web3, exchange, token, account, buyOrder, sellOrder, showBuyTotal, showSellTotal} = props;\n    \n    const buyOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account);\n    }\n    const buyAmountChanged = (e) => dispatch(buyOrderAmountChanged(e.target.value));\n    const buyPriceChanged = (e) => dispatch(buyOrderPriceChanged(e.target.value));\n\n    const sellOrderOnSubmit = (e) => {\n        e.preventDefault();\n        makeSellOrder(dispatch, exchange, token, web3, sellOrder, account);\n    }\n    const sellAmountChanged = (e) => dispatch(sellOrderAmountChanged(e.target.value));\n    const sellPriceChanged = (e) => dispatch(sellOrderPriceChanged(e.target.value));\n\n    return (\n        <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n            <Tab className=\"bg-dark\" title=\"Buy\" eventKey=\"buy\">\n                <OrderForm\n                    onSubmit={buyOrderOnSubmit}\n                    amountOnChange={buyAmountChanged}\n                    priceOnChange={buyPriceChanged}\n                    buttonText={\"Create Buy Order\"}\n                    buyOrSell={\"Buy\"}\n                />\n                { showBuyTotal ? <small>Total: {removeTrailingZeros((buyOrder.amount * buyOrder.price).toFixed(18))} ETH</small> : null }\n            </Tab>\n            <Tab className=\"bg-dark\" title=\"Sell\" eventKey=\"sell\">\n                <OrderForm\n                    onSubmit={sellOrderOnSubmit}\n                    amountOnChange={sellAmountChanged}\n                    priceOnChange={sellPriceChanged}\n                    buttonText={\"Create Sell Order\"}\n                    buyOrSell={\"Sell\"}\n                />\n                { showSellTotal ? <small>Total: {removeTrailingZeros((sellOrder.amount * sellOrder.price).toFixed(18))} ETH</small> : null }\n            </Tab>\n        </Tabs>\n    )\n}\n\nclass NewOrder extends Component {\n\n    render() {\n        return (\n            <div className=\"card bg-dark text-white\">\n                <div className=\"card-header\">\n                    New Order\n                </div>\n                <div className=\"card-body\">\n                    {showForm? showForm(this.props) : <Spinner type=\"div\" />}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n    const buyOrder = buyOrderSelector(state);\n    const sellOrder = sellOrderSelector(state);\n\n    return {\n        account: accountSelector(state),\n        exchange: exchangeSelector(state),\n        web3: web3Selector(state),\n        token: tokenSelector(state),\n        buyOrder,\n        sellOrder,\n        showForm: !buyOrder.making && !sellOrder.making,\n        showBuyTotal: buyOrder.amount && buyOrder.price,\n        showSellTotal: sellOrder.amount && sellOrder.price\n    }\n}\n\nexport default connect(mapStateToProps)(NewOrder);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { exchangeSelector, tokenSelector } from '../store/selectors/contracts';\nimport { subscribeToEvents } from '../store/interactions/subscriptions';\nimport { loadAllOrders } from '../store/interactions/orders';\nimport Trades from './Trades';\nimport OrderBook from './OrderBook';\nimport MyTransactions from './MyTransactions';\nimport PriceChart from './PriceChart';\nimport Balance from './Balance';\nimport NewOrder from './NewOrder';\n\nclass Content extends Component {\n\n\tcomponentWillMount() {\n\t\tthis.loadBlockchainData(this.props);\n\t}\n\n\tasync loadBlockchainData(props) {\n        const {exchange, dispatch, token} = props;\n        await loadAllOrders(dispatch, exchange, token);\n        await subscribeToEvents(dispatch, exchange);\n\t}\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"vertical-split\">\n                    <Balance />\n                    <NewOrder />\n                </div>\n                <OrderBook />\n                <div className=\"vertical-split\">\n                    <PriceChart />\n                    <MyTransactions />\n                </div>\n                <Trades />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        exchange: exchangeSelector(state),\n        token: tokenSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps)(Content);","import { web3Loaded, web3AccountLoaded } from '../actions';\nimport Web3 from 'web3';\n\nconst ethereum = Web3.givenProvider\n\nexport const loadWeb3 = (dispatch) => {\n    const web3 = new Web3(ethereum || 'http://localhost:7545');\n    dispatch(web3Loaded(web3));\n    return web3;\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n    await ethereum.enable()\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    dispatch(web3AccountLoaded(account));\n    return account;\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport {connect} from 'react-redux';\nimport {loadWeb3, loadAccount} from '../store/interactions/web3';\nimport {loadToken, loadExchange, loadPairs, loadAvailableTokens} from '../store/interactions/contracts';\nimport { contractsLoadedSelector } from '../store/selectors/contracts';\n\n\nclass App extends Component {\n\n\tcomponentWillMount() {\n\t\t//dispatch auto-included in props with redux in react\n\t\tthis.loadBlockchainData(this.props.dispatch);\n\t}\n\n\tasync loadBlockchainData(dispatch) {\n\t\tconst web3 = loadWeb3(dispatch);\n\t\tif (!web3) {\n\t\t\talert('Web3 unable to load');\n\t\t\treturn;\n\t\t}\n\t\tconst networkId = await web3.eth.net.getId();\n\t\tconst accountLoaded = await loadAccount(web3, dispatch);\n\t\tif(!accountLoaded) {\n\t\t\talert(\"Could not load account\");\n\t\t\treturn;\n\t\t}\n\t\tconst pairs = await loadPairs(web3, networkId, dispatch);\n\t\tif (!pairs) {\n\t\t\talert('Pairs not loaded, please load a network with Pairs');\n\t\t}\n\t\tconst tokenAddress = await pairs.methods.addresses(0).call();\n\t\tconst token = await loadToken(web3, tokenAddress, dispatch);\n\t\tif (!token) {\n\t\t\talert('Token not loaded, please load a network with token');\n\t\t}\n\t\tconst exchange = await loadExchange(web3, networkId, dispatch);\n\t\tif (!exchange) {\n\t\t\talert('Exchange not loaded, please load a network with exchange');\n\t\t}\n\t\tawait loadAvailableTokens(web3, pairs, dispatch);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t{this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Makes state vars accessible in props\nfunction mapStateToProps(state){\n\treturn {\n\t\tcontractsLoaded: contractsLoadedSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\n\nfunction web3(state = {}, action) {\n    switch (action.type) {\n        case 'WEB3_LOADED':\n            return { ...state, connection: action.connection };\n        case 'WEB3_ACCOUNT_LOADED':\n            return { ...state, account: action.account };\n        case 'ETHER_BALANCE_LOADED':\n                return { ...state, balance: action.balance };\n        default:\n            return state;\n    }\n}\n\nfunction pairs(state = {}, action) {\n    switch(action.type) {\n        case 'PAIRS_LOADED':\n            return { ...state, contract: action.pairs };\n        case 'AVAILABLE_TOKENS_LOADING':\n            return { ...state, loaded: false };\n        case 'AVAILABLE_TOKENS_LOADED':\n            return { ...state, loaded: true };\n        case 'NUMBER_OF_TOKENS_LOADED':\n            return { ...state, number: action.numberOfTokens };\n        case 'TOKEN_PAIRS_LOADED':\n            return { ...state, tokens: action.pairs};\n        default:\n            return state;\n    }\n}\n\nfunction token(state = {}, action) {\n    switch (action.type) {\n        case 'TOKEN_LOADED':\n            return { ...state, loaded: true, contract: action.token, name: action.name };\n        case 'TOKEN_BALANCE_LOADED':\n                return { ...state, balance: action.balance };\n        default:\n            return state;\n    }\n}\n\nfunction exchange(state = {}, action) {\n    let index, data;\n    switch (action.type) {\n        case 'EXCHANGE_LOADED':\n            return { ...state, loaded: true, contract: action.exchange} ;\n        case 'CANCELLED_ORDERS_LOADED':\n            return { ...state, cancelledOrders: {loaded: true, data: action.cancelledOrders }};  \n        case 'ORDERS_LOADED':\n            return { ...state, orders: {loaded: true, data: action.orders }};      \n        case 'TRADES_LOADED':\n            return { ...state, trades: {loaded: true, data: action.trades }};\n        case 'ORDER_CANCELLING':\n            return { ...state, orderCancelling: true };\n        case 'ORDER_CANCELLED':\n            return { \n                ...state, \n                orderCancelling: false,\n                cancelledOrders: {\n                    ...state.cancelledOrders,\n                    data: [\n                        ...state.cancelledOrders.data,\n                        action.order\n                    ]\n                }\n            };\n        case 'ORDER_FILLING':\n            return { ...state, orderFilling: true };\n        case 'ORDER_FILLED':\n            //prevent duplicates in the redux store\n            index = state.trades.data.findIndex(order => order._id === action.order._id);\n            data = state.trades.data;\n            //if it doesn't already exist, add to the store\n            if (index === -1){\n                data = [...state.trades.data, action.order];\n            }\n            return {\n                ...state,\n                orderFilling:false,\n                trades: {\n                    ...state.trades,\n                    data\n                }\n            }\n        case 'EXCHANGE_ETHER_BALANCE_LOADED':\n            return { ...state, etherBalance: action.balance }\n        case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n            return { ...state, tokenBalance: action.balance }\n        case 'BALANCES_LOADING':\n            return { ...state, balancesLoading: true }\n        case 'BALANCES_LOADED':\n            return { ...state, balancesLoading: false }\n        case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n            return { ...state, etherDepositAmount: action.amount}\n        case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, etherWithdrawAmount: action.amount}\n        case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n                return { ...state, tokenDepositAmount: action.amount}\n        case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n            return { ...state, tokenWithdrawAmount: action.amount}\n        case 'BUY_ORDER_AMOUNT_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n        case 'BUY_ORDER_PRICE_CHANGED':\n            return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n        case 'BUY_ORDER_MAKING':\n            return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true} }\n        case 'SELL_ORDER_AMOUNT_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n        case 'SELL_ORDER_PRICE_CHANGED':\n            return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n        case 'SELL_ORDER_MAKING':\n            return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true} }\n        case 'ORDER_MADE':\n            //prevent duplicates in the redux store\n            index = state.orders.data.findIndex(order => order._id === action.order._id);\n            data = state.orders.data;\n            if (index === -1){\n                data = [...state.orders.data, action.order];\n            }\n            return {\n                ...state,\n                orders: {\n                    ...state.orders,\n                    data\n                },\n                buyOrder: {\n                    ...state.buyOrder,\n                    making:false\n                },\n                sellOrder: {\n                    ...state.sellOrder,\n                    making:false\n                }\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst rootReducer = new combineReducers({\n    web3,\n    token,\n    exchange,\n    pairs\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger }  from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n//connects redux browser to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preLoadedState){\n    return createStore(\n        rootReducer, \n        preLoadedState,\n        composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}